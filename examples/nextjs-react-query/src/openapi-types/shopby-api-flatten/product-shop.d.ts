/**
 * This file was generated by openapi-typescript-flatten
 */

import type { components } from '@/openapi-types/shopby-api-flatten/product-shop-public.d.ts';

export interface Get {
  /**
   * 추가할인 정보 조회하기
   * @description ## 부가설명 및 특이사항
  
  상품번호로 추가할인 정보 조회하는 API입니다
  
  ---
  ## [구매수량할인 사용시]
  ### 구매수량할인 정액할인: (옵션금액 - 정액할인금액) * 수량
  예시) 옵션금액 100원 일때, 옵션단위 5개 이상 10개 미만 구매시 __50원__ 할인
  | 상품(옵션) | 구매수량 | 구매수량할인 | 구매수량할인적용 | 최종금액 |
  | -------- | ------- | ------- | ------- | ------- |
  | 볼펜(빨강) | 3 | 적용불가 | - | 300 |
  | 볼펜(검정) | 5 | 적용가능 | (100-50) * 5 | 250 |
  | 볼펜(파랑) | 10 | 적용불가 | - | 1000 |
  ---
  ### 구매수량할인 정률할인: (옵션금액 * 수량) * (100 - 정률할인)%
  예시) 옵션금액 100원 일때, 옵션단위 5개 이상 10개 미만 구매시 __10%__ 할인
  | 상품(옵션) | 구매수량 | 구매수량할인 | 구매수량할인적용 | 최종금액 |
  | -------- | ------- | ------- | ------- | ------- |
  | 볼펜(빨강) | 3 | 적용불가 | - | 300 |
  | 볼펜(검정) | 5 | 적용가능 | (100 * 5) * (100-10)% | 450 |
  | 볼펜(파랑) | 10 | 적용불가 | - | 1000 |
   */
  '/additional-discounts/by-product-no': {
    params: {
      path?: never;
      query: {
        /**
         * @description 상품번호
         * @example 10000001
         */
        productNo: number;
      };
    };
    body?: never;
    data: components['schemas']['additional-discounts-by-product-no-78647450'];
    error: any;
  };

  /**
   * 브랜드 목록 조회하기
   * @description ## 부가설명 및 특이사항
  
  브랜드 목록 조회하는 API입니다
  
  Paging 기능 제공합니다
   */
  '/display/brands': {
    params?: {
      path?: never;
      query?: {
        /**
         * @description 검색할 브랜드명
         * @example "브랜드명"
         */
        'filter.name': string;
        /**
         * @description 검색할 카테고리 번호
         * @example "10000"
         */
        'filter.categoryNo': number;
        /**
         * @description 품절 상품 포함 여부(default: false)
         * @example false
         */
        'filter.soldOutIncluded': boolean;
        /**
         * @description 페이지 번호
         * @example "1"
         */
        pageNumber: number;
        /**
         * @description 한 페이지당 노출 수
         * @example "10"
         */
        pageSize: number;
        /**
         * @description 목록 카운트 포함 여부(default: false)
         * @example "true"
         */
        hasTotalCount: boolean;
        /**
         * @description DB검색 사용 (default: false , 검색엔진 사용)
         * @example "true"
         */
        fromDB: boolean;
        /**
         * @description 정렬 필드(default: PRODUCT_COUNT)
         * @example "PRODUCT_COUNT"
         */
        'sort.criterion': string;
        /**
         * @description 정렬 방식(default: DESC)
         * @example "DESC"
         */
        'sort.direction': string;
      };
    };
    body?: never;
    data: components['schemas']['display-brands-812449549'];
    error: any;
  };

  /**
   * 브랜드 추가 정보 조회하기
   * @description ## 부가설명 및 특이사항
  
  ### 브랜드 추가정보 조회하는 API입니다.
  - 브랜드 요청 번호는 최대 30개 까지 가능합니다.
   */
  '/display/brands/extraInfo': {
    params: {
      path?: never;
      query: {
        /**
         * @description 전시 브랜드 번호
         * @example "1, 2, 3"
         */
        displayBrandNos: number;
      };
    };
    body?: never;
    data: components['schemas']['display-brands-extraInfo1641009473'];
    error: any;
  };

  /**
   * 브랜드 상세 조회하기
   * @description ## 부가설명 및 특이사항
  
  브랜드 상세 조회하는 API입니다
  ## 화면 예시
  
  [![brand-search-img](http://image.toast.com/aaaaahb/api-description/display/[GET]%20display_brands_brandNo%20%EB%B8%8C%EB%9E%9C%EB%93%9C%20%EC%83%81%EC%84%B8.png?autox150)](http://image.toast.com/aaaaahb/api-description/display/[GET]%20display_brands_brandNo%20%EB%B8%8C%EB%9E%9C%EB%93%9C%20%EC%83%81%EC%84%B8.png)
   */
  '/display/brands/{brandNo}': {
    params: {
      path: {
        /**
         * @description 브랜드 번호
         * @example "1"
         */
        brandNo: string;
      };
      query?: {
        /**
         * @description summary 정보 포함 여부 (deprecated, 제공 안함)
         * @example "false"
         */
        includeSummaryInfo: string;
      };
    };
    body?: never;
    data: components['schemas']['display-brands-brandNo-491175852'];
    error: any;
  };

  /**
   * [샵바이 프리미엄 전용] 사은품 지급가능한 조건 조회하기
   * @description ## 부가설명 및 특이사항
  
  상품번호에 해당하는 지급가능한 조건 조회하는 API입니다
  
  샵바이 프리미엄 전용 API로, 샵바이 혹은 샵바이 프로에서는 사용되지 않습니다
   */
  '/free-gift-condition/{productNo}': {
    params: {
      path: {
        /**
         * @description 상품번호
         * @example 1000000
         */
        productNo: string;
      };
      query?: never;
    };
    body?: never;
    data: components['schemas']['free-gift-condition-productNo1611589026'];
    error: any;
  };

  /**
   * 비회원용 최근 본 상품 조회하기
   * @description ## 부가설명 및 특이사항
  
  비회원용 최근 본 상품 조회하는 API입니다
  
  localStorage에 저장한 mallProductNos로 최근 본 상품을 조회합니다
  ## 화면 예시
  
  [![guest-recently-viewed-img](http://image.toast.com/aaaaahb/api-description/product/%EC%B5%9C%EA%B7%BC%EC%83%81%ED%92%88/[GET]%20profile_recent-products%20%EC%B5%9C%EA%B7%BC%20%EB%B3%B8%20%EC%83%81%ED%92%88%20%EC%A1%B0%ED%9A%8C(%EB%B9%84%ED%9A%8C%EC%9B%90).png?autox150)](http://image.toast.com/aaaaahb/api-description/product/%EC%B5%9C%EA%B7%BC%EC%83%81%ED%92%88/[GET]%20profile_recent-products%20%EC%B5%9C%EA%B7%BC%20%EB%B3%B8%20%EC%83%81%ED%92%88%20%EC%A1%B0%ED%9A%8C(%EB%B9%84%ED%9A%8C%EC%9B%90).png)
  ## [상품 금액 적용]
  ### 기본 상품 판매가
  * 옵션이 없는 상품
  * 상품 등록 시, 기입한 판매가 그대로 적용
  * 옵션이 있는 상품
  * 상품 등록 시, 기입한 판매가 + 옵션가 적용
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) 인 경우\|\, 옵션1 구매가격은 10000원 옵션2 구매가격은 11000원
  * 세트 상품
  * 세트 상품의 옵션에 구성된 옵션(옵션있는 상품들의 옵션으로 세트 옵션 구성)의 구매가격의 합
  * 세트 옵션 구성이 달라질 수 있기때문에 당연히 옵션마다 가격 상이 함
  
  ### 즉시 할인
  * 옵션이 없는 상품
  * 판매가에 즉시할인이 적용된 가격
  * 옵션있는 상품\, 세트 상품
  * 판매가에 즉시할인이 적용된 가격 + 옵션가 가 최종 가격
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\) 이고 즉시 할인율 10% 인 경우\,
  옵션별 가격은 판매가 \*0.8 + 옵션가 이므로 따라서
  옵션 1 의 판매가격은 9000원, 옵션 2의 판매가격은 10000원, 옵션3의 판매가격은 11000원
  
  \* **옵션가격에서 즉시 할인이 적용 되는 것이 아님**
  
  ### 추가 할인
  * 할인 적용 순서 : 즉시 할인 -> 추가 할인
  * 즉시 할인 적용 된 판매가격에 추가 할인 적용
  * 예) 10000원 상품에 즉시 할인으로 1000원일 할인된다면, 9000원에서 추가 할인 설정에 따라 할인 적용
  
  **즉시 할인**과의 차이점이라면 적용되는 가격인데 즉시 할인의 경우 상품을 등록 할 때에 입력한 판매가 적용하지만, **추가 할인**은 실제 해당 상품의 구매 가격에 적용 (상품등록 시에 판매가에 적용되는 것이 아닌 실제 구매 금액에 적용)
  
  * 예) A상품(판매가15000원)
  
  \- 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\)
  
  \- 즉시 할인 : 5000원
  
  \- 추가 할인 : 10%
  
  옵션 1 구매가격 : ((15000-5000) + 0)\*0.9 = 9000
  
  옵션 2 구매가격 : ((15000-5000) + 1000)\*0.9 = 9900
  
  옵션 2 구매가격 : ((15000-5000) + 2000)\*0.9 = 10800
   */
  '/guest/recent-products': {
    params: {
      path?: never;
      query: {
        /**
         * @description 상품 번호 리스트
         * @example [10000001]
         */
        mallProductNos: string;
        /**
         * @description 품절상품 포함 여부(default : true)
         * @example "true"
         */
        soldout: boolean;
        /**
         * @description 옵션 값 포함 여부 (default: false)
         * @example "false"
         */
        hasOptionValues: boolean;
      };
    };
    body?: never;
    data: components['schemas']['profile-recent-products-1008217100'];
    error: any;
  };

  /**
   * 묶음 배송 상품 목록 조회하기
   * @description ## 부가설명 및 특이사항
  
  묶음 배송 상품 목록 조회하는 API입니다
  
  ## [상품 금액 적용]
  ### 기본 상품 판매가
  * 옵션이 없는 상품
  * 상품 등록 시, 기입한 판매가 그대로 적용
  * 옵션이 있는 상품
  * 상품 등록 시, 기입한 판매가 + 옵션가 적용
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) 인 경우\|\, 옵션1 구매가격은 10000원 옵션2 구매가격은 11000원
  * 세트 상품
  * 세트 상품의 옵션에 구성된 옵션(옵션있는 상품들의 옵션으로 세트 옵션 구성)의 구매가격의 합
  * 세트 옵션 구성이 달라질 수 있기때문에 당연히 옵션마다 가격 상이 함
  
  ### 즉시 할인
  * 옵션이 없는 상품
  * 판매가에 즉시할인이 적용된 가격
  * 옵션있는 상품\, 세트 상품
  * 판매가에 즉시할인이 적용된 가격 + 옵션가 가 최종 가격
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\) 이고 즉시 할인율 10% 인 경우\,
  옵션별 가격은 판매가 \*0.8 + 옵션가 이므로 따라서
  옵션 1 의 판매가격은 9000원, 옵션 2의 판매가격은 10000원, 옵션3의 판매가격은 11000원
  
  \* **옵션가격에서 즉시 할인이 적용 되는 것이 아님**
  
  ### 추가 할인
  * 할인 적용 순서 : 즉시 할인 -> 추가 할인
  * 즉시 할인 적용 된 판매가격에 추가 할인 적용
  * 예) 10000원 상품에 즉시 할인으로 1000원일 할인된다면, 9000원에서 추가 할인 설정에 따라 할인 적용
  
  **즉시 할인**과의 차이점이라면 적용되는 가격인데 즉시 할인의 경우 상품을 등록 할 때에 입력한 판매가 적용하지만, **추가 할인**은 실제 해당 상품의 구매 가격에 적용 (상품등록 시에 판매가에 적용되는 것이 아닌 실제 구매 금액에 적용)
  
  * 예) A상품(판매가15000원)
  
  \- 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\)
  
  \- 즉시 할인 : 5000원
  
  \- 추가 할인 : 10%
  
  옵션 1 구매가격 : ((15000-5000) + 0)\*0.9 = 9000
  
  옵션 2 구매가격 : ((15000-5000) + 1000)\*0.9 = 9900
  
  옵션 2 구매가격 : ((15000-5000) + 2000)\*0.9 = 10800
   */
  '/products/bundle-shipping': {
    params: {
      path?: never;
      query: {
        /**
         * @description 배송 템플릿 번호
         * @example 100
         */
        deliveryTemplateNo: number;
        /**
         * @description 옵션값 출력 여부 (default : false) (nullable)
         * @example true
         */
        hasOptionValues?: boolean;
        /**
         * @description 한 페이지당 노출 수 (default : 30) (nullable)
         * @example 30
         */
        pageSize?: number;
        /**
         * @description 페이지 번호 (default : 1) (nullable)
         * @example 1
         */
        pageNumber?: number;
        /**
         * @description 정렬 기준 (default : RECENT_PRODUCT) (nullable)
         * @example "SALE_CNT"
         */
        'productSort.criterion'?: string;
        /**
         * @description 정렬 방법 (default : DESCDeliveryFeignClient) (nullable)
         * @example "DESC"
         */
        'productSort.direction'?: string;
      };
    };
    body?: never;
    data: components['schemas']['products-bundle-shipping1332557899'];
    error: any;
  };

  /**
   * 상품 항목 조회하기
   * @description ## 부가설명 및 특이사항
  
  상품 항목을 조회하는 API입니다
  
  사용여부 = Y 인 상품 항목만 조횝니다.
   */
  '/products/custom-properties': {
    params?: never;
    body?: never;
    data: components['schemas']['products-custom-properties-1913755437'];
    error: any;
  };

  /**
   * 상품 번호 리스트로 추가 정보 조회
   * @description ## 부가설명 및 특이사항
  
  상품번호를 통해 extraInfo(추가정보)를 조회하는 API 입니다.
   */
  '/products/extraInfo': {
    params: {
      path?: never;
      query: {
        /**
         * @description 상품 번호
         * @example "10000001,10000002"
         */
        productNos: string;
      };
    };
    body?: never;
    data: components['schemas']['products-extraInfo1880176592'];
    error: any;
  };

  /**
   * 인기 검색어 조회하기
   * @description ## 부가설명 및 특이사항
  
  인기 검색어 조회하는 API입니다
  
  * 인기 검색어는 현재 날짜를 기준으로 전 날에 유입된 검색어를 기준으로 노출합니다.
  
  * 예시: 2023년 1월 12일에 조회하는 경우, 2023년 1월 11일까지 유입된 검색어를 바탕으로 노출합니다.
  
  * 참고: 알파 환경은 검색어 유입이 거의 없는 관계로 개발 편의성을 위해 반환되는 값을 고정적으로 내보냅니다. 따라서 인기검색어 반환 값은 리얼 환경을 통해 확인바랍니다.
   */
  '/products/favoriteKeywords': {
    params?: {
      path?: never;
      query?: {
        /**
         * @description 사이즈
         * @example "10"
         */
        size: number;
      };
    };
    body?: never;
    data: components['schemas']['products-favoriteKeywords1672933518'];
    error: any;
  };

  /**
   * 옵션 목록 조회하기
   * @description ## 부가설명 및 특이사항
  
  옵션 목록을 조회하는 API입니다
   */
  '/products/options': {
    params: {
      path?: never;
      query: {
        /**
         * @description 상품 번호
         * @example [1,2,3]
         */
        productNos: number;
      };
    };
    body?: never;
    data: components['schemas']['products-options-814576919'];
    error: any;
  };

  /**
   * 상품 검색(search engine)하기
   * @description ## 부가설명 및 특이사항
  상품 목록 조회하는 API입니다.
  * Paging 기능 제공합니다. (페이지당 조회가능한 최대 상품 개수는 500개 입니다.)
  * 아래 Parameters에 해당하는 검색조건들의 경우, 매 10분 마다 캐시가 됩니다 ( ex. 10시 10분, 10시 20분, 10시 30분...)
  * ex. 10시 13분에 상품명을 [테스트 상품 -> 임시 상품]으로 변경 후 '임시 상품'으로 검색 시, 10시 19분까지 검색되지않고, 10시 20분이후에 검색 가능합니다.
  
  ## 화면 예시
  [![product-search-img-1](http://image.toast.com/aaaaahb/api-description/product/%EC%83%81%ED%92%88/[GET]%20product_search%20%EC%83%81%ED%92%88%20%EA%B2%80%EC%83%89(search%20engine).png?autox150)](http://image.toast.com/aaaaahb/api-description/product/%EC%83%81%ED%92%88/[GET]%20product_search%20%EC%83%81%ED%92%88%20%EA%B2%80%EC%83%89(search%20engine).png)
  
  ---
  
  ## 참고
  상세 상품 정렬 기준 (order.by 파라미터)
  
  - MD추천순(MD_RECOMMEND): [서비스어드민 > 전시관리 > 전시상품 우선순위 관리] 메뉴에서 설정하신 정렬 순서로 상품이 노출됩니다.
     - ASC: 우선순위가 높은(숫자가 낮은) 상품 순으로 정렬됩니다. (1순위 -> 2순위 -> 3순위...)
     - DESC: 우선순위가 낮은(숫자가 높은) 상품 순으로 정렬됩니다. (3순위 -> 2순위 -> 1순위...)
  
  - 총판매량순(SALE_CNT):  현재까지 해당 상품이 판매된 판매량 순서입니다.
     - ASC: 총 판매량 수가 낮은 상품 순으로 정렬됩니다. (1개 판매 -> 2개 판매 -> 3개 판매...)
     - DESC: 총 판매량 수가 높은 상품 순으로 정렬됩니다. (3개 판매 -> 2개 판매 -> 1개 판매...)
     - “결제완료” 시점에 상품 수량을 카운트(+)하며, “임금대기” 건은 카운트하지 않음.
     - 클레임 처리 시 환불 시점에 차감 (-)되며, 교환 처리 시, 교환 상품은 차감되고 교환추가상품은 카운트됨.
  
  - 판매인기순(POPULAR): 판매가 및 인기도(1주일간 구매수량, 상품후기점수, 좋아요 수 등)에 점수를 부여하여 산출한 순서로 점수 산정 기준은 아래와 같습니다.
     - ASC: 인기점수가 낮은 상품 순으로 정렬됩니다. (100점 -> 200점 -> 300점...)
     - DESC: 인기점수가 높은 상품 순으로 정렬됩니다. (300점 -> 200점 -> 100점...)
     - 점수 기준
       - ```
         25 * 최근 1주일 구매횟수 * 가격별포인트 +
         10 * 최근 1주일 장바구니(cart) 추가 횟수 +
         10 * 최근 1주일 상품 좋아요(like) 클릭 횟수 +
         10 * 최근 1주일 위시리스트(찜하기) 추가 횟수 +
         5  * 최근 1주일 리뷰점수 평균
         ```
     - 가격별 포인트
       - ```
         0~1,000         1점
         1,000~5,000     2점
         5,000~10,000    3점
         10,000~30,000   4점
         30,000~50,000   5점
         50,000~70,000   6점
         70,000~         7점
         ```
  
  - 판매일자(SALE_YMD), 판매종료일자(SALE_END_YMD): 판매시작/종료일 순으로 상품을 정렬합니다.
     - ASC: 판매시작/종료일자 과거순으로 상품이 정렬됩니다. (1월1일 -> 2월10일...)
     - DESC: 판매시작/종료일자 최신순으로 상품이 정렬됩니다. (2월10일 -> 1월1일...)
  
  - 최근상품순(RECENT_PRODUCT): 상품 등록일 기준으로 상품을 정렬합니다.
     - ASC: 상품 등록일이 과거순으로 상품이 정렬됩니다. (1월1일 -> 2월10일...)
     - DESC: 상품 등록일이 최신순으로 상품이 정렬됩니다. (2월10일 -> 1월1일...)
  
  - 유효일자(EXPIRATION_DATE): 상품 유효일자 기준으로 상품을 정렬합니다.
     - ASC: 현재 날짜 기준으로 유효일자가 과거순으로 정렬됩니다. (1월1일 -> 2월10일...)
     - DESC: 현재 날짜 기준으로 유효일자가 최신순으로 정렬됩니다. (2월10일 -> 1월1일...)
     - 유효일자 정렬의 경우, 유효일자가 설정된 상품이 우선으로 나옵니다. (유효일자 있는 상품 > 유효일자 없는 상품 + 유효일자 지난 상품 - 나머지 상품은 상품번호가 최신순으로 정렬)
     - 유효일자와 현재 날짜가 동일한 경우, 유효일자가 있는 상품으로 취급합니다.
  
  상품항목추가정보 검색
     - 하나의 항목에서 여러개의 다중 항목 값을 검색할 경우 (SPACE 구분으로 검색) (아래 예시 참고)
       - filter.customProperties.propNos : 100
       - filter.customProperties.propValueNos : 1 2 3
     - 다중 항목에서 여러개의 다중 항목 값을 검색할 경우 (콤마(,) 구분으로 검색) (아래 예시 참고)
       - ※ 다중 항목으로 검색 시 콤마(,) 갯수를 맞춰줘야 합니다.
       - filter.customProperties.propNos : 100,101,102
       - filter.customProperties.propValueNos : 1 2 3,4 5 6,7 8 9
  
  유효일자 검색
     - 유효일자 검색 시, expirationDate에 "2023-10-31"로 검색하는 경우 아래와 같이 검색됩니다.
       - 현재시간을 "2023-10-21"이라고 할 때, "2023-10-21 ~ 2023-10-31"에 해당하는 유효일자를 검색합니다.
       - 양 끝 범위에 해당하는 일자는 포함해서 검색합니다.
  ## [상품 금액 적용]
  ### 기본 상품 판매가
  * 옵션이 없는 상품
    * 상품 등록 시, 기입한 판매가 그대로 적용
  * 옵션이 있는 상품
    * 상품 등록 시, 기입한 판매가 + 옵션가 적용
    * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) 인 경우\|\, 옵션1 구매가격은 10000원 옵션2 구매가격은 11000원
  * 세트 상품
    * 세트 상품의 옵션에 구성된 옵션(옵션있는 상품들의 옵션으로 세트 옵션 구성)의 구매가격의 합
    * 세트 옵션 구성이 달라질 수 있기때문에 당연히 옵션마다 가격 상이 함
  
  ### 즉시 할인
  * 옵션이 없는 상품
    * 판매가에 즉시할인이 적용된 가격
  * 옵션있는 상품\, 세트 상품
    * 판매가에 즉시할인이 적용된 가격 + 옵션가 가 최종 가격
    * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\) 이고 즉시 할인율 10% 인 경우\,
    옵션별 가격은 판매가 \*0.8 + 옵션가 이므로 따라서
    옵션 1 의 판매가격은 9000원, 옵션 2의 판매가격은 10000원, 옵션3의 판매가격은 11000원
  
  \* **옵션가격에서 즉시 할인이 적용 되는 것이 아님**
  
  ### 추가 할인
  * 할인 적용 순서 : 즉시 할인 -> 추가 할인
  * 즉시 할인 적용 된 판매가격에 추가 할인 적용
    * 예) 10000원 상품에 즉시 할인으로 1000원일 할인된다면, 9000원에서 추가 할인 설정에 따라 할인 적용
  
  **즉시 할인**과의 차이점이라면 적용되는 가격인데 즉시 할인의 경우 상품을 등록 할 때에 입력한 판매가 적용하지만, **추가 할인**은 실제 해당 상품의 구매 가격에 적용 (상품등록 시에 판매가에 적용되는 것이 아닌 실제 구매 금액에 적용)
  
  * 예) A상품(판매가15000원)
  
    \- 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\)
  
    \- 즉시 할인 : 5000원
  
    \- 추가 할인 : 10%
  
    옵션 1 구매가격 : ((15000-5000) + 0)\*0.9 = 9000
  
    옵션 2 구매가격 : ((15000-5000) + 1000)\*0.9 = 9900
  
    옵션 2 구매가격 : ((15000-5000) + 2000)\*0.9 = 10800
   */
  '/products/search': {
    params?: {
      path?: never;
      query?: {
        /**
         * @description 판매가 - 즉시할인 - 추가상품할인이 적용된 "최종 할인가격", between검색일 경우 입력값 2개 필요(다수 정보는 항목 추가 필요
         * @example "1000"
         */
        'filter.discountedPrices': number;
        /**
         * @description 검색어(여러 검색어일 경우 space 로 구분 AND 연산)
         * @example "검색어1 검색어2"
         */
        'filter.keywords': string;
        /**
         * @description 결과내 검색(결과 내 검색의 검색어 space 구분 AND 연산)
         * @example "검색어1 검색어2"
         */
        'filter.keywordInResult': string;
        /**
         * @description 최종 할인가격 검색 조건 (GT: 초과 - GREATER THAN, LTE: 미만 -LESS GREATER THAN, GTE: 이상 - GREATER THAN or EQUAL, EQ: 동등 - EQUAL, BETWEEN: 사이의
         * @example "GT"
         */
        'filter.discountedComparison': string;
        /**
         * @description 배송비 타입 (FREE: Free, CONDITIONAL: conditional free, FIXED_FEE: Paid (Fixed Shipping Fee))
         * @example "free"
         */
        'filter.deliveryConditionType': string;
        /**
         * @description 판매 상태 ( 전체 판매 상태 조회: ALL_CONDITIONS, 판매대기와 판매중 상품 조회: READY_ONSALE, 판매중 상품만 조회: ONSALE - default, 예약판매중인 상품과 판매중인 상품만 조회: RESERVATION_AND_ONSALE)
         * @example "ALL_CONDITIONS"
         */
        'filter.saleStatus': string;
        /**
         * @description 품절 상품 포함 여부(default: false)
         * @example "false"
         */
        'filter.soldout': boolean;
        /**
         * @description 총 상품평 수 포함 여부(default: false, false 설정 시 무조건 0)
         * @example "false"
         */
        'filter.totalReviewCount': boolean;
        /**
         * @description 서비스에 계약된 모든 쇼핑몰 조회 여부 (default: false)
         * @example "false"
         */
        'filter.familyMalls': boolean;
        /**
         * @description 판매자관리코드 같은 상품 검색
         * @example "managementcode"
         */
        'filter.productManagementCd': string;
        /**
         * @description 조회시 제외할 상품번호
         * @example "10001"
         */
        'filter.excludeMallProductNo': number;
        /**
         * @description 조회할 상품번호
         * @example "10000"
         */
        'filter.includeMallProductNo': number;
        /**
         * @description 조회할 상품항목추가정보 번호
         * @example "100,101,102"
         */
        'filter.customProperties.propNos': string;
        /**
         * @description 조회할 상품항목추가정보 값
         * @example "1 2,3 4,5 6"
         */
        'filter.customProperties.propValueNos': string;
        /**
         * @description POPULAR:판매인기순 (DEFAULT), SALE_YMD:판매일자, SALE_END_YMD:판매종료일자, DISCOUNTED_PRICE:가격순, REVIEW:상품평, SALE_CNT:총판매량순, RECENT_PRODUCT:최근상품순, MD_RECOMMEND:MD추천순, LIKE_CNT: 좋아요, EXPIRATION_DATE: 유효일자
         * @example "POPULAR"
         */
        'order.by': string;
        /**
         * @description 정렬기준(default : DESC)
         * @example "DESC"
         */
        'order.direction': string;
        /**
         * @description 품절상품 뒤로 배치 여부(default = false)
         * @example "false"
         */
        'order.soldoutPlaceEnd': boolean;
        /**
         * @description 전시 카테고리 번호(여러개 일 경우 항목 추가)
         * @example "1,2,3,4"
         */
        categoryNos: string;
        /**
         * @description 제외할 전시 카테고리 번호(여러개 일 경우 항목 추가, 번호에 속한 모든 하위 카테고리 제외)
         * @example "1,2,3,4"
         */
        excludeCategoryNos: string;
        /**
         * @description 전시카테고리 검색 조건 (AND : 모두다 포함, OR : 한개라도 포함), default: OR
         * @example "AND"
         */
        categoryOperator: string;
        /**
         * @description 브랜드 번호(여러개 일 경우 항목 추가)
         * @example "1,2,3,4"
         */
        brandNos: string;
        /**
         * @description 파트너 번호(상품 공급업체 번호)
         * @example "1"
         */
        partnerNo: number;
        /**
         * @description 클라이언트 키
         * @example "test-client-key"
         */
        clientKey: number;
        /**
         * @description 페이지 번호
         * @example "1"
         */
        pageNumber: number;
        /**
         * @description 한 페이지당 노출 수 (최대 요청 가능: 500개)
         * @example "10"
         */
        pageSize: number;
        /**
         * @description 세일 상품만 조회 여부(default: false)
         * @example "false"
         */
        onlySaleProduct: boolean;
        /**
         * @description 목록에 최대 할인 쿠폰 가격 포함 여부(default: false)
         * @example "false"
         */
        hasMaxCouponAmt: boolean;
        /**
         * @description 목록 카운트 포함 여부(default: false)
         * @example "false"
         */
        hasTotalCount: boolean;
        /**
         * @description 목록에 옵션 value 포함 여부(default: false)
         * @example "false"
         */
        hasOptionValues: boolean;
        /**
         * @description summary 정보 포함 여부(default: true)
         * @example "true"
         */
        includeSummaryInfo: boolean;
        /**
         * @description 배송 구분 (Enum: [ PARTNER: Partner Shipping, MALL: Mall Shipping ])
         * @example "MALL"
         */
        shippingAreaType: string;
        /**
         * @description 유효일자
         * @example "2023-12-31"
         */
        expirationDate: string;
        /**
         * @description 상품 그룹관리코드
         * @example "PA000"
         */
        groupManagementCode: string;
      };
    };
    body?: never;
    data: components['schemas']['products-search1025470211'];
    error: any;
  };

  /**
   * 상품번호를 통한 배송 정보 및 배송 불가 국가 조회 API
   * @description ## 부가설명 및 특이사항
  
  상품번호를 통해 배송 정보 및 배송 불가 국가를 조회하는 API 입니다.
   */
  '/products/shipping-info': {
    params: {
      path?: never;
      query: {
        /**
         * @description 상품 번호
         * @example "10000001"
         */
        productNos: string;
      };
    };
    body?: never;
    data: components['schemas']['products-shipping-info-448668919'];
    error: any;
  };

  /**
   * 상품 상세 조회하기
   * @description ## 부가설명 및 특이사항
  
  해당 상품 번호에 대한 상세, 이미지, 옵션 정보를 조회하는 API입니다
  ## 화면 예시
  
  [![product-detail-img-1](http://image.toast.com/aaaaahb/api-description/product/%EC%83%81%ED%92%88/[GET]%20product_productNo%20%EC%83%81%ED%92%88%20%EC%83%81%EC%84%B8%201-3.png?autox150)](http://image.toast.com/aaaaahb/api-description/product/%EC%83%81%ED%92%88/[GET]%20product_productNo%20%EC%83%81%ED%92%88%20%EC%83%81%EC%84%B8%201-3.png)
  ## [상품 금액 적용]
  ### 기본 상품 판매가
  * 옵션이 없는 상품
  * 상품 등록 시, 기입한 판매가 그대로 적용
  * 옵션이 있는 상품
  * 상품 등록 시, 기입한 판매가 + 옵션가 적용
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) 인 경우\|\, 옵션1 구매가격은 10000원 옵션2 구매가격은 11000원
  * 세트 상품
  * 세트 상품의 옵션에 구성된 옵션(옵션있는 상품들의 옵션으로 세트 옵션 구성)의 구매가격의 합
  * 세트 옵션 구성이 달라질 수 있기때문에 당연히 옵션마다 가격 상이 함
  
  ### 즉시 할인
  * 옵션이 없는 상품
  * 판매가에 즉시할인이 적용된 가격
  * 옵션있는 상품\, 세트 상품
  * 판매가에 즉시할인이 적용된 가격 + 옵션가 가 최종 가격
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\) 이고 즉시 할인율 10% 인 경우\,
  옵션별 가격은 판매가 \*0.8 + 옵션가 이므로 따라서
  옵션 1 의 판매가격은 9000원, 옵션 2의 판매가격은 10000원, 옵션3의 판매가격은 11000원
  
  \* **옵션가격에서 즉시 할인이 적용 되는 것이 아님**
  
  ### 추가 할인
  * 할인 적용 순서 : 즉시 할인 -> 추가 할인
  * 즉시 할인 적용 된 판매가격에 추가 할인 적용
  * 예) 10000원 상품에 즉시 할인으로 1000원일 할인된다면, 9000원에서 추가 할인 설정에 따라 할인 적용
  
  **즉시 할인**과의 차이점이라면 적용되는 가격인데 즉시 할인의 경우 상품을 등록 할 때에 입력한 판매가 적용하지만, **추가 할인**은 실제 해당 상품의 구매 가격에 적용 (상품등록 시에 판매가에 적용되는 것이 아닌 실제 구매 금액에 적용)
  
  * 예) A상품(판매가15000원)
  
  \- 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\)
  
  \- 즉시 할인 : 5000원
  
  \- 추가 할인 : 10%
  
  옵션 1 구매가격 : ((15000-5000) + 0)\*0.9 = 9000
  
  옵션 2 구매가격 : ((15000-5000) + 1000)\*0.9 = 9900
  
  옵션 2 구매가격 : ((15000-5000) + 2000)\*0.9 = 10800
   */
  '/products/{productNo}': {
    params: {
      path: {
        /**
         * @description 상품번호
         * @example 10000001
         */
        productNo: string;
      };
      query?: {
        /**
         * @description 인입 채널 유형(NAVER_EP, DANAWA, ENURI, WONDER, COOCHA, FACEBOOK 또는 사용자 설정)
         * @example "NAVER_EP"
         */
        channelType: string;
      };
    };
    body?: never;
    data: components['schemas']['products-productNo989381871'];
    error: any;
  };

  /**
   * 베스트 리뷰 상품 검색(search engine)하기
   * @description ## 부가설명 및 특이사항
  
  베스트 리뷰 상품 검색하는 API입니다.
  
  전일 ~ 7일 전까지의 평점과 전체기간 평점을 합산한 최종 점수로 정렬된 상품을 조회합니다.
  
  동일한 점수의 경우 베스트 리뷰 점수 -> 총 리뷰 개수 -> 최근 등록 순으로 정렬합니다.
  ## 화면 예시
  
  [![best-review-product-search-img-1](http://image.toast.com/aaaaahb/api-description/product/%EC%83%81%ED%92%88/[GET]%20product_best-seller_search%20%EB%B2%A0%EC%8A%A4%ED%8A%B8%20%EC%85%80%EB%9F%AC%20%EC%83%81%ED%92%88%20%EA%B2%80%EC%83%89(search%20engine).png?autox150)](http://image.toast.com/aaaaahb/api-description/product/%EC%83%81%ED%92%88/[GET]%20product_best-seller_search%20%EB%B2%A0%EC%8A%A4%ED%8A%B8%20%EC%85%80%EB%9F%AC%20%EC%83%81%ED%92%88%20%EA%B2%80%EC%83%89(search%20engine).png)
  ## [상품 금액 적용]
  ### 기본 상품 판매가
  * 옵션이 없는 상품
  * 상품 등록 시, 기입한 판매가 그대로 적용
  * 옵션이 있는 상품
  * 상품 등록 시, 기입한 판매가 + 옵션가 적용
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) 인 경우\|\, 옵션1 구매가격은 10000원 옵션2 구매가격은 11000원
  * 세트 상품
  * 세트 상품의 옵션에 구성된 옵션(옵션있는 상품들의 옵션으로 세트 옵션 구성)의 구매가격의 합
  * 세트 옵션 구성이 달라질 수 있기때문에 당연히 옵션마다 가격 상이 함
  
  ### 즉시 할인
  * 옵션이 없는 상품
  * 판매가에 즉시할인이 적용된 가격
  * 옵션있는 상품\, 세트 상품
  * 판매가에 즉시할인이 적용된 가격 + 옵션가 가 최종 가격
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\) 이고 즉시 할인율 10% 인 경우\,
  옵션별 가격은 판매가 \*0.8 + 옵션가 이므로 따라서
  옵션 1 의 판매가격은 9000원, 옵션 2의 판매가격은 10000원, 옵션3의 판매가격은 11000원
  
  \* **옵션가격에서 즉시 할인이 적용 되는 것이 아님**
  
  ### 추가 할인
  * 할인 적용 순서 : 즉시 할인 -> 추가 할인
  * 즉시 할인 적용 된 판매가격에 추가 할인 적용
  * 예) 10000원 상품에 즉시 할인으로 1000원일 할인된다면, 9000원에서 추가 할인 설정에 따라 할인 적용
  
  **즉시 할인**과의 차이점이라면 적용되는 가격인데 즉시 할인의 경우 상품을 등록 할 때에 입력한 판매가 적용하지만, **추가 할인**은 실제 해당 상품의 구매 가격에 적용 (상품등록 시에 판매가에 적용되는 것이 아닌 실제 구매 금액에 적용)
  
  * 예) A상품(판매가15000원)
  
  \- 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\)
  
  \- 즉시 할인 : 5000원
  
  \- 추가 할인 : 10%
  
  옵션 1 구매가격 : ((15000-5000) + 0)\*0.9 = 9000
  
  옵션 2 구매가격 : ((15000-5000) + 1000)\*0.9 = 9900
  
  옵션 2 구매가격 : ((15000-5000) + 2000)\*0.9 = 10800
   */
  '/products/best-review/search': {
    params?: {
      path?: never;
      query?: {
        /**
         * @description 서비스에 계약된 모든 쇼핑몰 조회 여부 (default: false)
         * @example "false"
         */
        'filter.familyMalls': boolean;
        /**
         * @description 카테고리 번호(여러개 일 경우 항목 추가)
         * @example "1"
         */
        categoryNos: number;
        /**
         * @description 클라이언트 키
         * @example "test-client-key"
         */
        clientKey: number;
        /**
         * @description 페이지 번호
         * @example "1"
         */
        pageNumber: number;
        /**
         * @description 한 페이지당 노출 수
         * @example "10"
         */
        pageSize: number;
        /**
         * @description 목록 카운트 포함 여부(default: false)
         * @example "false"
         */
        hasTotalCount: boolean;
        /**
         * @description 목록에 옵션 value 포함 여부(default: false)
         * @example "false"
         */
        hasOptionValues: boolean;
      };
    };
    body?: never;
    data: components['schemas']['products-best-review-search-1614480433'];
    error: any;
  };

  /**
   * 베스트 셀러 상품 검색(search engine)하기
   * @description ## 부가설명 및 특이사항
  
  베스트 셀러 상품 검색하는 API입니다
  
  1주일전 ~ 현재까지의 판매수로 정렬된 상품을 조회합니다
  
  예시: 2023-07-25 13:00:00 기준, 2023-07-18 13:00:00 ~ 2023-07-25 13:00:00 사이에 판매된 수를 기준으로 조회합니다.
  ## 화면 예시
  
  [![best-seller-product-search-img-1](http://image.toast.com/aaaaahb/api-description/product/%EC%83%81%ED%92%88/[GET]%20product_best-seller_search%20%EB%B2%A0%EC%8A%A4%ED%8A%B8%20%EC%85%80%EB%9F%AC%20%EC%83%81%ED%92%88%20%EA%B2%80%EC%83%89(search%20engine).png?autox150)](http://image.toast.com/aaaaahb/api-description/product/%EC%83%81%ED%92%88/[GET]%20product_best-seller_search%20%EB%B2%A0%EC%8A%A4%ED%8A%B8%20%EC%85%80%EB%9F%AC%20%EC%83%81%ED%92%88%20%EA%B2%80%EC%83%89(search%20engine).png)
  ## [상품 금액 적용]
  ### 기본 상품 판매가
  * 옵션이 없는 상품
  * 상품 등록 시, 기입한 판매가 그대로 적용
  * 옵션이 있는 상품
  * 상품 등록 시, 기입한 판매가 + 옵션가 적용
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) 인 경우\|\, 옵션1 구매가격은 10000원 옵션2 구매가격은 11000원
  * 세트 상품
  * 세트 상품의 옵션에 구성된 옵션(옵션있는 상품들의 옵션으로 세트 옵션 구성)의 구매가격의 합
  * 세트 옵션 구성이 달라질 수 있기때문에 당연히 옵션마다 가격 상이 함
  
  ### 즉시 할인
  * 옵션이 없는 상품
  * 판매가에 즉시할인이 적용된 가격
  * 옵션있는 상품\, 세트 상품
  * 판매가에 즉시할인이 적용된 가격 + 옵션가 가 최종 가격
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\) 이고 즉시 할인율 10% 인 경우\,
  옵션별 가격은 판매가 \*0.8 + 옵션가 이므로 따라서
  옵션 1 의 판매가격은 9000원, 옵션 2의 판매가격은 10000원, 옵션3의 판매가격은 11000원
  
  \* **옵션가격에서 즉시 할인이 적용 되는 것이 아님**
  
  ### 추가 할인
  * 할인 적용 순서 : 즉시 할인 -> 추가 할인
  * 즉시 할인 적용 된 판매가격에 추가 할인 적용
  * 예) 10000원 상품에 즉시 할인으로 1000원일 할인된다면, 9000원에서 추가 할인 설정에 따라 할인 적용
  
  **즉시 할인**과의 차이점이라면 적용되는 가격인데 즉시 할인의 경우 상품을 등록 할 때에 입력한 판매가 적용하지만, **추가 할인**은 실제 해당 상품의 구매 가격에 적용 (상품등록 시에 판매가에 적용되는 것이 아닌 실제 구매 금액에 적용)
  
  * 예) A상품(판매가15000원)
  
  \- 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\)
  
  \- 즉시 할인 : 5000원
  
  \- 추가 할인 : 10%
  
  옵션 1 구매가격 : ((15000-5000) + 0)\*0.9 = 9000
  
  옵션 2 구매가격 : ((15000-5000) + 1000)\*0.9 = 9900
  
  옵션 2 구매가격 : ((15000-5000) + 2000)\*0.9 = 10800
   */
  '/products/best-seller/search': {
    params?: {
      path?: never;
      query?: {
        /**
         * @description 서비스에 계약된 모든 쇼핑몰 조회 여부 (default: false)
         * @example "false"
         */
        'filter.familyMalls': boolean;
        /**
         * @description 카테고리 번호(여러개 일 경우 항목 추가)
         * @example "1"
         */
        categoryNos: number;
        /**
         * @description 클라이언트 키
         * @example "test-client-key"
         */
        clientKey: number;
        /**
         * @description 페이지 번호
         * @example "1"
         */
        pageNumber: number;
        /**
         * @description 한 페이지당 노출 수
         * @example "10"
         */
        pageSize: number;
        /**
         * @description 목록 카운트 포함 여부(default: false)
         * @example "false"
         */
        hasTotalCount: boolean;
        /**
         * @description 목록에 옵션 value 포함 여부(default: false)
         * @example "false"
         */
        hasOptionValues: boolean;
      };
    };
    body?: never;
    data: components['schemas']['products-best-seller-search1638148323'];
    error: any;
  };

  /**
   * 네이버 쇼핑 설정정보 조회
   * @description ## 부가설명 및 특이사항
  
  쇼핑몰에서 설정한 네이버 쇼핑 설정 정보를 조회할 수 있습니다.
   */
  '/products/configuration/naver-shopping': {
    params?: never;
    body?: never;
    data: components['schemas']['products-configuration-naver-shopping2141453285'];
    error: any;
  };

  /**
   * 상품 번호 리스트로 검색어 조회
   * @description ## 부가설명 및 특이사항
  
  상품번호를 통해 어드민에 등록된 검색어를 조회하는 API 입니다.
   */
  '/products/search/keywords': {
    params: {
      path?: never;
      query: {
        /**
         * @description 상품 번호
         * @example "100000, 100001"
         */
        productNos: number;
      };
    };
    body?: never;
    data: components['schemas']['products-search-keywords-937474294'];
    error: any;
  };

  /**
   * 상품 검색 결과 Summary 정보 조회(search engine)하기
   * @description ## 부가설명 및 특이사항
  
  상품 검색 결과의 Summary 정보만 응답하는 API입니다
  
  * 상품 검색 결과의 Summary 정보를 제공합니다. (displayCategories, brands 등)
  
  * 아래 Parameters에 해당하는 검색조건들의 경우, 매 10분 마다 캐시가 됩니다 ( ex. 10시 10분, 10시 20분, 10시 30분...)
  
  * ex. 10시 13분에 상품명을 [테스트 상품 -> 임시 상품]으로 변경 후 '임시 상품'으로 검색 시, 10시 19분까지 검색되지않고, 10시 20분이후에 검색 가능합니다.
   */
  '/products/search/summary': {
    params?: {
      path?: never;
      query?: {
        /**
         * @description 판매가 - 즉시할인 - 추가상품할인이 적용된 "최종 할인가격", between검색일 경우 입력값 2개 필요(다수 정보는 항목 추가 필요
         * @example "1000"
         */
        'filter.discountedPrices': number;
        /**
         * @description 검색어(여러 검색어일 경우 space 로 구분 AND 연산)
         * @example "검색어1 검색어2"
         */
        'filter.keywords': string;
        /**
         * @description 결과내 검색(결과 내 검색의 검색어 space 구분 AND 연산)
         * @example "검색어1 검색어2"
         */
        'filter.keywordInResult': string;
        /**
         * @description 최종 할인가격 검색 조건 (GT: 초과 - GREATER THAN, LTE: 미만 -LESS GREATER THAN, GTE: 이상 - GREATER THAN or EQUAL, EQ: 동등 - EQUAL, BETWEEN: 사이의
         * @example "GT"
         */
        'filter.discountedComparison': string;
        /**
         * @description 배송비 타입 (FREE: Free, CONDITIONAL: conditional free, FIXED_FEE: Paid (Fixed Shipping Fee))
         * @example "free"
         */
        'filter.deliveryConditionType': string;
        /**
         * @description 판매 상태 ( 전체 판매 상태 조회: ALL_CONDITIONS, 판매대기와 판매중 상품 조회: READY_ONSALE, 판매중 상품만 조회: ONSALE - default, 예약판매중인 상품과 판매중인 상품만 조회: RESERVATION_AND_ONSALE)
         * @example "ALL_CONDITIONS"
         */
        'filter.saleStatus': string;
        /**
         * @description 품절 상품 포함 여부(default: false)
         * @example "false"
         */
        'filter.soldout': boolean;
        /**
         * @description 총 상품평 수 포함 여부(default: false, false 설정 시 무조건 0)
         * @example "false"
         */
        'filter.totalReviewCount': boolean;
        /**
         * @description 서비스에 계약된 모든 쇼핑몰 조회 여부 (default: false)
         * @example "false"
         */
        'filter.familyMalls': boolean;
        /**
         * @description 판매자관리코드 같은 상품 검색
         * @example "managementcode"
         */
        'filter.productManagementCd': string;
        /**
         * @description 조회시 제외할 상품번호
         * @example "10001"
         */
        'filter.excludeMallProductNo': number;
        /**
         * @description 조회할 상품번호
         * @example "10000"
         */
        'filter.includeMallProductNo': number;
        /**
         * @description 전시 카테고리 번호(여러개 일 경우 항목 추가)
         * @example "1,2,3,4"
         */
        categoryNos: string;
        /**
         * @description 제외할 전시 카테고리 번호(여러개 일 경우 항목 추가, 번호에 속한 모든 하위 카테고리 제외)
         * @example "1,2,3,4"
         */
        excludeCategoryNos: string;
        /**
         * @description 전시카테고리 검색 조건 (AND : 모두다 포함, OR : 한개라도 포함), default: OR
         * @example "AND"
         */
        categoryOperator: string;
        /**
         * @description 브랜드 번호(여러개 일 경우 항목 추가)
         * @example "1,2,3,4"
         */
        brandNos: string;
        /**
         * @description 파트너 번호(상품 공급업체 번호)
         * @example "1"
         */
        partnerNo: number;
        /**
         * @description 세일 상품만 조회 여부(default: false)
         * @example "false"
         */
        onlySaleProduct: boolean;
        /**
         * @description 배송 구분 (Enum: [ PARTNER: Partner Shipping, MALL: Mall Shipping ])
         * @example "MALL"
         */
        shippingAreaType: string;
      };
    };
    body?: never;
    data: components['schemas']['products-search-summary554148782'];
    error: any;
  };

  /**
   * 상품번호에 해당하는 모든 전시카테고리 조회하기
   * @description ## 부가설명 및 특이사항
  
  상품번호에 해당하는 모든 전시카테고리 조회하기 API입니다
  
  마지막 뎁스 번호는 depth5No, 전체 전시카테고리 경로는 fullCategoryName 으로 확인할 수 있습니다.
   */
  '/products/{productNo}/display-categories': {
    params: {
      path: {
        /**
         * @description 상품 번호
         * @example 10000001
         */
        productNo: string;
      };
      query?: never;
    };
    body?: never;
    data: components['schemas']['products-productNo-display-categories-1677654964'];
    error: any;
  };

  /**
   * 옵션 조회하기
   * @description ## 부가설명 및 특이사항
  
  해당 상품 번호에 대한 옵션 정보를 조회하는 API입니다
  
  2가지 옵션 목록(계층, 원본)을 제공합니다
   */
  '/products/{productNo}/options': {
    params: {
      path: {
        /**
         * @description 상품 번호
         * @example 1
         */
        productNo: string;
      };
      query?: never;
    };
    body?: never;
    data: components['schemas']['products-productNo-options-583998608'];
    error: any;
  };

  /**
   * 상품번호로 상품우선구매권한 조회
   * @description ## 부가설명 및 특이사항
  
  상품에 매핑된 상품우선구매권한 정보를 조회하는 API 입니다.
   */
  '/products/{productNo}/purchasable': {
    params: {
      path: {
        /**
         * @description 상품 번호
         * @example 10001
         */
        productNo: string;
      };
      query?: never;
    };
    body?: never;
    data: components['schemas']['products-productNo-purchasable-150417114'];
    error: any;
  };

  /**
   * 관련 상품 정보 조회하기
   * @description ## 부가설명 및 특이사항
  
  관련 상품 정보를 조회하는 API입니다
  
  관련 상품은 설정된 기준에 따라 최대 500개까지 조회할 수 있습니다
  
  ## [상품 금액 적용]
  ### 기본 상품 판매가
  * 옵션이 없는 상품
  * 상품 등록 시, 기입한 판매가 그대로 적용
  * 옵션이 있는 상품
  * 상품 등록 시, 기입한 판매가 + 옵션가 적용
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) 인 경우\|\, 옵션1 구매가격은 10000원 옵션2 구매가격은 11000원
  * 세트 상품
  * 세트 상품의 옵션에 구성된 옵션(옵션있는 상품들의 옵션으로 세트 옵션 구성)의 구매가격의 합
  * 세트 옵션 구성이 달라질 수 있기때문에 당연히 옵션마다 가격 상이 함
  
  ### 즉시 할인
  * 옵션이 없는 상품
  * 판매가에 즉시할인이 적용된 가격
  * 옵션있는 상품\, 세트 상품
  * 판매가에 즉시할인이 적용된 가격 + 옵션가 가 최종 가격
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\) 이고 즉시 할인율 10% 인 경우\,
  옵션별 가격은 판매가 \*0.8 + 옵션가 이므로 따라서
  옵션 1 의 판매가격은 9000원, 옵션 2의 판매가격은 10000원, 옵션3의 판매가격은 11000원
  
  \* **옵션가격에서 즉시 할인이 적용 되는 것이 아님**
  
  ### 추가 할인
  * 할인 적용 순서 : 즉시 할인 -> 추가 할인
  * 즉시 할인 적용 된 판매가격에 추가 할인 적용
  * 예) 10000원 상품에 즉시 할인으로 1000원일 할인된다면, 9000원에서 추가 할인 설정에 따라 할인 적용
  
  **즉시 할인**과의 차이점이라면 적용되는 가격인데 즉시 할인의 경우 상품을 등록 할 때에 입력한 판매가 적용하지만, **추가 할인**은 실제 해당 상품의 구매 가격에 적용 (상품등록 시에 판매가에 적용되는 것이 아닌 실제 구매 금액에 적용)
  
  * 예) A상품(판매가15000원)
  
  \- 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\)
  
  \- 즉시 할인 : 5000원
  
  \- 추가 할인 : 10%
  
  옵션 1 구매가격 : ((15000-5000) + 0)\*0.9 = 9000
  
  옵션 2 구매가격 : ((15000-5000) + 1000)\*0.9 = 9900
  
  옵션 2 구매가격 : ((15000-5000) + 2000)\*0.9 = 10800
   */
  '/products/{productNo}/related-products': {
    params: {
      path: {
        /**
         * @description 상품번호
         * @example 10000001
         */
        productNo: string;
      };
      query?: never;
    };
    body?: never;
    data: components['schemas']['products-productNo-related-products-1576147319'];
    error: any;
  };

  /**
   * [샵바이프로 전용] 상품 번호와 쇼핑몰 번호에 해당하는 단축URL 조회하기
   * @description ## 부가설명 및 특이사항
  
  상품번호와 쇼핑몰 번호에 해당하는 단축URL 조회하는 API입니다
  
  어드민 설정을 제공하는 샵바이 프로에서만 사용가능한 API입니다
   */
  '/products/{productNo}/url-shortening': {
    params: {
      path: {
        /**
         * @description 상품번호
         * @example 101963333
         */
        productNo: string;
      };
      query?: never;
    };
    body?: never;
    data: components['schemas']['products-productNo-url-shortening-1808461975'];
    error: any;
  };

  /**
   * 상품에 해당하는 옵션 이미지 목록 조회하기
   * @description ## 부가설명 및 특이사항
  
  상품에 해당하는 옵션 이미지 목록 조회하는 API입니다
  
  옵션 상세 보기 시, 사용합니다
   */
  '/products/{productNo}/options/images': {
    params: {
      path: {
        /**
         * @description 상품 번호
         * @example 1
         */
        productNo: string;
      };
      query?: never;
    };
    body?: never;
    data: components['schemas']['products-productNo-options-images-575738914'];
    error: any;
  };

  /**
   * 옵션의 이미지 정보 조회하기
   * @description ## 부가설명 및 특이사항
  
  옵션의 이미지 목록을 조회하는 API입니다
  
  옵션 상세 보기 시, 사용합니다
   */
  '/products/{productNo}/options/{optionNo}/images': {
    params: {
      path: {
        /**
         * @description 상품 번호
         * @example 1
         */
        productNo: string;
        /**
         * @description 옵션 번호
         * @example 2
         */
        optionNo: string;
      };
      query?: never;
    };
    body?: never;
    data: components['schemas']['products-productNo-options-optionNo-images-111430120'];
    error: any;
  };

  /**
   * 회원이 좋아하는 상품목록 조회하기
   * @description ## 부가설명 및 특이사항
  
  회원이 좋아하는 상품목록 조회하는 API입니다
  
  로그인 이후에만 호출 가능합니다(accessToken)
  
  ## [상품 금액 적용]
  ### 기본 상품 판매가
  * 옵션이 없는 상품
  * 상품 등록 시, 기입한 판매가 그대로 적용
  * 옵션이 있는 상품
  * 상품 등록 시, 기입한 판매가 + 옵션가 적용
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) 인 경우\|\, 옵션1 구매가격은 10000원 옵션2 구매가격은 11000원
  * 세트 상품
  * 세트 상품의 옵션에 구성된 옵션(옵션있는 상품들의 옵션으로 세트 옵션 구성)의 구매가격의 합
  * 세트 옵션 구성이 달라질 수 있기때문에 당연히 옵션마다 가격 상이 함
  
  ### 즉시 할인
  * 옵션이 없는 상품
  * 판매가에 즉시할인이 적용된 가격
  * 옵션있는 상품\, 세트 상품
  * 판매가에 즉시할인이 적용된 가격 + 옵션가 가 최종 가격
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\) 이고 즉시 할인율 10% 인 경우\,
  옵션별 가격은 판매가 \*0.8 + 옵션가 이므로 따라서
  옵션 1 의 판매가격은 9000원, 옵션 2의 판매가격은 10000원, 옵션3의 판매가격은 11000원
  
  \* **옵션가격에서 즉시 할인이 적용 되는 것이 아님**
  
  ### 추가 할인
  * 할인 적용 순서 : 즉시 할인 -> 추가 할인
  * 즉시 할인 적용 된 판매가격에 추가 할인 적용
  * 예) 10000원 상품에 즉시 할인으로 1000원일 할인된다면, 9000원에서 추가 할인 설정에 따라 할인 적용
  
  **즉시 할인**과의 차이점이라면 적용되는 가격인데 즉시 할인의 경우 상품을 등록 할 때에 입력한 판매가 적용하지만, **추가 할인**은 실제 해당 상품의 구매 가격에 적용 (상품등록 시에 판매가에 적용되는 것이 아닌 실제 구매 금액에 적용)
  
  * 예) A상품(판매가15000원)
  
  \- 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\)
  
  \- 즉시 할인 : 5000원
  
  \- 추가 할인 : 10%
  
  옵션 1 구매가격 : ((15000-5000) + 0)\*0.9 = 9000
  
  옵션 2 구매가격 : ((15000-5000) + 1000)\*0.9 = 9900
  
  옵션 2 구매가격 : ((15000-5000) + 2000)\*0.9 = 10800
   */
  '/profile/like-products': {
    params?: {
      path?: never;
      query?: {
        /**
         * @description 페이지 번호
         * @example 1
         */
        pageNumber: number;
        /**
         * @description 한 페이지당 노출 수
         * @example 10
         */
        pageSize: number;
        /**
         * @description 목록 카운트 포함 여부(default: false)
         * @example "false"
         */
        hasTotalCount: string;
        /**
         * @description 최대쿠폰 할인가격 포함여부(default: false)
         * @example "false"
         */
        hasMaxCouponAmt: string;
      };
    };
    body?: never;
    data: components['schemas']['profile-like-products1120109227'];
    error: any;
  };

  /**
   * 최근 본 상품 조회하기
   * @description ## 부가설명 및 특이사항
  
  최근 본 상품 조회하는 API입니다
  
  로그인 이후에만 호출 가능(accessToken)합니다
  ## 화면 예시
  
  [![recently-viewed-img](http://image.toast.com/aaaaahb/api-description/product/%EC%B5%9C%EA%B7%BC%EC%83%81%ED%92%88/[DELETE]%20profile_recent-products%20%EC%B5%9C%EA%B7%BC%20%EB%B3%B8%20%EC%83%81%ED%92%88%20%EC%82%AD%EC%A0%9C.png?autox150)](http://image.toast.com/aaaaahb/api-description/product/%EC%B5%9C%EA%B7%BC%EC%83%81%ED%92%88/[DELETE]%20profile_recent-products%20%EC%B5%9C%EA%B7%BC%20%EB%B3%B8%20%EC%83%81%ED%92%88%20%EC%82%AD%EC%A0%9C.png)
  ## [상품 금액 적용]
  ### 기본 상품 판매가
  * 옵션이 없는 상품
  * 상품 등록 시, 기입한 판매가 그대로 적용
  * 옵션이 있는 상품
  * 상품 등록 시, 기입한 판매가 + 옵션가 적용
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) 인 경우\|\, 옵션1 구매가격은 10000원 옵션2 구매가격은 11000원
  * 세트 상품
  * 세트 상품의 옵션에 구성된 옵션(옵션있는 상품들의 옵션으로 세트 옵션 구성)의 구매가격의 합
  * 세트 옵션 구성이 달라질 수 있기때문에 당연히 옵션마다 가격 상이 함
  
  ### 즉시 할인
  * 옵션이 없는 상품
  * 판매가에 즉시할인이 적용된 가격
  * 옵션있는 상품\, 세트 상품
  * 판매가에 즉시할인이 적용된 가격 + 옵션가 가 최종 가격
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\) 이고 즉시 할인율 10% 인 경우\,
  옵션별 가격은 판매가 \*0.8 + 옵션가 이므로 따라서
  옵션 1 의 판매가격은 9000원, 옵션 2의 판매가격은 10000원, 옵션3의 판매가격은 11000원
  
  \* **옵션가격에서 즉시 할인이 적용 되는 것이 아님**
  
  ### 추가 할인
  * 할인 적용 순서 : 즉시 할인 -> 추가 할인
  * 즉시 할인 적용 된 판매가격에 추가 할인 적용
  * 예) 10000원 상품에 즉시 할인으로 1000원일 할인된다면, 9000원에서 추가 할인 설정에 따라 할인 적용
  
  **즉시 할인**과의 차이점이라면 적용되는 가격인데 즉시 할인의 경우 상품을 등록 할 때에 입력한 판매가 적용하지만, **추가 할인**은 실제 해당 상품의 구매 가격에 적용 (상품등록 시에 판매가에 적용되는 것이 아닌 실제 구매 금액에 적용)
  
  * 예) A상품(판매가15000원)
  
  \- 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\)
  
  \- 즉시 할인 : 5000원
  
  \- 추가 할인 : 10%
  
  옵션 1 구매가격 : ((15000-5000) + 0)\*0.9 = 9000
  
  옵션 2 구매가격 : ((15000-5000) + 1000)\*0.9 = 9900
  
  옵션 2 구매가격 : ((15000-5000) + 2000)\*0.9 = 10800
   */
  '/profile/recent-products': {
    params: {
      path?: never;
      query: {
        /**
         * @description 품절상품 포함 여부(default : true)
         * @example "true"
         */
        soldout: boolean;
        /**
         * @description 최대쿠폰 할인가격 포함여부(default: false)
         * @example "false"
         */
        hasMaxCouponAmt: boolean;
        /**
         * @description 옵션 값 포함 여부 (default: false)
         * @example "false"
         */
        hasOptionValues: boolean;
      };
    };
    body?: never;
    data: components['schemas']['profile-recent-products-1008217100'];
    error: any;
  };

  /**
   * 회원이 좋아하는 상품 수 조회하기
   * @description ## 부가설명 및 특이사항
  
  회원이 좋아하는 상품 수를 조회하는 API입니다
  
  로그인 이후에만 호출 가능합니다(accessToken)
   */
  '/profile/like-products/count': {
    params?: never;
    body?: never;
    data: components['schemas']['profile-like-products-count1871095000'];
    error: any;
  };
}

export interface Head {}

export interface Post {
  /**
   * [샵바이 프리미엄 전용] 그룹관리코드 조회하기
   * @description ## 부가설명 및 특이사항
  
  그룹관리코드 조회하는 API입니다
  
  샵바이 프리미엄 전용 API로, 샵바이 혹은 샵바이 프로에서는 사용되지 않습니다
   */
  '/products/group-management-code': {
    params?: never;
    body?: components['schemas']['products-group-management-code1938899284'];
    data: components['schemas']['products-group-management-code-1777856279'];
    error: any;
  };

  /**
   * [샵바이 프리미엄 전용] 재입고 알림 신청
   * @description ## 부가설명 및 특이사항
  
  재입고 알림 신청하는 API입니다
  
  샵바이 프리미엄 전용 API로, 샵바이 혹은 샵바이 프로에서는 사용되지 않습니다
   */
  '/products/restock': {
    params?: never;
    body?: components['schemas']['products-restock-559898343'];
    data: any;
    error: any;
  };

  /**
   * 상품번호 리스트로 상품 조회
   * @description ## 부가설명 및 특이사항
  
  상품번호 리스트로 상품을 조회하는 API입니다.
  
  (hasOptionValues: 옵션값 포함여부, default: false)
  
  ## [상품 금액 적용]
  ### 기본 상품 판매가
  * 옵션이 없는 상품
  * 상품 등록 시, 기입한 판매가 그대로 적용
  * 옵션이 있는 상품
  * 상품 등록 시, 기입한 판매가 + 옵션가 적용
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) 인 경우\|\, 옵션1 구매가격은 10000원 옵션2 구매가격은 11000원
  * 세트 상품
  * 세트 상품의 옵션에 구성된 옵션(옵션있는 상품들의 옵션으로 세트 옵션 구성)의 구매가격의 합
  * 세트 옵션 구성이 달라질 수 있기때문에 당연히 옵션마다 가격 상이 함
  
  ### 즉시 할인
  * 옵션이 없는 상품
  * 판매가에 즉시할인이 적용된 가격
  * 옵션있는 상품\, 세트 상품
  * 판매가에 즉시할인이 적용된 가격 + 옵션가 가 최종 가격
  * 예\) A상품\(판매가10000원\)에 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\) 이고 즉시 할인율 10% 인 경우\,
  옵션별 가격은 판매가 \*0.8 + 옵션가 이므로 따라서
  옵션 1 의 판매가격은 9000원, 옵션 2의 판매가격은 10000원, 옵션3의 판매가격은 11000원
  
  \* **옵션가격에서 즉시 할인이 적용 되는 것이 아님**
  
  ### 추가 할인
  * 할인 적용 순서 : 즉시 할인 -> 추가 할인
  * 즉시 할인 적용 된 판매가격에 추가 할인 적용
  * 예) 10000원 상품에 즉시 할인으로 1000원일 할인된다면, 9000원에서 추가 할인 설정에 따라 할인 적용
  
  **즉시 할인**과의 차이점이라면 적용되는 가격인데 즉시 할인의 경우 상품을 등록 할 때에 입력한 판매가 적용하지만, **추가 할인**은 실제 해당 상품의 구매 가격에 적용 (상품등록 시에 판매가에 적용되는 것이 아닌 실제 구매 금액에 적용)
  
  * 예) A상품(판매가15000원)
  
  \- 옵션 1\(\+0원\) \| 옵션2\(\+1000원\) \| 옵션3\(\+2000원\)
  
  \- 즉시 할인 : 5000원
  
  \- 추가 할인 : 10%
  
  옵션 1 구매가격 : ((15000-5000) + 0)\*0.9 = 9000
  
  옵션 2 구매가격 : ((15000-5000) + 1000)\*0.9 = 9900
  
  옵션 2 구매가격 : ((15000-5000) + 2000)\*0.9 = 10800
   */
  '/products/search-by-nos': {
    params?: never;
    body?: components['schemas']['products-search-by-nos1116014589'];
    data: components['schemas']['products-search-by-nos-135481769'];
    error: any;
  };

  /**
   * 회원이 상품을 좋아한다고 추가/삭제하기
   * @description ## 부가설명 및 특이사항
  
  회원이 좋아하는 상품목록 추가/삭제하는 API입니다
  
  로그인 이후에만 호출 가능합니다(accessToken)
   */
  '/profile/like-products': {
    params?: never;
    body?: components['schemas']['profile-like-products-2097794731'];
    data: components['schemas']['profile-like-products-110141960'];
    error: any;
  };

  /**
   * 최근 본 상품 등록하기
   * @description ## 부가설명 및 특이사항
  
  최근 본 상품 등록하는 API입니다
  
  로그인 이후에만 호출 가능(accessToken)합니다
  
  최근 본 50개 상품까지 서버에서 저장합니다
   */
  '/profile/recent-products': {
    params?: never;
    body?: components['schemas']['profile-recent-products-524943492'];
    data: any;
    error: any;
  };

  /**
   * 상품에 대한 좋아요 설정 및 해제하기
   * @description ## 부가설명 및 특이사항
  
  상품에 대한 좋아요 설정 및 해제를 하는 API입니다.
  
  * 기존 '회원이 상품을 좋아한다고 추가/삭제하기' API에서 명시적인 '좋아요 설정 및 해제' 요청이 추가되었습니다.
  
  * 기존에 '좋아요 설정'을 하지 않았던 상품에 대한 '좋아요 해제' 요청은 응답에 포함되지 않습니다.
  
  로그인 이후에만 호출 가능합니다(accessToken)
  
  header의 `Version` 값은 1.1로 요청해야합니다.
   */
  '/profile/like-products/': {
    params?: never;
    body?: components['schemas']['profile-like-products--2041423781'];
    data: components['schemas']['profile-like-products--2119689378'];
    error: any;
  };
}

export interface Put {}

export interface Patch {}

export interface Delete {
  /**
   * 최근 본 상품 삭제하기
   * @description ## 부가설명 및 특이사항
  
  최근 본 상품 삭제하는 API입니다
  
  로그인 이후에만 호출 가능(accessToken)합니다
   */
  '/profile/recent-products': {
    params: {
      path?: never;
      query: {
        /**
         * @description 상품 번호
         * @example "1"
         */
        productNo: number;
      };
    };
    body?: never;
    data: any;
    error: any;
  };
}

export interface Options {}

export interface Trace {}
