openapi: 3.0.1
info:
  title: manage-shop
  description: ' 쇼핑몰 운영(manage) 관련 shop API입니다.'
  version: "1.0"
servers:
- url: https://shop-api.e-ncp.com
tags:
- name: Address
  description: 주소
- name: Board
  description: 게시판
- name: Holiday
  description: 공휴일
- name: Inquiry
  description: 1:1 문의
- name: Page
  description: 외부스크립트
- name: Accumulation
  description: 적립금
- name: Instagram
  description: 인스타그램
- name: Terms
  description: 약관
paths:
  /addresses/search:
    get:
      tags:
      - Address
      summary: 주소 조회하기
      description: |2-

        ## 부가설명 및 특이사항
        검색 키워드로 주소정보를 검색하는 API 입니다.

        ##Request 요청
        | name      | type      | required  | default value | description      |
        |-----------|-----------|-----------|---------------|------------------|
        | keyword   | String    | Y         |               | 검색 키워드         |
        | pageNumber| Int       | N         | 1             | 페이지 번호         |
        | pageSize  | Int       | N         | 10(MAX = 1000)| 한 페이지당 노출 수   |
        ## pageSize가 최대 사이즈(1000)를 초과할 경우 최대 사이즈 만큼 조회됩니다.
      operationId: search-addresses
      parameters:
      - name: pageNumber
        in: query
        description: 페이지 번호
        required: false
        schema:
          type: number
        example: "1"
      - name: pageSize
        in: query
        description: 페이지 사이즈
        required: false
        schema:
          type: number
        example: "10"
      - name: keyword
        in: query
        description: 검색 키워드
        required: true
        schema:
          type: string
        example: 디지털로26길 72
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addresses-search195379154'
              examples:
                search-addresses:
                  value: |-
                    {
                      "totalCount" : 1,
                      "groupByStates" : [ ],
                      "items" : [ {
                        "address" : "서울특별시 구로구 디지털로26길 72 (NHN KCP)",
                        "detailAddress" : "",
                        "roadAddress" : "서울특별시 구로구 디지털로26길 72 (NHN KCP)",
                        "roadAddressExtra" : "",
                        "jibunAddress" : "서울특별시 구로구 구로동 222-22 NHN KCP",
                        "relatedJibun" : "",
                        "zipCode" : "08393",
                        "oldZipCode" : ""
                      } ]
                    }
  /boards/configurations:
    get:
      tags:
      - Board
      summary: 게시판 설정 조회하기
      description: "\n## 부가설명 및 특이사항\n전체 게시판의 설정정보를 조회하는 API 입니다. \n"
      operationId: get-board-config
      parameters:
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/boards-configurations-832411598'
              examples:
                get-board-config:
                  value: |-
                    {
                      "boardConfigs" : [ {
                        "boardNo" : 1,
                        "boardId" : "test",
                        "name" : "공지사항",
                        "categories" : [ {
                          "categoryNo" : 1,
                          "label" : "공지"
                        } ],
                        "memberPostingUsed" : false,
                        "guestPostingUsed" : false,
                        "secretPostingUsed" : false,
                        "replyUsed" : false,
                        "used" : false,
                        "thumbnailUsed" : false,
                        "categoryUsed" : false,
                        "displayType" : "LIST",
                        "imageDisplayType" : "NOT_USED",
                        "attachmentUsed" : false,
                        "order" : 1
                      } ],
                      "inquiryConfig" : {
                        "displayType" : "LIST",
                        "imageDisplayType" : "NOT_USED",
                        "used" : false,
                        "name" : "1:1문의",
                        "description" : "설명",
                        "memberPostingUsed" : false,
                        "guestPostingUsed" : false,
                        "secretPostingUsed" : false,
                        "replyUsed" : false,
                        "attachmentUsed" : false,
                        "smsUsed" : false,
                        "emailUsed" : false,
                        "answerSmsTemplateUsed" : false,
                        "answerMailTemplateUsed" : false
                      },
                      "productReviewConfig" : {
                        "displayType" : "LIST",
                        "used" : false,
                        "name" : "상품리뷰",
                        "memberPostingUsed" : false,
                        "guestPostingUsed" : false,
                        "secretPostingUsed" : false,
                        "replyUsed" : false,
                        "attachmentUsed" : false,
                        "imageDisplayType" : "NOT_USED",
                        "reviewAccumulation" : {
                          "use" : true,
                          "normalReview" : {
                            "amount" : 500,
                            "contentLength" : 100
                          },
                          "photoReview" : {
                            "amount" : 1000,
                            "contentLength" : 10
                          }
                        }
                      },
                      "productInquiryConfig" : {
                        "displayType" : "LIST",
                        "used" : false,
                        "name" : "상품문의",
                        "memberPostingUsed" : false,
                        "guestPostingUsed" : false,
                        "secretPostingUsed" : false,
                        "replyUsed" : false,
                        "attachmentUsed" : false,
                        "imageDisplayType" : "NOT_USED"
                      }
                    }
  /boards/{boardNo}/articles:
    get:
      tags:
      - Board
      summary: 게시글 리스트 조회하기
      description: |2

        ## 부가설명 및 특이사항
        특정 게시판(게시판 번호 기준)의 게시글 리스트를 조회하는 API 입니다.
      operationId: search-posts
      parameters:
      - name: boardNo
        in: path
        description: 조회할 게시판 번호(숫자) 또는 게시판id(문자열)
        required: true
        schema:
          type: string
        example: 1 또는 boardId
      - name: pageNumber
        in: query
        description: 페이지 번호
        required: false
        schema:
          type: integer
          format: int32
        example: "1"
      - name: pageSize
        in: query
        description: 한 페이지당 노출 수
        required: false
        schema:
          type: integer
          format: int32
        example: "1"
      - name: hasTotalCount
        in: query
        description: "목록 카운트 포함 여부(false: 미포함(default), true: 포함)"
        required: false
        schema:
          type: boolean
        example: "false"
      - name: keyword
        in: query
        description: 검색어
        required: false
        schema:
          type: string
        example: keyword
      - name: searchType
        in: query
        description: "검색유형 (ALL: 전체, TITLE: 제목, CONTENT: 내용, WRITER: 작성자)"
        required: false
        schema:
          type: string
        example: ALL
      - name: categoryNo
        in: query
        description: 게시판 카테고리
        required: false
        schema:
          type: integer
          format: int32
        example: "1"
      - name: startYmd
        in: query
        description: "조회일 시작일(yyyy-MM-dd, default: 3개월)"
        required: false
        schema:
          type: string
        example: YYYY-MM-DD
      - name: endYmd
        in: query
        description: "조회일 종료일(yyyy-MM-dd, default: 오늘)"
        required: false
        schema:
          type: string
        example: YYYY-MM-DD
      - name: withReplied
        in: query
        description: "답글도 리스트에 같이 조회할지 여부 (false: 답글 미포함(default), true: 답글 포함)"
        required: false
        schema:
          type: boolean
        example: "false"
      - name: direction
        in: query
        description: "최신 순 정렬 여부 (ASC: 최신 순, DESC: 오래된 순)"
        required: false
        schema:
          type: string
        example: DESC
      - name: isMine
        in: query
        description: "본인이 작성한 글만 조회 여부(false: 전체 조회(default), true: 본인 글만 조회)"
        required: false
        schema:
          type: boolean
        example: "true"
      - name: myRecommendOnly
        in: query
        description: "본인이 추천한 게시글만 조회 여부(false: 전체 조회(default), true: 추천한 게시글만 조회)"
        required: false
        schema:
          type: boolean
        example: "true"
      - name: includeRecommended
        in: query
        description: "본인이 해당 게시글을 추천했는지 여부(false: 본인 추천 포함x(default), true: 본인 추천\
          \ 포함)"
        required: false
        schema:
          type: boolean
        example: "true"
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: false
        schema:
          type: string
        example: accessToken
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/boards-boardNo-articles1633620974'
              examples:
                search-posts:
                  value: |-
                    {
                      "totalCount" : 1,
                      "items" : [ {
                        "articleNo" : 1,
                        "title" : "title",
                        "content" : "content",
                        "imageUrl" : "image",
                        "viewCnt" : 1,
                        "categoryNo" : 1,
                        "categoryLabel" : "category",
                        "registerName" : "register",
                        "registerYmdt" : "2024-01-05T10:29:45.342984368",
                        "registerNo" : 1,
                        "registerType" : "ADMIN",
                        "modifierName" : "modifier",
                        "modifyYmdt" : "2024-01-05T10:29:45.343008001",
                        "modifierNo" : 1,
                        "modifierType" : "ADMIN",
                        "modifiable" : false,
                        "secreted" : false,
                        "repliedCnt" : 0,
                        "replied" : false,
                        "notice" : false,
                        "attached" : false,
                        "recommendCount" : 1,
                        "tags" : [ ],
                        "memberId" : "memberId",
                        "recommended" : false,
                        "reportCount" : 1,
                        "displayStatusType" : "DISPLAY"
                      } ]
                    }
    post:
      tags:
      - Board
      summary: 게시글 작성하기
      description: "\n## 부가설명 및 특이사항\n게시글을 작성하는 API 입니다.\n\nimages 값은 조회 시, '게시글 상\
        세 조회 하기 API의 'attachments로 조회됩니다. \n\n첨부파일은 최대 10개까지 업로드 가능합니다.\n\n | 저장 시\
        \                    | 조회 시(게시글 상세 조회 하기 API)  | 설명           | 예시       \
        \            |\n |--------------------------|------------------------------|--------------|-----------------------|\n\
        \ | images.originalFileName  | attachments.originalFileName | 원본 파일명     |\
        \ 홍길동.jpg              |\n | images.uploadedFileName  | attachments.uploadedFileName\
        \ | 업로드 된 파일명 | https://mycdn/hong.jpg |\n | images.uploadedFileName  | attachments.downloadFileUrl\
        \  | 업로드 된 파일명 | https://mycdn/hong.jpg |\n\n### thumbnailUrl는 조회 시, 게시글 상\
        세 조회 하기 API의 'imageUrl'로 조회됩니다.\n"
      operationId: add-post
      parameters:
      - name: boardNo
        in: path
        description: 조회할 게시판 번호(숫자) 또는 게시판id(문자열)
        required: true
        schema:
          type: string
        example: 1 또는 boardId
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: false
        schema:
          type: string
        example: accessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards-boardNo-articles504530629'
            examples:
              add-post:
                value: |-
                  {
                    "articleTitle" : "title",
                    "articleContent" : "content",
                    "parentBoardArticleNo" : 1,
                    "password" : "password",
                    "secreted" : false,
                    "boardCategoryNo" : 1,
                    "images" : [ {
                      "originalFileName" : "originalFile",
                      "uploadedFileName" : "uploadedFile"
                    } ],
                    "guestName" : "",
                    "tags" : [ ],
                    "thumbnailUrl" : "http://image.co.kr/image02.jpg"
                  }
      responses:
        "204":
          description: "204"
  /boards/{boardNo}/categories:
    get:
      tags:
      - Board
      summary: 게시판 카테고리 목록 조회하기
      description: |2

        ## 부가설명 및 특이사항
        특정 게시판(게시판 번호 기준)의 카테고리를 조회하는 API 입니다.
      operationId: get-board-categories
      parameters:
      - name: boardNo
        in: path
        description: 조회할 게시판 번호(숫자) 또는 게시판id(문자열)
        required: true
        schema:
          type: string
        example: 1 또는 boardId
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/boards-boardNo-categories2026858948'
              examples:
                get-board-categories:
                  value: |-
                    [ {
                      "categoryNo" : 1,
                      "label" : "category"
                    } ]
  /boards/{boardNo}/articles/{articleNo}:
    get:
      tags:
      - Board
      summary: 게시글 상세 조회하기
      description: |2+

        ## 부가설명 및 특이사항
        특정 게시글(게시글 번호 기준)을 상세 조회하는 API 입니다.

        imageUrl은 게시글 작성하기 API의 thumbnailUrl과 동일합니다.

        attachments는 게시글 작성하기 API의 images와 동일합니다.

         | 조회 시                        | 저장 시(게시글 작성하기 API)   | 설명          | 예시                     |
         |------------------------------|--------------------------|--------------|------------------------|
         | attachments.originalFileName | images.originalFileName  | 원본 파일명     | 홍길동.jpg               |
         | attachments.uploadedFileName | images.uploadedFileName  | 업로드 된 파일명 | https://mycdn/hong.jpg |
         | attachments.downloadFileUrl  | images.uploadedFileName  | 업로드 된 파일명 | https://mycdn/hong.jpg |

      operationId: get-post
      parameters:
      - name: boardNo
        in: path
        description: 조회할 게시판 번호(숫자) 또는 게시판id(문자열)
        required: true
        schema:
          type: string
        example: 1 또는 boardId
      - name: articleNo
        in: path
        description: 조회할 게시글 번호
        required: true
        schema:
          type: string
        example: "0"
      - name: password
        in: query
        description: 비회원 글 확인용 비밀번호
        required: false
        schema:
          type: string
        example: string
      - name: withReplied
        in: query
        description: "답글도 리스트에 같이 조회할지 여부 (false: 답글 미포함, true: 답글 포함(default))"
        required: false
        schema:
          type: boolean
        example: "true"
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: false
        schema:
          type: string
        example: accessToken
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/boards-boardNo-articles-articleNo-1236579485'
              examples:
                get-post:
                  value: |-
                    {
                      "articleNo" : 1,
                      "title" : "title",
                      "content" : "content",
                      "imageUrl" : "image-url.com",
                      "viewCnt" : 0,
                      "categoryNo" : 1,
                      "categoryLabel" : "테스트카테고리",
                      "attachments" : [ {
                        "fileName" : "filename.png",
                        "uploadedFileName" : "fileName.png",
                        "downloadFileUrl" : "downloadurl.com"
                      } ],
                      "registerName" : "배현수",
                      "registerGroupNames" : null,
                      "registerYmdt" : "2024-01-05T10:29:44.656819835",
                      "registerNo" : 1,
                      "registerType" : "MEMBER",
                      "modifierName" : "변경자",
                      "modifyYmdt" : "2024-01-05T10:29:44.65684753",
                      "modifierNo" : 1,
                      "modifierType" : "MEMBER",
                      "memberId" : "fpdjsns1004",
                      "modifiable" : true,
                      "childArticles" : [ ],
                      "secreted" : false,
                      "notice" : true,
                      "parentArticle" : null,
                      "recommendCount" : 1,
                      "tags" : [ ],
                      "recommendable" : false,
                      "reportCount" : 0,
                      "displayStatusType" : "DISPLAY"
                    }
    put:
      tags:
      - Board
      summary: 게시글 수정하기
      description: |2

        ## 부가설명 및 특이사항

        특정 게시글(게시글 번호 기준)을 수정하는 API 입니다.

        첨부파일은 최대 10개까지 업로드 가능합니다.
      operationId: modify-post
      parameters:
      - name: boardNo
        in: path
        description: 조회할 게시판 번호(숫자) 또는 게시판id(문자열)
        required: true
        schema:
          type: string
        example: 1 또는 boardId
      - name: articleNo
        in: path
        description: 수정할 게시글 번호
        required: true
        schema:
          type: string
        example: "0"
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: false
        schema:
          type: string
        example: accessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards-boardNo-articles-articleNo-665973613'
            examples:
              modify-post:
                value: |-
                  {
                    "articleTitle" : "title",
                    "articleContent" : "content",
                    "boardCategoryNo" : 1,
                    "password" : null,
                    "secreted" : false,
                    "images" : [ ],
                    "guestName" : "",
                    "tags" : null,
                    "thumbnailUrl" : "http://image.co.kr/image02.jpg"
                  }
      responses:
        "204":
          description: "204"
    delete:
      tags:
      - Board
      summary: 게시글 삭제하기
      description: |2

        ## 부가설명 및 특이사항
        특정 게시글(게시글 번호 기준)을 삭제하는 API 입니다.

        비회원으로 작성한 경우, 해당 게시글 작성 비밀번호를 전달해야 합니다.
      operationId: remove-post
      parameters:
      - name: boardNo
        in: path
        description: 조회할 게시판 번호(숫자) 또는 게시판id(문자열)
        required: true
        schema:
          type: string
        example: 1 또는 boardId
      - name: articleNo
        in: path
        description: 삭제할 게시글 번호
        required: true
        schema:
          type: string
        example: INTEGER
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: false
        schema:
          type: string
        example: accessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards-boardNo-articles-articleNo-1875198411'
            examples:
              remove-post:
                value: |-
                  {
                    "password" : null
                  }
      responses:
        "204":
          description: "204"
  /boards/{boardNo}/articles/{articleNo}/editable:
    put:
      tags:
      - Board
      summary: 게시글 수정가능 여부 확인하기
      description: |2

        ## 부가설명 및 특이사항
        특정 게시글(게시글 번호 기준)의 수정가능 여부를 확인하는 API 입니다.

        비회원으로 작성한 경우, 해당 게시글 작성 비밀번호를 전달해야 합니다.
      operationId: check-post-editable
      parameters:
      - name: boardNo
        in: path
        description: 조회할 게시판 번호(숫자) 또는 게시판id(문자열)
        required: true
        schema:
          type: string
        example: 1 또는 boardId
      - name: articleNo
        in: path
        description: 확인할 게시글 번호
        required: true
        schema:
          type: string
        example: INTEGER
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: false
        schema:
          type: string
        example: accessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards-boardNo-articles-articleNo-editable-149444152'
            examples:
              check-post-editable:
                value: |-
                  {
                    "password" : null
                  }
      responses:
        "204":
          description: "204"
  /boards/{boardNo}/articles/{articleNo}/recommend:
    post:
      tags:
      - Board
      summary: 게시글 추천
      description: 게시글 추천
      operationId: recommend-article
      parameters:
      - name: boardNo
        in: path
        description: 게시판 번호
        required: true
        schema:
          type: string
        example: "1"
      - name: articleNo
        in: path
        description: 추천할 게시글 번호
        required: true
        schema:
          type: string
        example: "1"
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: false
        schema:
          type: string
        example: accessToken
      responses:
        "204":
          description: "204"
    delete:
      tags:
      - Board
      summary: 게시글 추천 취소
      description: 게시글 추천 취소
      operationId: cancel-recommend-article
      parameters:
      - name: boardNo
        in: path
        description: 게시판 번호
        required: true
        schema:
          type: string
        example: "1"
      - name: articleNo
        in: path
        description: 추천할 게시글 번호
        required: true
        schema:
          type: string
        example: "13"
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: false
        schema:
          type: string
        example: accessToken
      responses:
        "204":
          description: "204"
  /boards/{boardNo}/articles/{articleNo}/replies:
    get:
      tags:
      - Board
      summary: 게시글 답글 리스트 조회하기
      description: |2

        ## 부가설명 및 특이사항
        특정 게시판(게시판 번호 기준)의 게시글 리스트를 조회하는 API 입니다.
      operationId: reply-posts
      parameters:
      - name: boardNo
        in: path
        description: 조회할 게시판 번호(숫자) 또는 게시판id(문자열)
        required: true
        schema:
          type: string
        example: 1 또는 boardId
      - name: articleNo
        in: path
        description: 조회할 게시글 번호
        required: true
        schema:
          type: string
        example: "1"
      - name: page
        in: query
        description: 페이지 번호 (default:1)
        required: false
        schema:
          type: integer
          format: int32
        example: "1"
      - name: pageSize
        in: query
        description: 한 페이지당 노출 수 (default:10)
        required: false
        schema:
          type: integer
          format: int32
        example: "10"
      - name: includeRecommended
        in: query
        description: "본인이 해당 게시글을 추천했는지 여부(false: 본인 추천 포함x(default), true: 본인 추천\
          \ 포함)"
        required: false
        schema:
          type: boolean
        example: "false"
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/boards-boardNo-articles-articleNo-replies1451829958'
              examples:
                reply-posts:
                  value: |-
                    {
                      "totalCount" : 1,
                      "items" : [ {
                        "articleNo" : 1,
                        "title" : "title",
                        "content" : "content",
                        "imageUrl" : "image",
                        "viewCnt" : 1,
                        "categoryNo" : 1,
                        "categoryLabel" : "category",
                        "registerName" : "register",
                        "registerYmdt" : "2024-01-05T10:29:44.994784764",
                        "registerNo" : 1,
                        "registerType" : "ADMIN",
                        "modifierName" : "modifier",
                        "modifyYmdt" : "2024-01-05T10:29:44.994812512",
                        "modifierNo" : 1,
                        "modifierType" : "ADMIN",
                        "modifiable" : false,
                        "secreted" : false,
                        "repliedCnt" : 0,
                        "replied" : false,
                        "notice" : false,
                        "attached" : false,
                        "recommendCount" : 1,
                        "tags" : [ ],
                        "memberId" : "memberId",
                        "recommended" : false,
                        "reportCount" : 1,
                        "displayStatusType" : "DISPLAY"
                      } ]
                    }
  /boards/{boardNo}/articles/{articleNo}/report:
    post:
      tags:
      - Board
      summary: 게시글 신고하기
      description: |2

        ## 부가설명 및 특이사항
        특정 게시글을 신고하는 API 입니다.
      operationId: report-posts
      parameters:
      - name: boardNo
        in: path
        description: 신고할 게시판 번호(숫자) 또는 게시판id(문자열)
        required: true
        schema:
          type: string
        example: 1 또는 boardId
      - name: articleNo
        in: path
        description: 신고할 게시글 번호
        required: true
        schema:
          type: string
        example: "1"
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: true
        schema:
          type: string
        example: accessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards-boardNo-articles-articleNo-report-808776058'
            examples:
              report-posts:
                value: |-
                  {
                    "reportReasonType" : "SLANDER",
                    "content" : "욕설"
                  }
      responses:
        "204":
          description: "204"
  /holiday:
    get:
      tags:
      - Holiday
      summary: 요청한 달에 해당하는 공휴일 조회하기
      description: |2

        ## 부가설명 및 특이사항
        해당 연도와 월에 존재하는 공휴일을 조회하는 API 입니다.
      operationId: search-holiday
      parameters:
      - name: year
        in: query
        description: 검색할 연도
        required: false
        schema:
          type: number
        example: "2022"
      - name: month
        in: query
        description: 검색할 월
        required: false
        schema:
          type: number
        example: "1"
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/holiday-736675939'
              examples:
                search-holiday:
                  value: "[ 5, 6, 12, 13, 19, 20, 25, 26, 27 ]"
  /inquiries:
    get:
      tags:
      - Inquiry
      summary: 1:1 문의 내역 조회하기
      description: "## 부가설명 및 특이사항\n1:1 문의글 목록을 전체 검색하는 API 입니다.\n\n문의 상태 : inquiryStatus와\
        \ inqiryStatuses가 있으며, 두 개를 동시에 요청파라미터로 넣으면 그 둘을 합한 상태를 조회합니다.\n- inquiryStatus:\
        \ 하나의 1:1문의 상태에 대해서 조회 가능. \n- inquiryStatuses, 여러 개의 1:1문의 상태 조회 가능. ','로\
        \ 구분.\n- (ASKED: 레거시 호환용, ISSUED와 같다.)\n\n## 화면 예시\n<a target='_blank' href='http://image.toast.com/aaaaahb/api-description/member/inquiry/get_inquiries.png'><img\
        \ src='http://image.toast.com/aaaaahb/api-description/member/inquiry/get_inquiries.png?autox150'></a>"
      operationId: search-inquiries
      parameters:
      - name: pageNumber
        in: query
        description: 페이지 번호
        required: false
        schema:
          type: integer
          format: int32
        example: "1"
      - name: pageSize
        in: query
        description: 한 페이지당 노출 수
        required: false
        schema:
          type: integer
          format: int32
        example: "1"
      - name: hasTotalCount
        in: query
        description: "목록 카운트 포함 여부(false: 미포함(default), true: 포함)"
        required: false
        schema:
          type: boolean
        example: "false"
      - name: inquiryTypeNo
        in: query
        description: 1:1 문의 유형 번호
        required: false
        schema:
          type: number
        example: "123"
      - name: inquiryStatus
        in: query
        description: "1:1 문의 상태 (ISSUED(ASKED-이전버전 호환용): 답변대기, IN_PROGRESS: 답변 진행중\
          , ANSWERED: 답변완료)"
        required: false
        schema:
          type: string
        example: ISSUED
      - name: inquiryStatuses
        in: query
        description: "1:1 문의 상태 복수개 지정 (ISSUED(ASKED-이전버전 호환용): 답변대기, IN_PROGRESS:\
          \ 답변 진행중, ANSWERED: 답변완료)"
        required: false
        schema:
          type: string
        example: "ISSUED,ASKED,IN_PROGRESS,ANSWERED"
      - name: startYmd
        in: query
        description: 조회기간 시작시간
        required: false
        schema:
          type: string
        example: YYYY-MM-DD
      - name: endYmd
        in: query
        description: 조회기간 종료시간
        required: false
        schema:
          type: string
        example: YYYY-MM-DD
      - name: keyword
        in: query
        description: 검색어
        required: false
        schema:
          type: string
        example: keyword
      - name: searchType
        in: query
        description: "검색 타입 (ALL: 전체, TITLE: 제목, CONTENT: 내용)"
        required: false
        schema:
          type: string
        example: ALL
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: true
        schema:
          type: string
        example: accessToken
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inquiries-1702559394'
              examples:
                search-inquiries:
                  value: |-
                    {
                      "totalCount" : 1,
                      "items" : [ {
                        "inquiryNo" : 11234,
                        "orderNo" : "String",
                        "productNo" : 12345,
                        "productName" : "productName",
                        "inquiryTitle" : "title",
                        "inquiryContent" : "content",
                        "answerSmsSend" : false,
                        "answerEmailSend" : false,
                        "registerNo" : 13,
                        "registerYmdt" : "2024-01-05T10:29:46.765496469",
                        "inquiryStatus" : "ISSUED",
                        "inquiryType" : {
                          "inquiryTypeNo" : 0,
                          "inquiryTypeName" : "",
                          "inquiryTypeDescription" : ""
                        },
                        "answer" : {
                          "answerNo" : 0,
                          "answerContent" : "",
                          "answerRegisterYmdt" : "2024-01-05T10:29:46.765496469"
                        },
                        "imageUrls" : [ ],
                        "originalImageUrls" : [ ],
                        "issuerName" : "문의자"
                      } ]
                    }
    post:
      tags:
      - Inquiry
      summary: 1:1 문의 등록하기
      description: "## 부가설명 및 특이사항\n1:1 문의를 등록하는 API 입니다.\n\n샵바이프리미엄 쇼핑몰에서만 비회원 1:1문\
        의가 가능합니다.\n비회원 등록 시에는 email을 필수로 입력해야 합니다.\n\n## 화면 예시\n<a target='_blank'\
        \ href='http://image.toast.com/aaaaahb/api-description/member/inquiry/post_inquiries.png'><img\
        \ src='http://image.toast.com/aaaaahb/api-description/member/inquiry/post_inquiries.png?autox150'></a>\n\
        \n<hr>\n\n## 참고: 이미지 파일(첨부파일) 업로드 방법 안내\n이미지파일 업로드 API를 호출하여 이미지 등록 이후 1:1문\
        의 등록 시 업로드 된 파일명 항목에 등록한 image url 을 입력하여 호출해 주시면 됩니다.\n\n참고로 이미지 업로드 시 이미\
        지 업로드되는 도메인인 base url은 rlyfaazj0.toastcdn.net입니다.\n\n이미지 업로드는 관련해서는 아래 내용으\
        로 참고 부탁드립니다.\n\n※해당 API는 별도 API문서가 없습니다.(하이퍼링크 연결 안되는것이 맞음)\n\n\nPOST http://shop-api.e-ncp.com/files/images\
        \ (리얼)\n\n### header 정보\n - Version : 1.0\n - clientId : {몰의 clientId}\n -\
        \ platform : (PC, MOBILE_WEB, IOS, AOS 중 하나로 해당 API 를 호출하는 플랫폼의 유형)\n - Content-Type\
        \ : multipart/form-data\n \n### Body :\n - file:'image data'\n\n### Request\n\
        \nimageUrl : 이미지 URL\n\noriginName : 원본 파일명\n\n파일명의 경우 2~255자 범위내에 있어야합니다\
        .\n\n파일 용량의 경우, 12MB 이하의 이미지 파일만 업로드 가능합니다.\n\n지원하는 확장자는 아래와 같습니다.\n\nbmp,\
        \ tif, tiff, miff, gif, jpe, jpeg, jpg, jps, pjpeg, jng, mng, png\n"
      operationId: add-inquiry
      parameters:
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: false
        schema:
          type: string
        example: accessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inquiries226483999'
            examples:
              add-inquiry:
                value: |-
                  {
                    "inquiryTypeNo" : 0,
                    "inquiryTitle" : "test Title",
                    "inquiryContent" : "test Content",
                    "originalFileName" : [ "test.jpg" ],
                    "uploadedFileName" : [ "테스트.jpg" ],
                    "productNo" : 12345,
                    "orderNo" : "12345",
                    "answerSmsSendYn" : false,
                    "answerEmailSendYn" : false,
                    "email" : "test@test.com",
                    "captcha" : "string",
                    "mobileNo" : "01012341234"
                  }
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inquiries1602970542'
              examples:
                add-inquiry:
                  value: |-
                    {
                      "inquiryNo" : 12345
                    }
  /inquiries/configurations:
    get:
      tags:
      - Inquiry
      summary: 1:1 문의 설정 조회하기
      description: |+
        ## 부가설명 및 특이사항
        1:1 문의 설정을 조회하는 API 입니다.

      operationId: get-inquiry-configuration
      parameters:
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: false
        schema:
          type: string
        example: accessToken
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inquiries-configurations-784433679'
              examples:
                get-inquiry-configuration:
                  value: |-
                    {
                      "displayType" : "LIST",
                      "imageDisplayType" : "ATTACHMENT",
                      "used" : false,
                      "name" : "1:1문의",
                      "description" : "1:1문의",
                      "memberPostingUsed" : true,
                      "guestPostingUsed" : true,
                      "secretPostingUsed" : false,
                      "replyUsed" : false,
                      "attachmentUsed" : false,
                      "smsUsed" : false,
                      "emailUsed" : false,
                      "answerSmsTemplateUsed" : true,
                      "answerMailTemplateUsed" : false
                    }
  /inquiries/{inquiryNo}:
    get:
      tags:
      - Inquiry
      summary: 1:1 문의 상세 조회하기 (문의번호 기준)
      description: |
        ## 부가설명 및 특이사항
        특정 1:1 문의(문의번호 기준)를 상세 조회하는 API 입니다.

        ## 화면 예시
        <a target='_blank' href='http://image.toast.com/aaaaahb/api-description/member/inquiry/get_inquiries_inquiryNo.png'><img src='http://image.toast.com/aaaaahb/api-description/member/inquiry/get_inquiries_inquiryNo.png?autox150'></a>
      operationId: get-inquiry
      parameters:
      - name: inquiryNo
        in: path
        description: 1:1 문의 번호
        required: true
        schema:
          type: string
        example: "141"
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: true
        schema:
          type: string
        example: accessToken
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inquiries-inquiryNo-1705667149'
              examples:
                get-inquiry:
                  value: |-
                    {
                      "inquiryNo" : 11234,
                      "orderNo" : "String",
                      "productNo" : 12345,
                      "productName" : "productName",
                      "inquiryTitle" : "title",
                      "inquiryContent" : "content",
                      "answerSmsSend" : false,
                      "answerEmailSend" : false,
                      "registerNo" : 13,
                      "registerYmdt" : "2024-01-05T10:29:46.765496469",
                      "inquiryStatus" : "ASKED",
                      "inquiryType" : {
                        "inquiryTypeNo" : 0,
                        "inquiryTypeName" : "상품문의",
                        "inquiryTypeDescription" : "상품문의 입니다"
                      },
                      "answer" : {
                        "answerNo" : 0,
                        "answerContent" : "답변 내용",
                        "files" : [ {
                          "originalFileName" : "file.png",
                          "uploadedFileName" : "uploaded_file.png"
                        } ],
                        "answerRegisterYmdt" : "2024-01-05T10:29:46.765496469"
                      },
                      "imageUrls" : [ ],
                      "originalImageUrls" : [ ],
                      "issuerName" : "문의자"
                    }
    put:
      tags:
      - Inquiry
      summary: 1:1 문의 변경하기
      description: "## 부가설명 및 특이사항\n특정 1:1 문의(문의번호 기준)를 수정하는 API 입니다.\n\nimage 삭제는\
        \ '1:1 문의 부분 변경하기' API를 통해 해야합니다. \n\n## 화면 예시\n<a target='_blank' href='http://image.toast.com/aaaaahb/api-description/member/inquiry/put_inquiries_inquiryNo.png'><img\
        \ src='http://image.toast.com/aaaaahb/api-description/member/inquiry/put_inquiries_inquiryNo.png?autox150'></a>\n"
      operationId: modify-inquiry
      parameters:
      - name: inquiryNo
        in: path
        description: 1:1 문의 번호
        required: true
        schema:
          type: string
        example: "141"
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: true
        schema:
          type: string
        example: accessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inquiries-inquiryNo482104634'
            examples:
              modify-inquiry:
                value: |-
                  {
                    "inquiryTitle" : "test Title",
                    "inquiryContent" : "test Content",
                    "answerSmsSendYn" : true,
                    "answerEmailSendYn" : true,
                    "originalFileName" : [ "test.jpg" ],
                    "uploadedFileName" : [ "테스트.jpg" ]
                  }
      responses:
        "204":
          description: "204"
    delete:
      tags:
      - Inquiry
      summary: 1:1문의 삭제하기
      description: |
        ## 부가설명 및 특이사항
        특정 1:1 문의(문의번호 기준)를 삭제하는 API 입니다.

        ## 화면 예시
        <a target='_blank' href='http://image.toast.com/aaaaahb/api-description/member/inquiry/delete_inquiries_inquiryNo.png'><img src='http://image.toast.com/aaaaahb/api-description/member/inquiry/delete_inquiries_inquiryNo.png?autox150'></a>
      operationId: remove-inquiry
      parameters:
      - name: inquiryNo
        in: path
        description: 1:1 문의 번호
        required: true
        schema:
          type: string
        example: "141"
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: true
        schema:
          type: string
        example: accessToken
      responses:
        "204":
          description: "204"
    patch:
      tags:
      - Inquiry
      summary: 1:1 문의 부분 변경하기
      description: "## 부가설명 및 특이사항\n특정 1:1 문의(문의번호 기준)를 부분 수정하는 API 입니다.\n\noriginalFileNames,\
        \ uploadedFileNames 이 null 인 경우 첨부파일은 수정되지 않습니다.\n\n   ex) {\n       \"originalFileNames\"\
        \ : null,\n       \"uploadedFileNames\" : null\n   }\n \noriginalFileNames,\
        \ uploadedFileNames 이 빈 리스트일 경우 첨부파일은 모두 삭제 됩니다.\n\n   ex) {\n       \"originalFileNames\"\
        \ : [],\n       \"uploadedFileNames\" : []\n   }\n\n## 화면 예시\n<a target='_blank'\
        \ href='http://image.toast.com/aaaaahb/api-description/member/inquiry/put_inquiries_inquiryNo.png'><img\
        \ src='http://image.toast.com/aaaaahb/api-description/member/inquiry/put_inquiries_inquiryNo.png?autox150'></a>\n"
      operationId: part-update-inquiry
      parameters:
      - name: inquiryNo
        in: path
        description: 1:1 문의 번호
        required: true
        schema:
          type: string
        example: "141"
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: true
        schema:
          type: string
        example: accessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inquiries-inquiryNo1319745130'
            examples:
              part-update-inquiry:
                value: |-
                  {
                    "inquiryTitle" : "test Title",
                    "inquiryContent" : "test Content",
                    "answerSmsSendYn" : true,
                    "answerEmailSendYn" : true,
                    "originalFileNames" : [ "test.jpg" ],
                    "uploadedFileNames" : [ "테스트.jpg" ]
                  }
      responses:
        "204":
          description: "204"
  /page/scripts:
    get:
      tags:
      - Page
      summary: 외부스크립트 조회하기
      description: |+
        ## 부가설명 및 특이사항
        외부 스크립트를 조회하는 API 입니다.

      operationId: search-external-script
      parameters:
      - name: pageTypes
        in: query
        description: "페이지타입 리스트.  \",\" 구분자 복수개 요청 가능. (MAIN: 메인 페이지, COMMON_HEAD:\
          \ 상단 공통영역, COMMON_FOOTER: 하단 공통영역, PRODUCT: 상품 상세 페이지, PRODUCT_LIST: 상품\
          \ 리스트 페이지, PRODUCT_SEARCH: 상품 검색결과 페이지, CART: 장바구니 페이지, ORDER: 주문하기 페이지\
          , ORDER_DETAIL: 주문상세 페이지, ORDER_COMPLETE: 주문완료 페이지, DISPLAY_SECTION: 메인\
          \ 싱품 분류지, MEMBER_JOIN_COMPLETE: 회원가입완료 페이지, MY_PAGE: 마이 페이지)"
        required: true
        schema:
          type: string
        example: CART
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page-scripts807368217'
              examples:
                search-external-script:
                  value: |-
                    [ {
                      "pageType" : "CART",
                      "deviceType" : "PC",
                      "content" : "aaa",
                      "pageTypeLabel" : "장바구니 페이지"
                    } ]
  /profile/accumulations:
    get:
      tags:
      - Accumulation
      summary: 적립금 이력 조회하기
      description: |-
        ## 부가설명 및 특이사항
        적립금 이력을 전체 검색하는 API 입니다.

        ## 화면 예시
        <a target='_blank' href='http://image.toast.com/aaaaahb/api-description/member/accumulation/get_profile_accumulations_summary.png'><img src='http://image.toast.com/aaaaahb/api-description/member/accumulation/get_profile_accumulations_summary.png?autox150'></a>
      operationId: search-accumulation-histories
      parameters:
      - name: pageNumber
        in: query
        description: 페이지 번호
        required: false
        schema:
          type: number
        example: "1"
      - name: pageSize
        in: query
        description: 페이지 사이즈
        required: false
        schema:
          type: number
        example: "10"
      - name: accumulationReason
        in: query
        description: "적립 유형(ADD: 지급, SUB: 차감)"
        required: false
        schema:
          type: string
        example: ADD
      - name: startYmd
        in: query
        description: "조회일 시작일(yyyy-MM-dd, default: 3개월)"
        required: false
        schema:
          type: string
        example: YYYY-MM-DD
      - name: endYmd
        in: query
        description: "조회일 종료일(yyyy-MM-dd, default: 오늘)"
        required: false
        schema:
          type: string
        example: YYYY-MM-DD
      - name: direction
        in: query
        description: "정렬방식(DESC:내림차순(default), ASC:오름차순)"
        required: false
        schema:
          type: string
        example: DESC
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: false
        schema:
          type: string
        example: accessToken
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profile-accumulations506787993'
              examples:
                search-accumulation-histories:
                  value: |-
                    {
                      "items" : [ {
                        "accumulationNo" : 0,
                        "accumulationAmt" : 0,
                        "registerYmdt" : "2024-01-05T10:29:42.322596971",
                        "startYmdt" : "2024-01-05T10:29:42.322621282",
                        "expireYmdt" : "2024-01-05T10:29:42.32262644",
                        "accumulationReserveReason" : "ADD_MANUAL",
                        "accumulationReserveReasonDisplay" : "string",
                        "reasonDetail" : "string",
                        "accumulationStatus" : "GIVE_AVAILABLE",
                        "accumulationStatusGroupType" : "PAYMENT",
                        "orderNo" : "",
                        "mappingKey" : "",
                        "totalAvailableAmt" : 0,
                        "accumulationRestAmt" : 0
                      } ],
                      "memberNo" : 5114391,
                      "totalAmt" : 0,
                      "totalCount" : 0
                    }
  /profile/accumulations/summary:
    get:
      tags:
      - Accumulation
      summary: 적립금 요약 조회하기
      description: |-
        ## 부가설명 및 특이사항
        적립금 요약정보를 조회하는 API 입니다.

        ## 화면 예시
        <a target='_blank' href='http://image.toast.com/aaaaahb/api-description/member/accumulation/get_profile_accumulations.png'><img src='http://image.toast.com/aaaaahb/api-description/member/accumulation/get_profile_accumulations.png?autox150'></a>
      operationId: search-accumulations-summary
      parameters:
      - name: expireStartYmdt
        in: query
        description: "만료 조회 시작일(YYYY-MM-DD HH:mm:ss, default: 한달)"
        required: false
        schema:
          type: string
        example: YYYY-MM-DD HH:mm:ss
      - name: expireEndYmdt
        in: query
        description: "만료 조회 종료일(YYYY-MM-DD HH:mm:ss, default: 한달)"
        required: false
        schema:
          type: string
        example: YYYY-MM-DD HH:mm:ss
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: false
        schema:
          type: string
        example: accessToken
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profile-accumulations-summary-1470401351'
              examples:
                search-accumulations-summary:
                  value: |-
                    {
                      "totalAvailableAmt" : 0,
                      "totalExpireAmt" : 0
                    }
  /profile/accumulations/waiting:
    get:
      tags:
      - Accumulation
      summary: 해당 회원의 예상 적립금 조회하기
      description: "\n## 부가설명 및 특이사항 \n해당 회원의 예상 적립금(적립대기)을 조회하는 API 입니다.\n\n## 화면\
        \ 예시\n<a target='_blank' href='http://image.toast.com/aaaaahb/api-description/member/accumulation/get_profile_accumulations_waiting.png'><img\
        \ src='http://image.toast.com/aaaaahb/api-description/member/accumulation/get_profile_accumulations_waiting.png?autox150'></a>\n"
      operationId: search-estimated-accumulations
      parameters:
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      - name: accessToken
        in: header
        description: 회원 엑세스 토큰
        required: false
        schema:
          type: string
        example: accessToken
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profile-accumulations-waiting211812153'
              examples:
                search-estimated-accumulations:
                  value: |-
                    {
                      "waitingAccumulation" : 0
                    }
  /shopby/instagram/media:
    get:
      tags:
      - Instagram
      summary: instagram 피드(게시글 목록) 조회하기
      description: "\n## 부가설명 및 특이사항 \n해당 쇼핑몰의 인스타그램 게시글 목록을 조회하는 API 입니다.\n\n조회간\
        \ 에러 발생시, 에러 정보가 Response 객체에 포함됩니다."
      operationId: get-instagram-media
      parameters:
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shopby-instagram-media-297972756'
              examples:
                get-instagram-media:
                  value: |-
                    {
                      "data" : [ {
                        "media_url" : "https://fb-s-b-a.akamaihd.net/...",
                        "permalink" : "https://www.instagram.com/p/.../",
                        "thumbnail_url" : "https://fb-s-b-a.akamaihd.net/...",
                        "media_type" : "IMAGE",
                        "username" : "test88"
                      } ],
                      "error" : {
                        "message" : "Message describing the error",
                        "type" : "OAuthException",
                        "code" : 190,
                        "fbtrace_id" : "EJplcsCTest"
                      }
                    }
  /terms:
    get:
      tags:
      - Terms
      summary: 적용 중인 몰 약관 조회하기
      description: |
        ## 부가설명 및 특이사항
        해당 쇼핑몰의 약관을 조회하는 API 입니다.
      operationId: search-used-terms
      parameters:
      - name: termsTypes
        in: query
        description: "조회할 약관 타입 리스트 (MALL_INTRODUCTION: 쇼핑몰/회사 소개, USE: 이용약관, E_COMMERCE:\
          \ 전자금융거래 이용약관, PI_PROCESS: 개인정보처리방침, PI_COLLECTION_AND_USE_REQUIRED: 개인정\
          보 수집/이용, PI_COLLECTION_AND_USE_OPTIONAL: 개인정보 수집/이용, PI_PROCESS_CONSIGNMENT:\
          \ 개인정보 처리/위탁, PI_THIRD_PARTY_PROVISION: 개인정보 제3자 제공, PI_COLLECTION_AND_USE_FOR_GUEST_ON_ARTICLE:\
          \ 개인정보 수집/이용, ACCESS_GUIDE: 이용안내, WITHDRAWAL_GUIDE: 탈퇴안내, PI_SELLER_PROVISION:\
          \ 개인정보 판매자 제공, PI_COLLECTION_AND_USE_ON_ORDER: 개인정보 수집/이용, ORDER_INFO_AGREE:\
          \ 구매 동의, CLEARANCE_INFO_COLLECTION_AND_USE: 통관정보 수집/이용, TRANSFER_AGREE:\
          \ 개인정보 국외 이전 동의, REGULAR_PAYMENT_USE: 정기결제(배송) 이용약관, AUTO_APPROVAL_USE:\
          \ 자동 승인 이용약관, PI_LIQUOR_PURCHASE_PROVISION: 주류구매 개인정보 수집/이용, PI_RESTOCK_NOTICE:\
          \ 개인정보 수집/이용)"
        required: true
        schema:
          type: string
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/terms-1849610091'
              examples:
                search-used-terms:
                  value: |-
                    {
                      "key" : {
                        "used" : true,
                        "contents" : "content",
                        "enforcementDate" : "2024-01-05"
                      }
                    }
    post:
      tags:
      - Terms
      summary: 적용 중인 몰 약관 조회하기 (ver 1.1)
      description: |
        ## 부가설명 및 특이사항
        해당 쇼핑몰의 약관을 조회하는 API 입니다. (ver 1.1)
        치환하고 싶은 문구를 replacementPhrase 항목에 [key:value]형태로 넣어서 치환할 수 있습니다.
      operationId: post-search-used-terms
      parameters:
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/terms1116014589'
            examples:
              post-search-used-terms:
                value: |-
                  {
                    "termsType" : [ "USE" ],
                    "replacementPhrase" : {
                      "key" : "value"
                    }
                  }
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/terms-1849610091'
              examples:
                post-search-used-terms:
                  value: |-
                    {
                      "key" : {
                        "used" : true,
                        "contents" : "content",
                        "enforcementDate" : "2024-01-05"
                      }
                    }
  /terms/custom:
    post:
      tags:
      - Terms
      summary: 추가 약관 조회하기
      description: |
        ## 부가설명 및 특이사항
        해당 쇼핑몰의 추가 약관을 조회하는 API 입니다.
      operationId: get-custom-terms
      parameters:
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/terms1116014589'
            examples:
              get-custom-terms:
                value: |-
                  {
                    "customCategoryType" : "MEMBER",
                    "replacementPhrase" : null
                  }
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/terms-custom824775241'
              examples:
                get-custom-terms:
                  value: |-
                    [ {
                      "no" : 1,
                      "termsName" : "항목명",
                      "termsNameEng" : "English..",
                      "used" : true,
                      "required" : true,
                      "contents" : "..."
                    } ]
  /terms/history:
    get:
      tags:
      - Terms
      summary: 약관 변경이력 조회하기
      description: |
        ## 부가설명 및 특이사항
        해당 쇼핑몰 약관의 변경이력을 조회하는 API 입니다.

        ## 화면 예시
        <a target='_blank' href='http://image.toast.com/aaaaahb/api-description/member/common/get_terms_history.png'><img src='http://image.toast.com/aaaaahb/api-description/member/common/get_terms_history.png?autox150'></a>
      operationId: search-terms-histories
      parameters:
      - name: termsType
        in: query
        description: "조회할 약관 타입 리스트 (USE: 이용약관, E_COMMERCE: 전자금융거래 이용약관, PI_PROCESS:\
          \ 개인정보처리방침, REGULAR_PAYMENT_USE: 정기결제(배송) 이용약관, AUTO_APPROVAL_USE: 자동 승인\
          \ 이용약관)"
        required: true
        schema:
          type: string
        example: USE
      - name: futureDaysToShow
        in: query
        description: 조회할 현재부터 미래 날짜
        required: false
        schema:
          type: string
        example: "0"
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/terms-history143648857'
              examples:
                search-terms-histories:
                  value: |-
                    [ {
                      "termsNo" : 1,
                      "enforcementDate" : "2024-01-05",
                      "termsEnforcementStatusLabel" : "현재 시행중"
                    } ]
  /terms/{termsNo}:
    get:
      tags:
      - Terms
      summary: 약관 상세 조회하기
      description: |
        ## 부가설명 및 특이사항
        특정 약관(약관번호 기준)을 상세 조회하는 API 입니다.

        ## 화면 예시
        <a target='_blank' href='http://image.toast.com/aaaaahb/api-description/member/common/get_terms_termsno.png'><img src='http://image.toast.com/aaaaahb/api-description/member/common/get_terms_termsno.png?autox150'></a>
      operationId: get-term
      parameters:
      - name: termsNo
        in: path
        description: 조회할 약관 번호
        required: true
        schema:
          type: string
        example: "1"
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/terms-termsNo-1990424634'
              examples:
                get-term:
                  value: |-
                    {
                      "used" : true,
                      "contents" : "contents",
                      "enforcementDate" : "2024-01-05"
                    }
    post:
      tags:
      - Terms
      summary: 약관 상세 조회하기 (ver 1.1)
      description: |
        ## 부가설명 및 특이사항
        특정 약관(약관번호 기준)을 상세 조회하는 API 입니다. (ver 1.1)
        치환하고 싶은 문구를 replacementPhrase 항목에 [key:value]형태로 넣어서 치환할 수 있습니다.

        ## 화면 예시
        <a target='_blank' href='http://image.toast.com/aaaaahb/api-description/member/common/get_terms_termsno.png'><img src='http://image.toast.com/aaaaahb/api-description/member/common/get_terms_termsno.png?autox150'></a>
      operationId: post-terms
      parameters:
      - name: termsNo
        in: path
        description: 조회할 약관 번호
        required: true
        schema:
          type: string
        example: "1"
      - name: Version
        in: header
        description: API 버전
        required: true
        schema:
          type: string
        example: "1.0"
      - name: clientId
        in: header
        description: 쇼핑몰 클라이언트 아이디
        required: true
        schema:
          type: string
        example: test-client-id
      - name: platform
        in: header
        description: "클라이언트 플랫폼 (PC, MOBILE_WEB, IOS, AOS)"
        required: true
        schema:
          type: string
        example: PC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/terms1116014589'
            examples:
              post-terms:
                value: |-
                  {
                    "termsNo" : 1010,
                    "replacementPhrase" : {
                      "key" : "value"
                    }
                  }
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/terms-termsNo-1990424634'
              examples:
                post-terms:
                  value: |-
                    {
                      "used" : true,
                      "contents" : "contents",
                      "enforcementDate" : "2024-01-05"
                    }
components:
  schemas:
    inquiries-inquiryNo1319745130:
      type: object
      properties:
        inquiryTitle:
          type: string
          description: "1:1 문의 제목 (최대길이 : 400)"
          example: 문의 제목 입니다.
        answerEmailSendYn:
          type: boolean
          description: "답변 등록시 메일 수신여부 (false: 수신 안함, true: 수신함)"
          example: false
        uploadedFileNames:
          type: array
          description: 업로드 된 파일명
          items:
            type: string
        answerSmsSendYn:
          type: boolean
          description: "답변 등록시 SMS 수신여부 (false: 수신 안함, true: 수신함)"
          example: false
        originalFileNames:
          type: array
          description: 원본 파일명
          items:
            type: string
        inquiryContent:
          type: string
          description: "1:1 문의 내용 (최대길이 : 16,700,000)"
          example: 문의 내용 입니다.
      description: ""
    page-scripts807368217:
      type: array
      description: ""
      items:
        type: object
        properties:
          deviceType:
            type: string
            description: "기기 타입(PC, MOBILE)"
            example: PC
          pageType:
            type: string
            description: "페이지 타입 (MAIN: 메인 페이지, COMMON_HEAD: 상단 공통영역, COMMON_FOOTER:\
              \ 하단 공통영역, PRODUCT: 상품 상세 페이지, PRODUCT_LIST: 상품 리스트 페이지, PRODUCT_SEARCH:\
              \ 상품 검색결과 페이지, CART: 장바구니 페이지, ORDER: 주문하기 페이지, ORDER_DETAIL: 주문상세 페\
              이지, ORDER_COMPLETE: 주문완료 페이지, DISPLAY_SECTION: 메인 싱품 분류지, MEMBER_JOIN_COMPLETE:\
              \ 회원가입완료 페이지, MY_PAGE: 마이 페이지)"
            example: CART
          pageTypeLabel:
            type: string
            description: 페이지 타입 Label
            example: 장바구니 페이지
          content:
            type: string
            description: 스크립트 (nullable)
            example: aaa
    inquiries-inquiryNo482104634:
      type: object
      properties:
        originalFileName:
          type: array
          description: 원본 파일명
          items:
            type: string
        inquiryTitle:
          type: string
          description: "1:1 문의 제목 (최대길이 : 400)"
          example: 문의 제목 입니다.
        answerEmailSendYn:
          type: boolean
          description: "답변 등록시 메일 수신여부 (false: 수신 안함, true: 수신함) (nullable)"
          example: false
        uploadedFileName:
          type: array
          description: 업로드 된 파일명
          items:
            type: string
        answerSmsSendYn:
          type: boolean
          description: "답변 등록시 SMS 수신여부 (false: 수신 안함, true: 수신함) (nullable)"
          example: false
        inquiryContent:
          type: string
          description: "1:1 문의 내용 (최대길이 : 16,700,000)"
          example: 문의 내용 입니다.
      description: ""
    holiday-736675939:
      type: array
      description: 공휴일목록
      example: "[5, 6, 12, 13, 19, 20, 25, 26, 27]"
      items:
        type: number
    boards-boardNo-categories2026858948:
      type: array
      description: ""
      items:
        type: object
        properties:
          categoryNo:
            type: number
            description: 게시판 카테고리 번호
            example: 1
          label:
            type: string
            description: 카테고리 명칭
            example: category
    boards-boardNo-articles-articleNo-report-808776058:
      type: object
      properties:
        reportReasonType:
          type: string
          description: "신고사유(저작권 침해: COPYRIGHT, 비방: SLANDER, ETC: 기타사유)"
          example: SLANDER
        content:
          type: string
          description: 신고 내용
          example: 욕설
      description: ""
    boards-boardNo-articles-articleNo-replies1451829958:
      type: object
      properties:
        totalCount:
          type: number
          description: 게시글 답글 리스트 개수
          example: 1
        items:
          type: array
          description: 게시글 답글 리스트
          items:
            type: object
            properties:
              replied:
                type: boolean
                description: "답글 여부 (false: 답글 미존재, true: 답글 존재)"
                example: false
              modifyYmdt:
                type: string
                description: 최종 수정일 (nullable)
                example: YYYY-MM-DD HH:mm:ss
              categoryLabel:
                type: string
                description: 카테고리 명
                example: category
              registerType:
                type: string
                description: 최초 등록자 타입
                example: ADMIN
                enum:
                - "ADMIN: 운영자"
                - "MEMBER: 회원"
                - "GUEST: 비회원"
              title:
                type: string
                description: 제목
                example: title
              modifierType:
                type: string
                description: 수정자 타입 (nullable)
                example: ADMIN
                enum:
                - "ADMIN: 운영자"
                - "MEMBER: 회원"
                - "GUEST: 비회원"
              content:
                type: string
                description: 내용 (nullable)
                example: content
              articleNo:
                type: number
                description: 게시글 번호
                example: 1
              registerNo:
                type: number
                description: 최초 등록자 번호 (nullable)
                example: 1
              viewCnt:
                type: number
                description: 조회수
                example: 1
              imageUrl:
                type: string
                description: 이미지 URL
                example: image
              categoryNo:
                type: number
                description: 카테고리 번호
                example: 1
              modifiable:
                type: boolean
                description: 수정 가능 여부
                example: false
              memberId:
                type: string
                description: 회원 아이디
                example: memberId
              notice:
                type: boolean
                description: "공지 여부 (false: 일반글, true: 공지글)"
                example: false
              registerYmdt:
                type: string
                description: 최초 등록일
                example: YYYY-MM-DD HH:mm:ss
              modifierNo:
                type: number
                description: 수정자 번호 (nullable)
                example: 1
              secreted:
                type: boolean
                description: "비밀글 여부 (false: 공개글, true: 비밀글)"
                example: false
              recommended:
                type: boolean
                description: 해당 게시글 본인 추천 여부
                example: false
              tags:
                type: array
                description: 태그
                example: "[]"
                items:
                  oneOf:
                  - type: object
                  - type: boolean
                  - type: string
                  - type: number
              repliedCnt:
                type: number
                description: 답글 수
                example: 0
              recommendCount:
                type: number
                description: 추천수
                example: 1
              attached:
                type: boolean
                description: "파일 첨부 여부 (false: 첨부파일 미존재, true: 첨부파일 존재)"
                example: false
              reportCount:
                type: number
                description: 게시글 신고 누적 횟수
                example: 1
              modifierName:
                type: string
                description: 최종 수정자명 (nullable)
                example: modifier
              registerName:
                type: string
                description: 최초 등록자명
                example: register
              displayStatusType:
                type: string
                description: "게시글 전시 상태 (전시중: DISPLAY, 차단: BLIND)"
                example: DISPLAY
      description: ""
    boards-boardNo-articles-articleNo-1875198411:
      type: object
      properties:
        password:
          type: string
          description: 비회원용 게시글 작성 비밀번호 (nullable)
          example: password
      description: ""
    inquiries-configurations-784433679:
      type: object
      properties:
        replyUsed:
          type: boolean
          description: "답글 작성 허용 여부 (false: 작성 미허용, true: 작성 허용)"
          example: false
        guestPostingUsed:
          type: boolean
          description: "비회원 글 작성 허용 여부 (false: 작성 미허용, true: 작성 허용)"
          example: true
        description:
          type: string
          description: 게시판 설명
          example: 1:1문의
        memberPostingUsed:
          type: boolean
          description: "회원 글 작성 허용 여부 (false: 작성 미허용, true: 작성 허용)"
          example: true
        used:
          type: boolean
          description: 게시판 사용 여부
          example: false
        answerMailTemplateUsed:
          type: boolean
          description: "답변완료 Email 템플릿 사용 여부  (false: 템플릿 미사용, true: 템플릿 사용)"
          example: false
        imageDisplayType:
          type: string
          description: 게시판 리스트 이미지 유형
          example: ATTACHMENT
          enum:
          - "NOT_USED: 사용안함"
          - "ATTACHMENT: 첨부파일"
          - "PRODUCT: 상품이미지"
        answerSmsTemplateUsed:
          type: boolean
          description: "답변완료 SMS 템플릿 사용 여부 (false: 템플릿 미사용, true: 템플릿 사용)"
          example: true
        displayType:
          type: string
          description: 게시판 유형
          example: LIST
          enum:
          - "LIST: 리스트형"
          - "CARD: 카드형"
          - "REPLY: 댓글형"
          - "INQUIRY: 문의형"
        attachmentUsed:
          type: boolean
          description: "첨부파일 게시 허용 여부 (false: 첨부 미허용, true: 첨부 허용)"
          example: false
        name:
          type: string
          description: 게시판 이름
          example: 1:1문의
        secretPostingUsed:
          type: boolean
          description: "비밀글 작성 허용 여부 (false: 작성 미허용, true: 작성 허용)"
          example: false
        emailUsed:
          type: boolean
          description: "Email 사용 여부 (false: Email 미사용, true: Email 사용)"
          example: false
        smsUsed:
          type: boolean
          description: "SMS 사용 여부 (false: SMS 미사용, true: SMS 사용)"
          example: false
      description: ""
    boards-configurations-832411598:
      type: object
      properties:
        productReviewConfig:
          type: object
          properties:
            imageDisplayType:
              type: string
              description: 게시판 리스트 이미지 유형
              example: NOT_USED
              enum:
              - "NOT_USED: 사용안함"
              - "ATTACHMENT: 첨부파일"
              - "PRODUCT: 상품이미지"
            replyUsed:
              type: boolean
              description: "답글작성 가능 여부 (false: 답글 작성 불가능, true: 답글 작성가능)"
              example: false
            displayType:
              type: string
              description: 게시판 유형
              example: LIST
              enum:
              - "LIST: 리스트형"
              - "CARD: 카드형"
              - "REPLY: 댓글형"
              - "INQUIRY: 문의형"
            reviewAccumulation:
              type: object
              properties:
                normalReview:
                  type: object
                  properties:
                    amount:
                      type: number
                      description: 텍스트 리뷰 지급 적립금
                      example: 500
                    contentLength:
                      type: number
                      description: 텍스트 리뷰 지급 조건 (글자 수)
                      example: 100
                  description: ""
                use:
                  type: boolean
                  description: "상품후기 적립금 관련 설정 여부 (false: 후기 적립금 미설정, true: 후기 적립금\
                    \ 설정)"
                  example: true
                photoReview:
                  type: object
                  properties:
                    amount:
                      type: number
                      description: 포토 리뷰 지급 적립금
                      example: 1000
                    contentLength:
                      type: number
                      description: 포토 리뷰 지급 조건 (글자 수)
                      example: 10
                  description: ""
              description: ""
            guestPostingUsed:
              type: boolean
              description: "비회원 작성가능 여부 (false: 비회원 작성 불가능, true: 비회원 작성가능)"
              example: false
            attachmentUsed:
              type: boolean
              description: "첨부파일 사용 여부 (false: 첨부파일 미사용, true: 첨부파일 사용)"
              example: false
            name:
              type: string
              description: 게시판 이름
              example: 상품리뷰
            secretPostingUsed:
              type: boolean
              description: "비밀글 작성가능 여부 (false: 비밀글 작성 불가능, true: 비밀글 작성가능)"
              example: false
            memberPostingUsed:
              type: boolean
              description: "회원 작성가능 여부 (false: 회원 작성 불가능, true: 회원 작성가능)"
              example: false
            used:
              type: boolean
              description: "사용여부 (false: 미사용, true: 사용)"
              example: false
          description: 상품 후기 게시판 설정(샵바이 프로인 경우만 값이 있음)
        productInquiryConfig:
          type: object
          properties:
            imageDisplayType:
              type: string
              description: 게시판 리스트 이미지 유형
              example: NOT_USED
              enum:
              - "NOT_USED: 사용안함"
              - "ATTACHMENT: 첨부파일"
              - "PRODUCT: 상품이미지"
            replyUsed:
              type: boolean
              description: "답글작성 가능 여부 (false: 답글 작성 불가능, true: 답글 작성가능)"
              example: false
            displayType:
              type: string
              description: 게시판 유형
              example: LIST
              enum:
              - "LIST: 리스트형"
              - "CARD: 카드형"
              - "REPLY: 댓글형"
              - "INQUIRY: 문의형"
            guestPostingUsed:
              type: boolean
              description: "비회원 작성가능 여부 (false: 비회원 작성 불가능, true: 비회원 작성가능)"
              example: false
            attachmentUsed:
              type: boolean
              description: "첨부파일 사용 여부 (false: 첨부파일 미사용, true: 첨부파일 사용)"
              example: false
            name:
              type: string
              description: 게시판 이름
              example: 상품문의
            secretPostingUsed:
              type: boolean
              description: "비밀글 작성가능 여부 (false: 비밀글 작성 불가능, true: 비밀글 작성가능)"
              example: false
            memberPostingUsed:
              type: boolean
              description: "회원 작성가능 여부 (false: 회원 작성 불가능, true: 회원 작성가능)"
              example: false
            used:
              type: boolean
              description: "사용여부 (false: 미사용, true: 사용)"
              example: false
          description: 상품 문의 게시판 설정(샵바이 프로인 경우만 값이 있음)
        boardConfigs:
          type: array
          description: 일반 게시판 설정
          items:
            type: object
            properties:
              replyUsed:
                type: boolean
                description: "답글작성 가능 여부 (false: 답글 작성 불가능, true: 답글 작성가능)"
                example: false
              thumbnailUsed:
                type: boolean
                description: "썸네일 여부 (false: 썸네일 미존재, true: 썸네일 존재)"
                example: false
              guestPostingUsed:
                type: boolean
                description: "비회원 작성가능 여부 (false: 비회원 작성 불가능, true: 비회원 작성가능)"
                example: false
              used:
                type: boolean
                description: "사용여부 (false: 미사용, true: 사용)"
                example: false
              memberPostingUsed:
                type: boolean
                description: "회원 작성가능 여부 (false: 회원 작성 불가능, true: 회원 작성가능)"
                example: false
              imageDisplayType:
                type: string
                description: 게시판 리스트 이미지 유형
                example: NOT_USED
                enum:
                - "NOT_USED: 사용안함"
                - "ATTACHMENT: 첨부파일"
                - "PRODUCT: 상품이미지"
              displayType:
                type: string
                description: 게시판 유형
                example: LIST
                enum:
                - "LIST: 리스트형"
                - "CARD: 카드형"
                - "REPLY: 댓글형"
                - "INQUIRY: 문의형"
              categoryUsed:
                type: boolean
                description: "카테고리 사용 여부 (false: 카테고리 미사용, true: 카테고리 사용)"
                example: false
              attachmentUsed:
                type: boolean
                description: "첨부파일 사용 여부 (false: 첨부파일 미사용, true: 첨부파일 사용)"
                example: false
              name:
                type: string
                description: 게시판 이름
                example: 공지사항
              secretPostingUsed:
                type: boolean
                description: "비밀글 작성가능 여부 (false: 비밀글 작성 불가능, true: 비밀글 작성가능)"
                example: false
              boardId:
                type: string
                description: 게시판 ID
                example: test
              categories:
                type: array
                description: ""
                items:
                  type: object
                  properties:
                    categoryNo:
                      type: number
                      description: 카테고리 번호
                      example: 1
                    label:
                      type: string
                      description: 카테고리 이름
                      example: 공지
              order:
                type: number
                description: 게시판 순서
                example: 1
              boardNo:
                type: number
                description: 게시판 번호
                example: 1
        inquiryConfig:
          type: object
          properties:
            replyUsed:
              type: boolean
              description: "답글 작성 허용 여부 (false: 작성 미허용, true: 작성 허용)"
              example: false
            guestPostingUsed:
              type: boolean
              description: "비회원 글 작성 허용 여부 (false: 작성 미허용, true: 작성 허용)"
              example: false
            description:
              type: string
              description: 게시판 설명
              example: 설명
            memberPostingUsed:
              type: boolean
              description: "회원 글 작성 허용 여부 (false: 작성 미허용, true: 작성 허용)"
              example: false
            used:
              type: boolean
              description: 게시판 사용 여부
              example: false
            answerMailTemplateUsed:
              type: boolean
              description: "답변완료 Email 템플릿 사용 여부  (false: 템플릿 미사용, true: 템플릿 사용)"
              example: false
            imageDisplayType:
              type: string
              description: 게시판 리스트 이미지 유형
              example: NOT_USED
              enum:
              - "NOT_USED: 사용안함"
              - "ATTACHMENT: 첨부파일"
              - "PRODUCT: 상품이미지"
            answerSmsTemplateUsed:
              type: boolean
              description: "답변완료 SMS 템플릿 사용 여부 (false: 템플릿 미사용, true: 템플릿 사용)"
              example: false
            displayType:
              type: string
              description: 게시판 유형
              example: LIST
              enum:
              - "LIST: 리스트형"
              - "CARD: 카드형"
              - "REPLY: 댓글형"
              - "INQUIRY: 문의형"
            attachmentUsed:
              type: boolean
              description: "첨부파일 게시 허용 여부 (false: 첨부 미허용, true: 첨부 허용)"
              example: false
            name:
              type: string
              description: 게시판 이름
              example: 1:1문의
            secretPostingUsed:
              type: boolean
              description: "비밀글 작성 허용 여부 (false: 작성 미허용, true: 작성 허용)"
              example: false
            emailUsed:
              type: boolean
              description: "Email 사용 여부 (false: Email 미사용, true: Email 사용)"
              example: false
            smsUsed:
              type: boolean
              description: "SMS 사용 여부 (false: SMS 미사용, true: SMS 사용)"
              example: false
          description: 1:1문의 게시판 설정(샵바이 프로인 경우만 값이 있음)
      description: ""
    shopby-instagram-media-297972756:
      type: object
      properties:
        data:
          type: array
          description: ""
          items:
            type: object
            properties:
              media_type:
                type: string
                description: "미디어 유형(VIDEO, IMAGE, CAROUSEL_ALBUM)"
                example: IMAGE
              thumbnail_url:
                type: string
                description: 썸네일 URL(VIDEO 미디어에만 제공)
                example: https://fb-s-b-a.akamaihd.net/...
              permalink:
                type: string
                description: 미디어 영구 URL(미디어에 저작권이 있는 자료가 포함되어 있거나 저작권 위반 플래그가 지정된
                  경우 생략)
                example: https://www.instagram.com/p/.../
              media_url:
                type: string
                description: 미디어 URL
                example: https://fb-s-b-a.akamaihd.net/...
              username:
                type: string
                description: 인스타그램 유저 이름
                example: user88
        error:
          type: object
          properties:
            code:
              type: number
              description: 에러 코드
              example: 190
            type:
              type: string
              description: 에러 유형
              example: OAuthException
            message:
              type: string
              description: 에러 메세지
              example: Message describing the error
            fbtrace_id:
              type: string
              description: 내부 지원 식별자
              example: EJplcsCTest
          description: ""
      description: ""
    terms-1849610091:
      type: object
      properties:
        key:
          type: object
          properties:
            contents:
              type: string
              description: 약관 내용
              example: contents
            enforcementDate:
              type: string
              description: 시행일
              example: YYYY-MM-DD
            used:
              type: boolean
              description: "약관 사용 여부 (false: 미사용, true: 사용)"
              example: false
          description: 약관 타입
          example: use
      description: ""
    terms-history143648857:
      type: array
      description: ""
      items:
        type: object
        properties:
          termsEnforcementStatusLabel:
            type: string
            description: 약관 시행일 상태
            example: 현재 시행중
          enforcementDate:
            type: string
            description: 약관 시행일
            example: YYYY-MM-DD
          termsNo:
            type: number
            description: 약관 번호
            example: 1
    boards-boardNo-articles504530629:
      type: object
      properties:
        images:
          type: array
          description: ""
          items:
            type: object
            properties:
              originalFileName:
                type: string
                description: "원본 파일명 (최대 길이 100자, 업로드 파일 최대 개수: 10)"
                example: string
              uploadedFileName:
                type: string
                description: "업로드 된 파일명 (최대 길이 500자, 업로드 파일 최대 개수: 10)"
                example: string
        password:
          type: string
          description: 비회원 글쓰기용 비밀번호 (nullable)
          example: password
        articleTitle:
          type: string
          description: 게시글 제목
          example: 게시글 제목 입니다.
        parentBoardArticleNo:
          type: number
          description: 상위 게시글 번호 (nullable)
          example: 12345
        articleContent:
          type: string
          description: 게시글 내용
          example: 게시글 내용 입니다.
        boardCategoryNo:
          type: number
          description: 카테고리 번호 (nullable)
          example: 12345
        secreted:
          type: boolean
          description: "비밀글 여부 (false: 공개글, true: 비밀글)"
          example: false
        thumbnailUrl:
          type: string
          description: 대표 이미지 (최대 길이 500자) (nullable)
          example: http://image.co.kr/thumbnail.jpg
        tags:
          type: array
          description: 태그목록 (nullable)
          example: "[\"태그\"]"
          items:
            type: string
        guestName:
          type: string
          description: 비회원 작성자. 생략하면 '비회원'으로 노출. (nullable)
          example: 비회원
      description: ""
    terms-termsNo-1990424634:
      type: object
      properties:
        contents:
          type: string
          description: 약관 내용
          example: 약관 내용
        enforcementDate:
          type: string
          description: 시행일
          example: YYYY-MM-DD
        used:
          type: boolean
          description: "약관 사용 여부 (false: 미사용, true: 사용)"
          example: false
      description: ""
    inquiries-1702559394:
      type: object
      properties:
        totalCount:
          type: number
          description: 1:1문의 개수
          example: 1
        items:
          type: array
          description: 1:1문의
          items:
            type: object
            properties:
              answerSmsSend:
                type: boolean
                description: "답변 등록시 SMS 수신 여부 (false: 수신 안함, true: 수신함)"
                example: false
              inquiryType:
                type: object
                properties:
                  inquiryTypeDescription:
                    type: string
                    description: 1:1문의 유형 설명
                    example: ""
                  inquiryTypeNo:
                    type: number
                    description: 1:1문의 유형 번호
                    example: 0
                  inquiryTypeName:
                    type: string
                    description: 1:1문의 유형 이름
                    example: ""
                description: 1:1문의 유형
              orderNo:
                type: string
                description: 주문번호 (nullable)
                example: String
              answerEmailSend:
                type: boolean
                description: "답변 등록시 메일 수신 여부 (false: 수신 안함, true: 수신함)"
                example: false
              issuerName:
                type: string
                description: 1:1 문의자 이름
                example: 문의자
              originalImageUrls:
                type: array
                description: 원본 이미지 url
                example: "[\"http://image.co.kr/image01.jpg\", \"http://image.co.kr/image02.jpg\"\
                  ]"
                items:
                  type: string
              inquiryStatus:
                type: string
                description: "답변 상태 (ISSUED(ASKED-이전버전 호환용): 답변대기, IN_PROGRESS: 답변\
                  \ 진행중, ANSWERED: 답변완료)"
                example: ISSUED
                enum:
                - "ISSUED: Waiting for Answers"
                - "ASKED: Waiting for Answers"
                - "IN_PROGRESS: Answering in Progress"
                - "ANSWERED: ANSWERED"
              productName:
                type: string
                description: 상품명 (nullable)
                example: productName
              registerNo:
                type: number
                description: 등록인 번호 (nullable)
                example: 13
              inquiryTitle:
                type: string
                description: 문의 제목
                example: title
              answer:
                type: object
                properties:
                  answerRegisterYmdt:
                    type: string
                    description: 답변 일자 (nullable)
                    example: YYYY-MM-DD HH:mm:ss
                  answerContent:
                    type: string
                    description: 답변 내용 (nullable)
                    example: ""
                  answerNo:
                    type: number
                    description: 답변 번호 (nullable)
                    example: 0
                description: 1:1문의 답변 (nullable)
                example: "0"
              imageUrls:
                type: array
                description: 이미지 url
                example: "[\"http://image.co.kr/image01.jpg\", \"http://image.co.kr/image02.jpg\"\
                  ]"
                items:
                  type: string
              inquiryContent:
                type: string
                description: 문의 내용
                example: content
              productNo:
                type: number
                description: 상품번호 (nullable)
                example: 12345
              registerYmdt:
                type: string
                description: 등록일
                example: YYYY-MM-DD HH:mm:ss
              inquiryNo:
                type: number
                description: 1:1문의 번호
                example: 11234
      description: ""
    boards-boardNo-articles-articleNo-665973613:
      type: object
      properties:
        images:
          type: array
          description: ""
          items:
            type: object
            properties:
              originalFileName:
                type: string
                description: "원본 파일명(업로드 파일 최대 개수: 10) (nullable)"
                example: string
              uploadedFileName:
                type: string
                description: "업로드 된 파일명(업로드 파일 최대 개수: 10) (nullable)"
                example: string
        password:
          type: string
          description: 비회원 글쓰기용 비밀번호 확인 (nullable)
          example: password
        articleTitle:
          type: string
          description: 게시글 제목
          example: 게시글 제목 입니다.
        articleContent:
          type: string
          description: 게시글 내용
          example: 게시글 내용 입니다.
        boardCategoryNo:
          type: number
          description: 게시판 카테고리 번호
          example: 123
        secreted:
          type: boolean
          description: "비밀글 여부 (false: 공개글, true: 비밀글)"
          example: false
        thumbnailUrl:
          type: string
          description: 대표 이미지
          example: http://image.co.kr/thumbnail.jpg
        tags:
          type: array
          description: 태그들 (nullable)
          example: "[\"태그\"]"
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        guestName:
          type: string
          description: 비회원 수정자. 생략하면 '비회원'으로 노출. (nullable)
          example: 비회원
      description: ""
    boards-boardNo-articles-articleNo-editable-149444152:
      type: object
      properties:
        password:
          type: string
          description: 비회원 글쓰기용 비밀번호 확인 (nullable)
          example: password
      description: ""
    inquiries226483999:
      type: object
      properties:
        originalFileName:
          type: array
          description: 원본 파일명 (nullable)
          example: "[\"http://image.co.kr/image01.jpg\", \"http://image.co.kr/image02.jpg\"\
            ]"
          items:
            type: string
        inquiryTitle:
          type: string
          description: "1:1 문의 제목 (최대길이 : 400)"
          example: test Title
        answerEmailSendYn:
          type: boolean
          description: "답변 등록시 메일 수신여부 (false: 수신 안함, true: 수신함) (nullable)"
          example: false
        uploadedFileName:
          type: array
          description: 업로드 된 파일명 (nullable)
          example: "[\"http://image.co.kr/image01.jpg\", \"http://image.co.kr/image02.jpg\"\
            ]"
          items:
            type: string
        orderNo:
          type: string
          description: 주문번호 (nullable)
          example: "12345"
        captcha:
          type: string
          description: "캡챠서비스 키(미사용 변수, 추후 사용예정)"
        inquiryTypeNo:
          type: number
          description: |2-

             1:1 문의 유형 번호<br>
             ※ 어드민에서 등록한 1:1 문의유형은 [GET /malls 몰 정보 조회하기 API](https://docs.shopby.co.kr/#/Mall/get-malls) 호출 시,<br>
             응답값 내 inquiryType에서 inquiryTypeNo(1:1문의 유형번호) 항목 정보를 확인 가능합니다.<br>
             (nullable)
          example: 0
        answerSmsSendYn:
          type: boolean
          description: "답변 등록시 SMS 수신여부 (false: 수신 안함, true: 수신함) (nullable)"
          example: false
        inquiryContent:
          type: string
          description: "1:1 문의 내용 (최대길이 : 16,700,000)"
          example: test Content
        mobileNo:
          type: string
          description: 비회원 등록 시 작성자 휴대폰 번호 (nullable)
          example: "01012341234"
        email:
          type: string
          description: 비회원 등록 시 작성자 이메일 주소 (nullable)
          example: test@test.com
        productNo:
          type: number
          description: 상품번호 (nullable)
          example: 12345
      description: ""
    terms-custom824775241:
      type: array
      description: ""
      items:
        type: object
        properties:
          "no":
            type: number
            description: 추가 약관 번호
            example: 1
          contents:
            type: string
            description: 약관 내용
            example: contents
          used:
            type: boolean
            description: 사용 여부
            example: true
          termsName:
            type: string
            description: 약관명
            example: 항목명
          required:
            type: boolean
            description: 필수 여부
            example: true
          termsNameEng:
            type: string
            description: 약관 영문명 (nullable)
            example: 영문 약관명
    profile-accumulations-summary-1470401351:
      type: object
      properties:
        totalAvailableAmt:
          type: number
          description: 사용가능한 총 적립금액
          example: 0
        totalExpireAmt:
          type: number
          description: 만료조회 총 적립금액
          example: 0
      description: ""
    inquiries1602970542:
      type: object
      properties:
        inquiryNo:
          type: number
          description: 1:1 문의 일련번호
          example: 123
      description: ""
    inquiries-inquiryNo-1705667149:
      type: object
      properties:
        answerSmsSend:
          type: boolean
          description: "답변 등록시 SMS 수신 여부 (false: 수신 안함, true: 수신함)"
          example: false
        inquiryType:
          type: object
          properties:
            inquiryTypeDescription:
              type: string
              description: 1:1문의 유형 설명
              example: 상품문의 입니다
            inquiryTypeNo:
              type: number
              description: 1:1문의 유형 번호
              example: 0
            inquiryTypeName:
              type: string
              description: 1:1문의 유형 이름
              example: 상품문의
          description: 1:1문의 유형
        orderNo:
          type: string
          description: 주문번호 (nullable)
          example: String
        answerEmailSend:
          type: boolean
          description: "답변 등록시 메일 수신 여부 (false: 수신 안함, true: 수신함)"
          example: false
        issuerName:
          type: string
          description: 1:1 문의자 이름
          example: 문의자
        originalImageUrls:
          type: array
          description: 원본 이미지 url
          example: "[\"http://image.co.kr/image01.jpg\", \"http://image.co.kr/image02.jpg\"\
            ]"
          items:
            type: string
        inquiryStatus:
          type: string
          description: "답변 상태 (ISSUED(ASKED-이전버전 호환용): 답변대기, IN_PROGRESS: 답변 진행중,\
            \ ANSWERED: 답변완료)"
          example: ASKED
          enum:
          - "ISSUED: Waiting for Answers"
          - "ASKED: Waiting for Answers"
          - "IN_PROGRESS: Answering in Progress"
          - "ANSWERED: ANSWERED"
        productName:
          type: string
          description: 상품명 (nullable)
          example: productName
        registerNo:
          type: number
          description: 등록인 번호 (nullable)
          example: 13
        inquiryTitle:
          type: string
          description: 문의 제목
          example: title
        answer:
          type: object
          properties:
            answerRegisterYmdt:
              type: string
              description: 답변 일자 (nullable)
              example: YYYY-MM-DD HH:mm:ss
            answerContent:
              type: string
              description: 답변 내용 (nullable)
              example: 답변 내용
            answerNo:
              type: number
              description: 답변 번호 (nullable)
              example: 0
            files:
              type: array
              description: 파일 목록
              items:
                type: object
                properties:
                  originalFileName:
                    type: string
                    description: 원본 파일명
                    example: file.png
                  uploadedFileName:
                    type: string
                    description: 업로드된 파일명
                    example: uploaded_file.png
          description: 1:1문의 답변 (nullable)
          example: "0"
        imageUrls:
          type: array
          description: 이미지 url
          example: "[\"http://image.co.kr/image01.jpg\", \"http://image.co.kr/image02.jpg\"\
            ]"
          items:
            type: string
        inquiryContent:
          type: string
          description: 문의 내용
          example: content
        productNo:
          type: number
          description: 상품번호 (nullable)
          example: 12345
        registerYmdt:
          type: string
          description: 등록일
          example: YYYY-MM-DD HH:mm:ss
        inquiryNo:
          type: number
          description: 1:1문의 번호
          example: 11234
      description: ""
    profile-accumulations-waiting211812153:
      type: object
      properties:
        waitingAccumulation:
          type: number
          description: 총 적립예상금액
          example: 0
      description: ""
    boards-boardNo-articles-articleNo-1236579485:
      type: object
      properties:
        attachments:
          type: array
          description: 첨부파일 목록
          items:
            type: object
            properties:
              fileName:
                type: string
                description: 원본 파일명
                example: filename.png
              uploadedFileName:
                type: string
                description: 서버에 저장된 파일명 (downloadFileUrl과 동일한 값)
                example: fileName.png
              downloadFileUrl:
                type: string
                description: 다운로드 URL (uploadedFileName과 동일한 값)
                example: downloadurl.com
        modifyYmdt:
          type: string
          description: 최종 수정일 (nullable)
          example: YYYY-MM-DD HH:mm:ss
        categoryLabel:
          type: string
          description: 카테고리 명 (nullable)
          example: 테스트카테고리
        registerType:
          type: string
          description: 최초 등록자 타입
          example: MEMBER
          enum:
          - "ADMIN: 운영자"
          - "MEMBER: 회원"
          - "GUEST: 비회원"
        title:
          type: string
          description: 제목 (nullable)
          example: title
        modifierType:
          type: string
          description: 최종 수정자 타입 (nullable)
          example: MEMBER
          enum:
          - "ADMIN: 운영자"
          - "MEMBER: 회원"
          - "GUEST: 비회원"
        content:
          type: string
          description: 본문 (nullable)
          example: content
        articleNo:
          type: number
          description: 게시글 번호
          example: 1
        childArticles:
          type: array
          description: 답글 리스트
          example: "[]"
          items:
            type: object
        registerNo:
          type: number
          description: 최초 등록자 번호 (nullable)
          example: 1
        viewCnt:
          type: number
          description: 조회수 (nullable)
          example: 0
        imageUrl:
          type: string
          description: 이미지 URL (nullable)
          example: image-url.com
        categoryNo:
          type: number
          description: 카테고리 번호 (nullable)
          example: 1
        parentArticle:
          type: object
          description: 부모 게시글
        modifiable:
          type: boolean
          description: "수정가능 여부 (false: 수정 불가능, true: 수정 가능)"
          example: true
        notice:
          type: boolean
          description: "공지글 여부 (false: 일반글, true: 공지글)"
          example: true
        memberId:
          type: string
          description: 작성자 아이디 (nullable)
          example: fpdjsns1004
        registerYmdt:
          type: string
          description: 최초 등록일 (nullable)
          example: YYYY-MM-DD HH:mm:ss
        recommendable:
          type: boolean
          description: 추천가능여부
          example: true
        modifierNo:
          type: number
          description: 최종 수정자 번호 (nullable)
          example: 1
        secreted:
          type: boolean
          description: "비밀글 여부 (false: 공개글, true: 비밀글) (nullable)"
          example: false
        tags:
          type: array
          description: 태그
          example: "[]"
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        registerGroupNames:
          type: string
          description: 최초 등록자 소속명 (nullable)
          example: "null"
        recommendCount:
          type: number
          description: 추천 수
          example: 1
        reportCount:
          type: number
          description: 게시글 신고 누적 횟수
          example: 0
        modifierName:
          type: string
          description: 최종 수정자명 (nullable)
          example: 변경자
        registerName:
          type: string
          description: 최초 등록자명
          example: 배현수
        displayStatusType:
          type: string
          description: "게시글 전시 상태 (전시중: DISPLAY, 차단: BLIND)"
          example: DISPLAY
      description: ""
    profile-accumulations506787993:
      type: object
      properties:
        memberNo:
          type: number
          description: 회원 번호
          example: 0
        totalAmt:
          type: number
          description: 적립 총액
          example: 0
        totalCount:
          type: number
          description: 전체 카운트
          example: 0
        items:
          type: array
          description: ""
          items:
            type: object
            properties:
              expireYmdt:
                type: string
                description: 만료일
                example: YYYY-MM-DD HH:mm:ss
              orderNo:
                type: string
                description: 주문번호
                example: string
              accumulationNo:
                type: number
                description: 적립금 번호
                example: 0
              mappingKey:
                type: string
                description: 맵핑 키(외부 적립금 사용 시에만 사용함)
                example: ""
              accumulationRestAmt:
                type: number
                description: 잔여 적립금
                example: 0
              accumulationReserveReason:
                type: string
                description: 적립사유 코드
                example: ADD_AFTER_PAYMENT
                enum:
                - "ADD_AFTER_PAYMENT: 상품 구매확정 적립"
                - "ADD_AFTER_EVENT_PAYMENT: 이벤트 구매확정 적립"
                - "ADD_AFTER_REPLACE_PAYMENT: 상품 교환 결제 추가 적립"
                - "ADD_POSTING: 상품평 작성 적립"
                - "ADD_CANCEL: 주문취소 재적립"
                - "ADD_RETURN: 반품 재적립"
                - "ADD_MANUAL: 운영자 지급"
                - "ADD_EVENT: 이벤트성 적립"
                - "ADD_SIGNUP: 회원가입 적립금"
                - "ADD_BIRTHDAY: 생일축하 적립금"
                - "ADD_APP_INSTALL: 앱설치 적립금"
                - "ADD_GRADE: 회원등급 적립금"
                - "ADD_GRADE_BENEFIT: 등급 혜택 즉시 지급 적립금"
                - "SUB_PAYMENT_USED: 상품 결제 사용 차감"
                - "SUB_EXTRA_PAYMENT_USED: 교환 상품 추가 결제 차감"
                - "SUB_CANCEL: 사용적립금 주문취소 재적립"
                - "SUB_RETURN: 상품 구매확정 취소 차감"
                - "SUB_DELETE_POSTING: 상품평 삭제 차감"
                - "SUB_EXPIRED: 유효기간 만료"
                - "SUB_MANUAL: 운영자 차감"
                - "SUB_DELETE_ACCOUNT: 회원탈퇴 차감"
                - "EXTERNAL_ACCUMULATION: 외부적립금"
              accumulationReserveReasonDisplay:
                type: string
                description: 적립사유 코드 표시명
                example: string
              startYmdt:
                type: string
                description: 시작일
                example: YYYY-MM-DD HH:mm:ss
              reasonDetail:
                type: string
                description: 적립사유 상세
                example: string
              totalAvailableAmt:
                type: number
                description: 적립금 총액
                example: 0
              accumulationStatusGroupType:
                type: string
                description: "적립 지급/차감 구분 코드 (PAYMENT: 지급, DEDUCTION: 차감)"
                example: PAYMENT
              accumulationAmt:
                type: number
                description: 적립금액
                example: 0
              accumulationStatus:
                type: string
                description: 적립상태 코드
                example: GIVE_AVAILABLE
                enum:
                - "GIVE: 지급"
                - "GIVE_BY_CANCELED: 차감롤백"
                - "SUBTRACTION: 차감"
                - "SUBTRACTION_BY_CANCELED: 지급롤백"
              registerYmdt:
                type: string
                description: 등록일
                example: YYYY-MM-DD HH:mm:ss
      description: ""
    boards-boardNo-articles1633620974:
      type: object
      properties:
        totalCount:
          type: number
          description: 게시글 리스트 개수
          example: 1
        items:
          type: array
          description: 게시글 리스트
          items:
            type: object
            properties:
              replied:
                type: boolean
                description: "답글 여부 (false: 답글 미존재, true: 답글 존재)"
                example: false
              modifyYmdt:
                type: string
                description: 최종 수정일 (nullable)
                example: YYYY-MM-DD HH:mm:ss
              categoryLabel:
                type: string
                description: 카테고리 명
                example: category
              registerType:
                type: string
                description: 최초 등록자 타입
                example: ADMIN
                enum:
                - "ADMIN: 운영자"
                - "MEMBER: 회원"
                - "GUEST: 비회원"
              title:
                type: string
                description: 제목
                example: title
              modifierType:
                type: string
                description: 수정자 타입 (nullable)
                example: ADMIN
                enum:
                - "ADMIN: 운영자"
                - "MEMBER: 회원"
                - "GUEST: 비회원"
              content:
                type: string
                description: 내용 (nullable)
                example: content
              articleNo:
                type: number
                description: 게시글 번호
                example: 1
              registerNo:
                type: number
                description: 최초 등록자 번호 (nullable)
                example: 1
              viewCnt:
                type: number
                description: 조회수
                example: 1
              imageUrl:
                type: string
                description: 이미지 URL
                example: image
              categoryNo:
                type: number
                description: 카테고리 번호
                example: 1
              modifiable:
                type: boolean
                description: 수정 가능 여부
                example: false
              memberId:
                type: string
                description: 회원 아이디
                example: memberId
              notice:
                type: boolean
                description: "공지 여부 (false: 일반글, true: 공지글)"
                example: false
              registerYmdt:
                type: string
                description: 최초 등록일
                example: YYYY-MM-DD HH:mm:ss
              modifierNo:
                type: number
                description: 수정자 번호 (nullable)
                example: 1
              secreted:
                type: boolean
                description: "비밀글 여부 (false: 공개글, true: 비밀글)"
                example: false
              recommended:
                type: boolean
                description: 해당 게시글 본인 추천 여부
                example: false
              tags:
                type: array
                description: 태그
                example: "[]"
                items:
                  oneOf:
                  - type: object
                  - type: boolean
                  - type: string
                  - type: number
              repliedCnt:
                type: number
                description: 답글 수
                example: 0
              recommendCount:
                type: number
                description: 추천수
                example: 1
              attached:
                type: boolean
                description: "파일 첨부 여부 (false: 첨부파일 미존재, true: 첨부파일 존재)"
                example: false
              reportCount:
                type: number
                description: 게시글 신고 누적 횟수
                example: 1
              modifierName:
                type: string
                description: 최종 수정자명 (nullable)
                example: modifier
              registerName:
                type: string
                description: 최초 등록자명
                example: register
              displayStatusType:
                type: string
                description: "게시글 전시 상태 (전시중: DISPLAY, 차단: BLIND)"
                example: DISPLAY
      description: ""
    addresses-search195379154:
      type: object
      properties:
        groupByStates:
          type: array
          description: 시도 검색 결과 배열
          example: "[]"
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        totalCount:
          type: number
          description: 총 검색 결과 갯수
          example: 1
        items:
          type: array
          description: 주소 검색 결과 배열
          items:
            type: object
            properties:
              zipCode:
                type: string
                description: 새 우편번호
                example: "08393"
              oldZipCode:
                type: string
                description: 구 우편번호
                example: ""
              roadAddressExtra:
                type: string
                description: 도로명 주소의 참고 항목
                example: ""
              address:
                type: string
                description: 기본 반환 도로명 주소^|서울특별시 구로구 디지털로26길 72 (NHN KCP)
              relatedJibun:
                type: string
                description: 관련 지번
                example: ""
              roadAddress:
                type: string
                description: 기본 도로명 주소
                example: 서울특별시 구로구 구로동 222-22 NHN KCP
              jibunAddress:
                type: string
                description: 지번 주소
                example: ""
              detailAddress:
                type: string
                description: 기본 반환 도로명 주소의 참고항목
                example: ""
      description: ""
    terms1116014589:
      type: object
      description: ""
