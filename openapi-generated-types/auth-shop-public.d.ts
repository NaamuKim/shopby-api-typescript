/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/authentications": {
    /**
     * 인증번호 확인하기
     * @description
     * ## 부가설명 및 특이사항
     * 연락처로 전달받은 인증번호를 확인하는 API 입니다
     */
    get: operations["get-authentications"];
    /**
     * 인증번호 발송하기
     * @description
     * ## 부가설명
     * 회원의 연락처 또는 입력한 연락처로 인증번호를 발송하는 API 입니다
     *
     * 1. 회원번호로 보내는 경우, 해당 회원번호를 가진 회원의 연락처로 인증번호를 발송합니다.
     * 2. 연락처(notiAccount)와 회원이름을 보내는 경우, 해당 정보와 일치하는 회원이 있는 경우, 입력한 연락처로 인증번호를 발송합니다.
     *
     * ## 주의사항
     * 만약, 회원번호 + 연락처 & 이름 을 보내는 경우, 회원번호를 우선하여 인증번호를 발송합니다.
     * 따라서, 회원번호 / 연락처 & 이름 2가지 경우 중 하나만 사용해야합니다.
     */
    post: operations["SendAuthenticationNumber"];
  };
  "/authentications/bizmall": {
    /**
     * 비즈몰 가입 권한 확인하기
     * @description
     * ## 부가설명 및 특이사항
     * 비즈몰 사번을 확인하여 가입 가능 여부를 확인하는 API 입니다
     */
    post: operations["post-authentications-bizmall"];
  };
  "/authentications/email": {
    /**
     * 이메일로 전달받은 인증코드 확인하기
     * @description
     * ## 부가설명 및 특이사항
     * 이메일로 전달받은 인증번호를 확인하는 API 입니다
     */
    get: operations["get-authentications-email"];
    /**
     * 이메일로 인증번호 발송하기
     * @description
     * ## 부가설명 및 특이사항
     * 이메일로 인증번호를 발송하는 API 입니다
     */
    post: operations["post-authentications-email"];
  };
  "/authentications/sms": {
    /**
     * SMS로 전달받은 인증코드 확인하기
     * @description
     * ## 부가설명 및 특이사항
     * 휴대전화번호로 전달받은 인증번호를 확인하는 API 입니다
     */
    get: operations["get-authentications-sms"];
    /**
     * 휴대폰 점유 인증을 위해 인증코드(6자리) SMS 발송하기
     * @description
     * ## 부가설명 및 특이사항
     * 휴대전화번호로 인증번호를 발송하는 API 입니다
     */
    post: operations["post-authentications-sms"];
  };
  "/captcha/image": {
    /**
     * 캡챠 이미지 생성하기
     * @description
     * ## 부가설명 및 특이사항
     * 이미지 캡챠 생성을 위한 API 입니다.
     *
     * 요청한 캡챠 이미지는 KEY 기준으로 10분 동안 유지 됩니다.
     */
    get: operations["get-captcha-image"];
  };
  "/captcha/verify": {
    /**
     * 캡챠 인증코드 확인하기
     * @description
     * ## 부가설명 및 특이사항
     * 캡챠 인증코드 확인하기 위한 API 입니다.
     */
    post: operations["post-captcha-verify"];
  };
  "/kcp/age-verification": {
    /**
     * 회원 성인인증하기
     * @description
     * ## 부가설명 및 특이사항
     * 회원 성인인증 여부를 갱신하기 위한 API 입니다.
     *
     * * KCP 본인인증 서비스를 이용해 회원의 성인인증 여부를 갱신합니다.
     * * 한 번 성인인증을 완료한 회원은 인증을 완료한 시점부터 1년동안 인증 기록이 유지됩니다.
     * * 기간 내에 다시 인증에 성공할 경우 성인인증 일시와 만료일은 갱신됩니다.
     */
    post: operations["post-kcp-age-verification"];
  };
  "/kcp/id-verification/form": {
    /**
     * KCP 본인인증 요청하기
     * @description
     * ## 부가설명 및 특이사항
     * KCP 본인인증을 위한 form을 생성하기 위한 API 입니다
     *
     * 자세한 내용은 [KCP 본인인증 가이드](https://shopby.works/guide/skin/dev-cover/verify?lv=11) 및 [테스트 페이지](https://gitlab-themes.shopby.co.kr/NHN-COMMERCE/kcp-front-test)를 참고 부탁드립니다.
     */
    get: operations["get-kcp-id-verification-form"];
  };
  "/kcp/id-verification/response": {
    /**
     * KCP 본인인증 결과 조회하기
     * @description
     * ## 부가설명 및 특이사항
     * KCP 본인인증 결과를 확인하는 API 입니다
     */
    get: operations["get-kcp-id-verification-response"];
  };
  "/kcp-certification/member": {
    /**
     * KCP 본인인증 요청
     * @deprecated
     * @description
     * ## 부가설명 및 특이사항
     * KCP 본인인증 요청을 위한 API 입니다.
     */
    post: operations["post-kcp-certification-member"];
  };
  "/kcp-certification/member/result-decrypt": {
    /**
     * KCP 본인인증 결과 복호화 요청
     * @deprecated
     * @description
     * ## 부가설명 및 특이사항
     * KCP 본인인증 결과 복호화 요청하기 위한 API 입니다.
     */
    get: operations["get-kcp-certification-member-result-decrypt"];
  };
  "/oauth/begin": {
    /**
     * OAuth 로그인 페이지 열기
     * @description
     * ## 부가설명 및 특이사항
     * 간편 로그인을 위한 로그인 URL을 조회한 후 해당 주소로 리다이렉트하는 API 입니다.
     *
     * * /oauth/begin -> 간편 로그인 페이지 -> /oauth/callback -> nextUrl 순으로 리다이렉트됩니다.
     *
     * * nextUrl을 이용하여 로그인 성공 후 돌아갈 callback URL을 설정할 수 있습니다.
     *
     * * 쇼핑몰 운영자가 기본 도메인을 등록한 경우 /로 시작하는 상대 주소를 사용할 수 있고, 그 외의 경우에는 올바른 HTTP URL을 전달해야 합니다.
     */
    get: operations["get-oauth-begin"];
  };
  "/oauth/callback": {
    /**
     * OAuth callback 처리하기(AccessToken 발급하기)
     * @description
     * ## 부가설명 및 특이사항
     * OpenId 회원의 AccessToken 발급하기 위한 API 입니다.
     *
     * * /oauth/begin -> 간편 로그인 페이지 -> /oauth/callback -> nextUrl 순으로 리다이렉트됩니다.
     *
     * * 간편 로그인 성공후 받은 인증 코드를 통해 회원 토큰을 발급하고, 리다이렉트될 nexUrl의 쿼리에 토큰 정보를 담아 전달합니다.
     *
     * * ex) https://test.shopby.co.kr?accessToken=test-access-token&expireIn=3599&daysFromLastPasswordChange=17
     *
     * * 쿼리 파라미터는 /oauth/begin에서 정의한 값이 간편 로그인 페이지를 통해 넘어와야하며, 임의로 변경해서는 안됩니다.
     */
    get: operations["get-oauth-callback"];
  };
  "/oauth/login-url": {
    /**
     * OpenId 로그인 url 조회하기
     * @description
     * ## 부가설명 및 특이사항
     * OpenId 로그인 url 조회하기 위한 API 입니다.
     *
     * ## 화면예시
     * [![login URL](http://image.toast.com/aaaaahb/api-description/member/authentication/post_oauth_login-url.png)](http://image.toast.com/aaaaahb/api-description/member/authentication/post_oauth_login-url.png)
     */
    get: operations["get-oauth-login-url"];
  };
  "/oauth/openid": {
    /**
     * OpenId AccessToken 발급하기
     * @description
     * ## 부가설명 및 특이사항
     * OpenId 회원의 AccessToken 발급하기 위한 get 방식의 API 입니다.
     *
     * 보안을 위해 post 방식의 API 사용을 권장드립니다.
     *
     * * 자동 로그인을 위해 **keepLogin**을 **true**로 요청하면 유효 기간이 90일인 토큰이 생성됩니다.
     * * 유효 기간이 길기 때문에 토큰 탈취시 보안에 취약할 수 있습니다.
     *
     * 외부 IdP(Identity Provider, 아이디 제공자)를 이용하는 회원이 로그인할 때 사용합니다.
     *
     * 지원하는 IdP 크게 (1) 간편 로그인을 지원하는 IdP, (2) 자체 연동형 IdP(자체적으로 회원 서비스를 지원하는 경우 사용)로 나뉩니다.
     *
     * ## (1) 간편 로그인
     * 각 개발자센터에서 쇼핑몰에 맞는 올바른 설정을 먼저 진행해야합니다.
     *
     * [간편 로그인 가이드](https://shopby.works/guide/skin/dev-cover/easy-login?lv=11)
     *
     * ## 간편 로그인 유형별 필수값
     *
     * | provider | code  | redirectUri | state |
     * | :------: | :---: | :---: | :---: |
     * | ncp_naver    |   O   |   X   |   △   |
     * | ncp_kakao    |   O   |   O   |   X   |
     * | ncp_kakao-sync    |   O   |   X   |   △   |
     * | ncp_line     |   O   |   O   |   O   |
     * | ncp_facebook |   O   |   O   |   X   |
     * | ncp_payco    |   O   |   X   |   △   |
     *
     * ## 참고
     *
     * - [네이버 개발자센터](https://developers.naver.com/main)
     * - [카카오 개발자센터](https://developers.kakao.com/)
     * - [라인 개발자센터](https://developers.line.biz/en/)
     * - [페이스북 개발자센터](https://developers.facebook.com/)
     * - [페이코 개발자센터](https://developers.payco.com/)
     *
     * ## (2) 자체 회원 연동 (프리미엄 전용)
     * 자세한 사항은 아래 가이드와 서비스 담당자에게 문의해주시길 바랍니다.
     *
     * [자체회원 연동 가이드](https://shopby.works/support/recommendedContents/23046)
     *
     * ## 자체 회원 연동 필수값
     *
     * | provider | openAccessToken |
     * | :------: | :---: |
     * | ncpstore |  O   |
     */
    get: operations["get-oauth-openid"];
    /**
     * OpenId AccessToken 발급하기 - POST 방식
     * @description
     * ## 부가설명 및 특이사항
     * OpenId 회원의 AccessToken 발급하기 위한 post 방식의 API 입니다.
     *
     * * 자동 로그인을 위해 **keepLogin**을 **true**로 요청하면 유효 기간이 90일인 토큰이 생성됩니다.
     * * 유효 기간이 길기 때문에 토큰 탈취시 보안에 취약할 수 있습니다.
     *
     * 외부 IdP(Identity Provider, 아이디 제공자)를 이용하는 회원이 로그인할 때 사용합니다.
     *
     * 지원하는 IdP 크게 (1) 간편 로그인을 지원하는 IdP, (2) 자체 연동형 IdP(자체적으로 회원 서비스를 지원하는 경우 사용)로 나뉩니다.
     *
     * ## (1) 간편 로그인
     * 각 개발자센터에서 쇼핑몰에 맞는 올바른 설정을 먼저 진행해야합니다.
     *
     * [간편 로그인 가이드](https://shopby.works/guide/skin/dev-cover/easy-login?lv=11)
     *
     * ## 간편 로그인 유형별 필수값
     *
     * | provider | code  | redirectUri | state |
     * | :------: | :---: | :---: | :---: |
     * | ncp_naver    |   O   |   X   |   △   |
     * | ncp_kakao    |   O   |   O   |   X   |
     * | ncp_kakao-sync    |   O   |   X   |   △   |
     * | ncp_line     |   O   |   O   |   O   |
     * | ncp_facebook |   O   |   O   |   X   |
     * | ncp_payco    |   O   |   X   |   △   |
     *
     * ## 참고
     *
     * - [네이버 개발자센터](https://developers.naver.com/main)
     * - [카카오 개발자센터](https://developers.kakao.com/)
     * - [라인 개발자센터](https://developers.line.biz/en/)
     * - [페이스북 개발자센터](https://developers.facebook.com/)
     * - [페이코 개발자센터](https://developers.payco.com/)
     *
     * ## (2) 자체 회원 연동 (프리미엄 전용)
     * 자세한 사항은 아래 가이드와 서비스 담당자에게 문의해주시길 바랍니다.
     *
     * [자체회원 연동 가이드](https://shopby.works/support/recommendedContents/23046)
     *
     * ## 자체 회원 연동 필수값
     *
     * | provider | openAccessToken |
     * | :------: | :---: |
     * | ncpstore |  O   |
     */
    post: operations["post-oauth-openid"];
    /**
     * SNS 연동 해제하기
     * @description
     * ## 부가설명 및 특이사항
     * SNS연동을 해제하는 API 입니다.
     *
     * ## 참고
     *
     * - [네이버 개발자센터](https://developers.naver.com/main)
     * - [카카오 개발자센터](https://developers.kakao.com/)
     * - [라인 개발자센터](https://developers.line.biz/en/)
     * - [페이스북 개발자센터](https://developers.facebook.com/)
     * - [페이코 개발자센터](https://developers.payco.com/)
     */
    delete: operations["delete-oauth-openid"];
  };
  "/oauth/token": {
    /**
     * AccessToken 발급하기
     * @description
     * ## 부가설명 및 특이사항
     * * 샵바이 회원의 AccessToken 발급하기 위한 API 입니다.
     *
     * * 회원 엑세스 토큰의 기본 유효 기간은 12시간이며,
     *
     * * 자동 로그인을 위해 **keepLogin**을 **true**로 요청하면 유효 기간이 90일인 토큰이 생성됩니다.
     *
     * * 유효 기간이 길기 때문에 토큰 탈취시 보안에 취약할 수 있습니다.
     *
     * ## ID/PW 기반 외부 회원 연동
     *
     * * body 값 중 provider 를 shopbystore 로 보내야합니다.
     *
     * * 자세한 사항은 아래 가이드와 서비스 담당자에게 문의해주시길 바랍니다.
     *
     * * [자체회원 연동 가이드 중 ID/PW 기반 연동](https://shopby.works/support/recommendedContents/23046)
     *
     * ## 자체 회원 연동 필수값
     *
     * | provider |
     * | :------: |
     * | shopbystore |
     *
     * ### 캡챠(추후 서비스 제공 예정)
     * * 10회 이상 로그인 실패 등 사유로 로그인이 실패할 경우, 캡챠 기능에 사용할 수 있는 key 값이 에러와 함께 리턴됩니다.
     *
     * * 해당 key 값을 이용하여, 차후 캡챠 기능에 사용할 수 있습니다.
     *
     * *휴면계정일 경우, dormantMemberResponse에 실린 정보를 이용하여, 휴면 해제에 활용할 수 있습니다.
     */
    post: operations["post-oauth-token-1-success"];
    /**
     * AccessToken 반환하기
     * @description
     * ## 부가설명 및 특이사항
     * AccessToken 만료 처리(ncp, payco 회원 동일)를 하기 위한 API 입니다.
     *
     * 회원의 엑세스 토큰을 삭제하여 로그아웃합니다.
     */
    delete: operations["RevokeToken"];
  };
  "/oauth/openid/link": {
    /**
     * SNS 연동하기
     * @description
     * ## 부가설명 및 특이사항
     * 일반 회원에 SNS 연동을 하는 API 입니다.
     *
     * 외부 IdP(Identity Provider, 아이디 제공자)를 이용하는 회원이 로그인할 때 사용합니다.
     *
     * ## 간편 로그인
     * 각 개발자센터에서 쇼핑몰에 맞는 올바른 설정을 먼저 진행해야합니다.
     *
     * [간편 로그인 가이드](https://shopby.works/guide/skin/dev-cover/easy-login?lv=11)
     *
     * ## 간편 로그인 유형별 필수값
     *
     * | provider | code  | redirectUri | state |
     * | :------: | :---: | :---: | :---: |
     * | ncp_naver    |   O   |   X   |   △   |
     * | ncp_kakao    |   O   |   O   |   X   |
     * | ncp_kakao-sync    |   O   |   X   |   △   |
     * | ncp_line     |   O   |   O   |   O   |
     * | ncp_facebook |   O   |   O   |   X   |
     * | ncp_payco    |   O   |   X   |   △   |
     *
     * ## 참고
     *
     * - [네이버 개발자센터](https://developers.naver.com/main)
     * - [카카오 개발자센터](https://developers.kakao.com/)
     * - [라인 개발자센터](https://developers.line.biz/en/)
     * - [페이스북 개발자센터](https://developers.facebook.com/)
     * - [페이코 개발자센터](https://developers.payco.com/)
     */
    get: operations["link-oauth-openid"];
  };
  "/oauth/openid/list": {
    /**
     * SNS 연동 내역 조회
     * @description
     * ## 부가설명 및 특이사항
     * 연동된 SNS를 조회하는 API 입니다.
     */
    get: operations["get-oauth-list"];
  };
  "/openid/token": {
    /**
     * AccessToken 조회하기
     * @description
     * ## 부가설명 및 특이사항
     * OpenId 서비스 제공자의 AccessToken 조회하기 위한 API 입니다.
     *
     * 응답의 프로바이더 토큰 정보는 현재 로그인한 회원이 간편로그인을 통한 인증을 할 때 사용한 토큰 정보입니다.
     *
     * 따라서 아이디와 비밀번호를 사용해 로그인한 사용자는 응답이 모두 null 입니다.
     *
     * 또한 서버는 프로바이더 토큰을 로그인 외에는 사용하지 않기 때문에 프로바이더 토큰 갱신 등은 사용자가 직접 해야 합니다.
     */
    get: operations["get-openid-token"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    "oauth-openid-link-1411956587": {
      /**
       * @description 외부 IDP 코드. 리퀘스트와 동일
       * @example ncp_payco
       */
      provider?: string;
      /**
       * @description 휴면 회원일 경우 포함되는 정보로, 주로 휴면 확인 용도로 사용됨. (nullable)
       * @example null
       */
      dormantMemberResponse?: {
        /**
         * @description 회원 이름 (nullable)
         * @example null
         */
        memberName?: string;
        /**
         * @description 회원 휴대전화 번호 (nullable)
         * @example null
         */
        mobileNo?: string;
        /**
         * @description 회원 이메일 주소 (nullable)
         * @example null
         */
        email?: string;
      };
      /**
       * @description 같은 정보를 가진 기존 회원이 존재할 경우 추가적으로 포함되는 정보. (없을 경우 null) (nullable)
       * @example null
       */
      ordinaryMemberResponse?: {
        /**
         * @description 기존 회원 가입일 (nullable)
         * @example null
         */
        signUpDateTime?: string;
        /**
         * @description 기존 회원 마스킹된 이메일 주소 (nullable)
         * @example null
         */
        email?: string;
      };
      /**
       * @description 엑세스 토큰의 유효 기간(초)
       * @example 3599
       */
      expireIn?: number;
      /** @description 비밀번호 변경일로부터 경과된 일 수 - **@Deprecated** 오픈아이디 연동 시 비밀번호 변경일 관련 값은 사용하지 않습니다. 삭제 예정입니다 */
      daysFromLastPasswordChange?: number;
      /**
       * @description 회원 엑세스 토큰
       * @example test-access-token
       */
      accessToken?: string;
    };
    "authentications-bizmall1331022487": {
      /**
       * @description 회사 번호
       * @example 1000
       */
      companyNo?: number;
      /**
       * @description 임직원 이름
       * @example 테스터
       */
      name?: string;
      /**
       * @description 임직원 사번
       * @example 11111
       */
      idNo?: string;
    };
    "oauth-token-1364515864": {
      /**
       * @description code
       * @example REQUIRED_CAPTCHA
       */
      code?: string;
      /**
       * @description message
       * @example Authentication failed more than 10 times. Please enter an automatic registration prevention text and try again.
       */
      message?: string;
      /**
       * @description key
       * @example auth:SMSUSE010:01012341234
       */
      key?: string;
    };
    "kcp-certification-member2087213742": {
      /**
       * @description KCP와 통신하기 위한 form
       * @example <form></form>
       */
      form?: string;
    };
    "oauth-openid495200803": {
      /**
       * @description 개발자센터에 등록된 redirect URI (nullable)
       * @example null
       */
      redirectUri?: string;
      /**
       * @description IdP(Identity Provider, 아이디 제공자)로부터 받은 인증코드(authorization code) - 간편 로그인 사용시 필수 (nullable)
       * @example 12345
       */
      code?: string;
      /**
       * @description 간편 로그인 제공사(ncp_naver, ncp_kakao, ncp_kakao-sync, ncp_line, ncp_facebook, ncp_payco)
       * @example ncp_payco
       */
      provider?: string;
      /**
       * @description CSRF 공격을 방지하기 위해 애플리케이션에서 생성한 상태 토큰 (nullable)
       * @example null
       */
      state?: string;
      /**
       * @description 자동로그인 여부(**true**로 요청하면 유효 기간이 90일인 토큰이 생성)
       * @example false
       */
      keepLogin?: boolean;
      /**
       * @description IdP(Identity Provider, 아이디 제공자) 엑세스 토큰 - 연동형 IdP(Identity Provider, 아이디 제공자) 사용시 필수 (nullable)
       * @example null
       */
      openAccessToken?: string;
    };
    "kcp-id-verification-response-1191495885": {
      /**
       * @description 생년월일
       * @example 20000101
       */
      birthday?: string;
      /**
       * @description 성별 코드 (01:male, 02: female)
       * @example 01
       */
      sexCode?: string;
      /**
       * @description DI
       * @example di
       */
      di?: string;
      /**
       * @description 휴대폰번호
       * @example 01012345678
       */
      phone?: string;
      /**
       * @description CI
       * @example ci
       */
      ci?: string;
      /**
       * @description 이름
       * @example 홍길동
       */
      name?: string;
      /**
       * @description 통신사 코드
       * @example SKT
       */
      commId?: string;
      /**
       * @description 내/외국인 코드 (01: local, 02:foreigner)
       * @example 01
       */
      localCode?: string;
    };
    "oauth-token1261496601": {
      /**
       * @description 비밀번호
       * @example testpw123
       */
      password?: string;
      /**
       * @description 외부 IDP 코드 (nullable)
       * @example null
       */
      provider?: string;
      /**
       * @description 자동입력 방지 문자 (deprecated( V1.0에서 더 이상 제공하지 않습니다)) (nullable)
       * @example null
       */
      captcha?: string;
      /**
       * @description 자동로그인 여부(**true**로 요청하면 유효 기간이 90일인 토큰이 생성) (nullable)
       * @example true
       */
      keepLogin?: boolean;
      /**
       * @description 회원 아이디
       * @example gildong
       */
      memberId?: string;
    };
    "oauth-token-1916652149": {
      /**
       * @description 비밀번호 변경 필수 여부
       * @example false
       */
      passwordChangeRequired?: boolean;
      /**
       * @description 휴면 회원일 경우 추가적으로 포함되는 정보. (휴면회원 아닐경우 null) (nullable)
       * @example com.ncp.auth.presentation.response.CommerceAccessTokenResponse$DormantMemberResponse@404db9cf
       */
      dormantMemberResponse?: {
        /**
         * @description 회원 이름 (nullable)
         * @example name
         */
        memberName?: string;
        /**
         * @description 회원 휴대전화번호 (nullable)
         * @example mobile
         */
        mobileNo?: string;
        /**
         * @description 회원 이메일 주소 (nullable)
         * @example email
         */
        email?: string;
      };
      /**
       * @description 엑세스 토큰의 유효 기간(초)
       * @example 3599
       */
      expireIn?: number;
      /**
       * @description 비밀번호 변경일로부터 경과된 일 수
       * @example 25
       */
      daysFromLastPasswordChange?: number;
      /**
       * @description 회원 엑세스 토큰
       * @example test-access-token
       */
      accessToken?: string;
    };
    "authentications-bizmall-537100746": {
      /** @description 가입 가능 여부 */
      success?: boolean;
    };
    "authentications-email131382975": {
      /**
       * @description 사용 용도
       * @example FIND_ID
       * @enum {string}
       */
      usage?: "FIND_ID: 아이디 찾기" | "FIND_PASSWORD: 비밀번호 찾기" | "CHANGE_MOBILE_NO: 휴대폰번호 변경" | "RELEASE_DORMANT: 휴면 해제" | "ADMIN: 운영자 인증" | "JOIN: 가입인증" | "JOIN_URI: 가입인증" | "CHANGE_ID: 아이디 변경" | "ADMIN_SECONDARY: 운영자 2차인증" | "CHANGE_EMAIL: 이메일 변경" | "JOIN_URI_EMPLOYEE: 관계사 임직원 가입인증";
      /**
       * @description 회원 이름 (JOIN_URI: 가입인증이 아닌 경우 필수) (nullable)
       * @example 홍길동
       */
      memberName?: string;
      /**
       * @description 인증번호를 전달할 쇼핑몰 URI (nullable)
       * @example https://www.gildong.com
       */
      uri?: string;
      /**
       * @description 이메일 주소
       * @example example@nhn.com
       */
      email?: string;
    };
    "kcp-certification-member-result-decrypt967119927": {
      /**
       * @description CI URL 인코딩 값
       * @example string
       */
      ciUrlEncoded?: string;
      /**
       * @description 생년월일
       * @example 19900101
       */
      birthDay?: string;
      /**
       * @description DI
       * @example string
       */
      di?: string;
      /**
       * @description CI
       * @example string
       */
      ci?: string;
      /**
       * @description 성별
       * @example 남자
       */
      sex?: string;
      /**
       * @description 이름
       * @example 홍길동
       */
      userName?: string;
      /**
       * @description 전화번호
       * @example 01012345678
       */
      phoneNo?: string;
      /**
       * @description 암호회된 결과코드
       * @example string
       */
      responseCode?: string;
      /**
       * @description DI URL 인코딩 값
       * @example string
       */
      diUrlEncoded?: string;
      /**
       * @description 이동 통신사 코드
       * @example 0000
       */
      commId?: string;
      /**
       * @description 내국인 여부
       * @example 내국인
       */
      localCode?: string;
      /**
       * @description 암호화된 결과 메세지
       * @example string
       */
      responseMessage?: string;
      /**
       * @description 암호화된 웹사이트 아이
       * @example string
       */
      webSiteId?: string;
    };
    "kcp-age-verification-1064179165": {
      /**
       * @description 생년월일
       * @example "2000-01-01T00:00:00.000Z"
       */
      birthday?: string;
      /**
       * @description 성인인증 완료 여부
       * @example true
       */
      verified?: boolean;
      /**
       * @description 성인인증 일시 (nullable)
       * @example "2024-01-04T17:28:59.262Z"
       */
      verifiedDateTime?: string;
    };
    "authentications-email237551932": {
      /**
       * @description 성공 여부
       * @example true
       */
      result?: boolean;
    };
    "authentications-sms-1002112365": {
      /**
       * @description 사용 용도
       * @example FIND_ID
       * @enum {string}
       */
      usage?: "FIND_ID: 아이디 찾기" | "FIND_PASSWORD: 비밀번호 찾기" | "CHANGE_MOBILE_NO: 휴대폰번호 변경" | "RELEASE_DORMANT: 휴면 해제" | "ADMIN: 운영자 인증" | "JOIN: 가입인증" | "JOIN_URI: 가입인증" | "CHANGE_ID: 아이디 변경" | "ADMIN_SECONDARY: 운영자 2차인증" | "CHANGE_EMAIL: 이메일 변경" | "JOIN_URI_EMPLOYEE: 관계사 임직원 가입인증";
      /**
       * @description 회원 이름
       * @example 홍길동
       */
      memberName?: string;
      /**
       * @description 휴대전화 번호
       * @example 01012345678
       */
      mobileNo?: string;
    };
    "kcp-id-verification-form1116014589": Record<string, never>;
    "oauth-openid-list-1563013012": {
      providers?: {
          /**
           * @description SNS 연동 구분 값
           * @example 1
           */
          memberProviderNo?: number;
          /**
           * @description 연동 수정 날짜
           * @example "2023-05-31T14:30:23.000Z"
           */
          updatedYmdt?: string;
          /**
           * @description SNS 연동 해제 여부
           * @example false
           */
          deleteYn?: boolean;
          /**
           * @description 연동 SNS 유형
           * @example facebook
           */
          providerType?: string;
          /**
           * @description 최초 연동 날짜
           * @example "2023-05-30T14:30:23.000Z"
           */
          registerYmdt?: string;
        }[];
    };
    "kcp-certification-member1121708161": {
      /**
       * @description 요청결과를 전달받는 화면 URL
       * @example url
       */
      returnUrl?: string;
    };
    authentications2123066576: {
      /**
       * @description 이메일주소 혹은 휴대전화 번호 (nullable)
       * @example 01012345678
       */
      notiAccount?: string;
      /**
       * @description 회원번호 - 회원 번호로 인증번호를 보낼 경우 필수 (nullable)
       * @example 1001
       */
      memberNo?: number;
      /**
       * @description 사용 용도
       * @example FIND_ID
       * @enum {string}
       */
      usage?: "FIND_ID: 아이디 찾기" | "FIND_PASSWORD: 비밀번호 찾기" | "CHANGE_MOBILE_NO: 휴대폰번호 변경" | "RELEASE_DORMANT: 휴면 해제" | "ADMIN: 운영자 인증" | "JOIN: 가입인증" | "JOIN_URI: 가입인증" | "CHANGE_ID: 아이디 변경" | "ADMIN_SECONDARY: 운영자 2차인증" | "CHANGE_EMAIL: 이메일 변경" | "JOIN_URI_EMPLOYEE: 관계사 임직원 가입인증";
      /**
       * @description 회원 이름 (nullable)
       * @example 홍길동
       */
      memberName?: string;
      /**
       * @description 인증 타입
       * @example EMAIL
       * @enum {string}
       */
      type?: "SMS: SMS 인증" | "EMAIL: 이메일 인증";
    };
    authentications1664299215: {
      /**
       * @description 인증번호 만료까지 남은 시간 (초)
       * @example 600
       */
      remainTime?: number;
    };
    "openid-token-1732903447": {
      /**
       * @description 프로바이더(간편로그인 제공사) 토큰 만료 시각 (nullable)
       * @example "2021-03-08T13:40:51.000Z"
       */
      expireYmdt?: string;
      /**
       * @description 프로바이더(간편로그인 제공사) 엑세스 토큰 (nullable)
       * @example provider-access-token
       */
      accessToken?: string;
      /**
       * @description 프로바이더(간편로그인 제공사) 리프레시 토큰 (nullable)
       * @example provider-refresh-token
       */
      refreshToken?: string;
    };
    authentications1547003243: {
      /**
       * @description API 경로
       * @example /auth/token
       */
      path?: string;
      /**
       * @description 에러코드
       * @example CP9001
       */
      code?: string;
      /**
       * @description 메시지
       * @example Authentication failed more than 10 times. Please enter an automatic registration prevention text and try again.
       */
      message?: string;
      /**
       * @description 에러
       * @example Bad Request
       */
      error?: string;
      /**
       * @description 키
       * @example auth:EMUSE001:test@test.com
       */
      key?: string;
      /**
       * @description HTTP 상태
       * @example 400
       */
      status?: number;
      /**
       * @description 에러 발생 시각
       * @example "2021-04-19T18:23:00.684Z"
       */
      timestamp?: string;
    };
    "captcha-image258801235": {
      /** @description 캡챠 이미지 URL */
      url?: string;
    };
    "oauth-login-url-1249944640": {
      /**
       * @description 간편 로그인 URL
       * @example https://nid.naver.com/oauth2.0/authorize
       */
      loginUrl?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * 인증번호 확인하기
   * @description
   * ## 부가설명 및 특이사항
   * 연락처로 전달받은 인증번호를 확인하는 API 입니다
   */
  "get-authentications": {
    parameters: {
      query: {
        /**
         * @description 인증 타입 (SMS: SMS 인증, EMAIL: 이메일 인증)
         * @example EMAIL
         */
        type: string;
        /**
         * @description 사용 용도 (FIND_ID: 아이디 찾기, FIND_PASSWORD: 비밀번호 찾기, RELEASE_DORMANT: 휴면 해제, JOIN: 가입인증, CHANGE_ID: 아이디 변경, CHANGE_EMAIL: 이메일 변경, CHANGE_MOBILE_NO: 휴대폰번호 변경)
         * @example FIND_ID
         */
        usage: string;
        /**
         * @description 인증 번호
         * @example 123456
         */
        certificatedNumber: string;
        /** @description 회원 번호 */
        memberNo?: number;
        /** @description 이메일 주소 | 휴대폰 번호 */
        notiAccount?: string;
      };
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: never;
      };
      /** @description 400 */
      400: {
        content: {
          "application/json": components["schemas"]["authentications1547003243"];
        };
      };
    };
  };
  /**
   * 인증번호 발송하기
   * @description
   * ## 부가설명
   * 회원의 연락처 또는 입력한 연락처로 인증번호를 발송하는 API 입니다
   *
   * 1. 회원번호로 보내는 경우, 해당 회원번호를 가진 회원의 연락처로 인증번호를 발송합니다.
   * 2. 연락처(notiAccount)와 회원이름을 보내는 경우, 해당 정보와 일치하는 회원이 있는 경우, 입력한 연락처로 인증번호를 발송합니다.
   *
   * ## 주의사항
   * 만약, 회원번호 + 연락처 & 이름 을 보내는 경우, 회원번호를 우선하여 인증번호를 발송합니다.
   * 따라서, 회원번호 / 연락처 & 이름 2가지 경우 중 하나만 사용해야합니다.
   */
  SendAuthenticationNumber: {
    parameters: {
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["authentications2123066576"];
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["authentications1664299215"];
        };
      };
    };
  };
  /**
   * 비즈몰 가입 권한 확인하기
   * @description
   * ## 부가설명 및 특이사항
   * 비즈몰 사번을 확인하여 가입 가능 여부를 확인하는 API 입니다
   */
  "post-authentications-bizmall": {
    parameters: {
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["authentications-bizmall1331022487"];
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["authentications-bizmall-537100746"];
        };
      };
    };
  };
  /**
   * 이메일로 전달받은 인증코드 확인하기
   * @description
   * ## 부가설명 및 특이사항
   * 이메일로 전달받은 인증번호를 확인하는 API 입니다
   */
  "get-authentications-email": {
    parameters: {
      query: {
        /**
         * @description 사용 용도 (FIND_ID: 아이디 찾기, FIND_PASSWORD: 비밀번호 찾기, RELEASE_DORMANT: 휴면 해제, JOIN_URI: 가입인증)
         * @example FIND_ID
         */
        usage: string;
        /**
         * @description 이메일 주소
         * @example gildong@nhn.com
         */
        email: string;
        /**
         * @description 인증 번호
         * @example 123456
         */
        certificatedNumber: string;
      };
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["authentications-email237551932"];
        };
      };
    };
  };
  /**
   * 이메일로 인증번호 발송하기
   * @description
   * ## 부가설명 및 특이사항
   * 이메일로 인증번호를 발송하는 API 입니다
   */
  "post-authentications-email": {
    parameters: {
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["authentications-email131382975"];
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["authentications1664299215"];
        };
      };
    };
  };
  /**
   * SMS로 전달받은 인증코드 확인하기
   * @description
   * ## 부가설명 및 특이사항
   * 휴대전화번호로 전달받은 인증번호를 확인하는 API 입니다
   */
  "get-authentications-sms": {
    parameters: {
      query: {
        /**
         * @description 사용 용도 (FIND_ID: 아이디 찾기, FIND_PASSWORD: 비밀번호 찾기, RELEASE_DORMANT: 휴면 해제, JOIN: 가입인증, CHANGE_MOBILE_NO: 휴대폰번호 변경)
         * @example CHANGE_MOBILE_NO
         */
        usage: string;
        /**
         * @description 휴대전화 번호
         * @example 01012341234
         */
        mobileNo: string;
        /**
         * @description 인증 번호
         * @example 123456
         */
        key: string;
      };
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["authentications-email237551932"];
        };
      };
    };
  };
  /**
   * 휴대폰 점유 인증을 위해 인증코드(6자리) SMS 발송하기
   * @description
   * ## 부가설명 및 특이사항
   * 휴대전화번호로 인증번호를 발송하는 API 입니다
   */
  "post-authentications-sms": {
    parameters: {
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["authentications-sms-1002112365"];
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["authentications1664299215"];
        };
      };
    };
  };
  /**
   * 캡챠 이미지 생성하기
   * @description
   * ## 부가설명 및 특이사항
   * 이미지 캡챠 생성을 위한 API 입니다.
   *
   * 요청한 캡챠 이미지는 KEY 기준으로 10분 동안 유지 됩니다.
   */
  "get-captcha-image": {
    parameters: {
      query: {
        /** @description 캡챠 구분키 */
        key: string;
      };
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["captcha-image258801235"];
        };
      };
    };
  };
  /**
   * 캡챠 인증코드 확인하기
   * @description
   * ## 부가설명 및 특이사항
   * 캡챠 인증코드 확인하기 위한 API 입니다.
   */
  "post-captcha-verify": {
    parameters: {
      query: {
        /** @description 캡챠 인증코드 */
        code: string;
        /** @description 캡챠 구분키 */
        key: string;
      };
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    responses: {
      /** @description 204 */
      204: {
        content: never;
      };
    };
  };
  /**
   * 회원 성인인증하기
   * @description
   * ## 부가설명 및 특이사항
   * 회원 성인인증 여부를 갱신하기 위한 API 입니다.
   *
   * * KCP 본인인증 서비스를 이용해 회원의 성인인증 여부를 갱신합니다.
   * * 한 번 성인인증을 완료한 회원은 인증을 완료한 시점부터 1년동안 인증 기록이 유지됩니다.
   * * 기간 내에 다시 인증에 성공할 경우 성인인증 일시와 만료일은 갱신됩니다.
   */
  "post-kcp-age-verification": {
    parameters: {
      query: {
        /**
         * @description 본인인증 키
         * @example 20210101000000
         */
        key: string;
      };
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /** @description 회원 엑세스 토큰 */
        accessToken: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["kcp-age-verification-1064179165"];
        };
      };
    };
  };
  /**
   * KCP 본인인증 요청하기
   * @description
   * ## 부가설명 및 특이사항
   * KCP 본인인증을 위한 form을 생성하기 위한 API 입니다
   *
   * 자세한 내용은 [KCP 본인인증 가이드](https://shopby.works/guide/skin/dev-cover/verify?lv=11) 및 [테스트 페이지](https://gitlab-themes.shopby.co.kr/NHN-COMMERCE/kcp-front-test)를 참고 부탁드립니다.
   */
  "get-kcp-id-verification-form": {
    parameters: {
      query: {
        /**
         * @description 본인인증 완료 후 호출할 클라이언트 페이지
         * @example http://localhost:8080/path/to/comeback
         */
        returnUrl: string;
        /**
         * @description 내국인 여부 (true : 내국인, false : 외국인 , null : 내국인 전용 QR 신청 본인인증)
         * @example false
         */
        domestic?: string;
      };
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "text/html": components["schemas"]["kcp-id-verification-form1116014589"];
        };
      };
    };
  };
  /**
   * KCP 본인인증 결과 조회하기
   * @description
   * ## 부가설명 및 특이사항
   * KCP 본인인증 결과를 확인하는 API 입니다
   */
  "get-kcp-id-verification-response": {
    parameters: {
      query: {
        /**
         * @description 본인인증 키
         * @example 20210101000000
         */
        key: string;
      };
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["kcp-id-verification-response-1191495885"];
        };
      };
    };
  };
  /**
   * KCP 본인인증 요청
   * @deprecated
   * @description
   * ## 부가설명 및 특이사항
   * KCP 본인인증 요청을 위한 API 입니다.
   */
  "post-kcp-certification-member": {
    parameters: {
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["kcp-certification-member1121708161"];
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["kcp-certification-member2087213742"];
        };
      };
    };
  };
  /**
   * KCP 본인인증 결과 복호화 요청
   * @deprecated
   * @description
   * ## 부가설명 및 특이사항
   * KCP 본인인증 결과 복호화 요청하기 위한 API 입니다.
   */
  "get-kcp-certification-member-result-decrypt": {
    parameters: {
      query: {
        /**
         * @description key
         * @example key
         */
        key: string;
      };
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["kcp-certification-member-result-decrypt967119927"];
        };
      };
    };
  };
  /**
   * OAuth 로그인 페이지 열기
   * @description
   * ## 부가설명 및 특이사항
   * 간편 로그인을 위한 로그인 URL을 조회한 후 해당 주소로 리다이렉트하는 API 입니다.
   *
   * * /oauth/begin -> 간편 로그인 페이지 -> /oauth/callback -> nextUrl 순으로 리다이렉트됩니다.
   *
   * * nextUrl을 이용하여 로그인 성공 후 돌아갈 callback URL을 설정할 수 있습니다.
   *
   * * 쇼핑몰 운영자가 기본 도메인을 등록한 경우 /로 시작하는 상대 주소를 사용할 수 있고, 그 외의 경우에는 올바른 HTTP URL을 전달해야 합니다.
   */
  "get-oauth-begin": {
    parameters: {
      query: {
        /** @description API 사용을 위한 클라이언트 아이디 */
        clientId: string;
        /** @description 간편 로그인 제공사(ncp_naver, ncp_kakao, ncp_kakao-sync, ncp_line, ncp_facebook, ncp_payco) */
        provider: string;
        /**
         * @description 로그인 성공 이후 로드할 페이지 주소 (callback URL)
         * @example /
         */
        nextUrl?: string;
        /**
         * @description 클라이언트 플랫폼(PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform?: string;
        /** @description CSRF 공격을 방지하기 위해 애플리케이션에서 생성한 상태 토큰 */
        state?: string;
      };
    };
    responses: {
      /** @description 303 */
      303: {
        headers: {
          /** @description OAuth2 프로바이더 로그인 URL^|https://id.payco.com/oauth2.0/oauthLogin.nhn */
          Location?: string;
        };
        content: never;
      };
    };
  };
  /**
   * OAuth callback 처리하기(AccessToken 발급하기)
   * @description
   * ## 부가설명 및 특이사항
   * OpenId 회원의 AccessToken 발급하기 위한 API 입니다.
   *
   * * /oauth/begin -> 간편 로그인 페이지 -> /oauth/callback -> nextUrl 순으로 리다이렉트됩니다.
   *
   * * 간편 로그인 성공후 받은 인증 코드를 통해 회원 토큰을 발급하고, 리다이렉트될 nexUrl의 쿼리에 토큰 정보를 담아 전달합니다.
   *
   * * ex) https://test.shopby.co.kr?accessToken=test-access-token&expireIn=3599&daysFromLastPasswordChange=17
   *
   * * 쿼리 파라미터는 /oauth/begin에서 정의한 값이 간편 로그인 페이지를 통해 넘어와야하며, 임의로 변경해서는 안됩니다.
   */
  "get-oauth-callback": {
    parameters: {
      query: {
        /** @description 클라이언트 아이디 */
        clientId: string;
        /** @description OAuth2 프로바이더 */
        provider: string;
        /** @description 인증 코드 */
        code: string;
        /** @description CSRF 공격을 방지하기 위해 애플리케이션에서 생성한 상태 토큰 */
        state?: string;
        /** @description 로그인 성공 이후 로드할 페이지 주소 (callback URL) */
        nextUrl: string;
      };
    };
    responses: {
      /** @description 303 */
      303: {
        headers: {
          /** @description 토큰과 함께 리다이렉트될 URL */
          Location?: string;
        };
        content: never;
      };
    };
  };
  /**
   * OpenId 로그인 url 조회하기
   * @description
   * ## 부가설명 및 특이사항
   * OpenId 로그인 url 조회하기 위한 API 입니다.
   *
   * ## 화면예시
   * [![login URL](http://image.toast.com/aaaaahb/api-description/member/authentication/post_oauth_login-url.png)](http://image.toast.com/aaaaahb/api-description/member/authentication/post_oauth_login-url.png)
   */
  "get-oauth-login-url": {
    parameters: {
      query: {
        /**
         * @description 간편 로그인 제공사(ncp_naver, ncp_kakao, ncp_kakao-sync, ncp_line, ncp_facebook, ncp_payco)
         * @example ncp_naver
         */
        provider: string;
        /** @description redirect URL */
        redirectUri: string;
        /** @description CSRF 공격을 방지하기 위해 애플리케이션에서 생성한 상태 토큰 */
        state?: string;
      };
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["oauth-login-url-1249944640"];
        };
      };
    };
  };
  /**
   * OpenId AccessToken 발급하기
   * @description
   * ## 부가설명 및 특이사항
   * OpenId 회원의 AccessToken 발급하기 위한 get 방식의 API 입니다.
   *
   * 보안을 위해 post 방식의 API 사용을 권장드립니다.
   *
   * * 자동 로그인을 위해 **keepLogin**을 **true**로 요청하면 유효 기간이 90일인 토큰이 생성됩니다.
   * * 유효 기간이 길기 때문에 토큰 탈취시 보안에 취약할 수 있습니다.
   *
   * 외부 IdP(Identity Provider, 아이디 제공자)를 이용하는 회원이 로그인할 때 사용합니다.
   *
   * 지원하는 IdP 크게 (1) 간편 로그인을 지원하는 IdP, (2) 자체 연동형 IdP(자체적으로 회원 서비스를 지원하는 경우 사용)로 나뉩니다.
   *
   * ## (1) 간편 로그인
   * 각 개발자센터에서 쇼핑몰에 맞는 올바른 설정을 먼저 진행해야합니다.
   *
   * [간편 로그인 가이드](https://shopby.works/guide/skin/dev-cover/easy-login?lv=11)
   *
   * ## 간편 로그인 유형별 필수값
   *
   * | provider | code  | redirectUri | state |
   * | :------: | :---: | :---: | :---: |
   * | ncp_naver    |   O   |   X   |   △   |
   * | ncp_kakao    |   O   |   O   |   X   |
   * | ncp_kakao-sync    |   O   |   X   |   △   |
   * | ncp_line     |   O   |   O   |   O   |
   * | ncp_facebook |   O   |   O   |   X   |
   * | ncp_payco    |   O   |   X   |   △   |
   *
   * ## 참고
   *
   * - [네이버 개발자센터](https://developers.naver.com/main)
   * - [카카오 개발자센터](https://developers.kakao.com/)
   * - [라인 개발자센터](https://developers.line.biz/en/)
   * - [페이스북 개발자센터](https://developers.facebook.com/)
   * - [페이코 개발자센터](https://developers.payco.com/)
   *
   * ## (2) 자체 회원 연동 (프리미엄 전용)
   * 자세한 사항은 아래 가이드와 서비스 담당자에게 문의해주시길 바랍니다.
   *
   * [자체회원 연동 가이드](https://shopby.works/support/recommendedContents/23046)
   *
   * ## 자체 회원 연동 필수값
   *
   * | provider | openAccessToken |
   * | :------: | :---: |
   * | ncpstore |  O   |
   */
  "get-oauth-openid": {
    parameters: {
      query: {
        /** @description 간편 로그인 제공사(ncp_naver, ncp_kakao, ncp_kakao-sync, ncp_line, ncp_facebook, ncp_payco) */
        provider: string;
        /** @description IdP(Identity Provider, 아이디 제공자)로부터 받은 인증코드(authorization code) - 간편 로그인 사용시 필수 */
        code?: string;
        /** @description 개발자센터에 등록된 redirect URI */
        redirectUri?: string;
        /** @description CSRF 공격을 방지하기 위해 애플리케이션에서 생성한 상태 토큰 */
        state?: string;
        /** @description 자동로그인 여부(**true**로 요청하면 유효 기간이 90일인 토큰이 생성) */
        keepLogin?: string;
        /** @description 클라이언트 플랫폼(PC, MOBILE_WEB, AOS, IOS) */
        platformType?: string;
      };
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["oauth-openid-link-1411956587"];
        };
      };
    };
  };
  /**
   * OpenId AccessToken 발급하기 - POST 방식
   * @description
   * ## 부가설명 및 특이사항
   * OpenId 회원의 AccessToken 발급하기 위한 post 방식의 API 입니다.
   *
   * * 자동 로그인을 위해 **keepLogin**을 **true**로 요청하면 유효 기간이 90일인 토큰이 생성됩니다.
   * * 유효 기간이 길기 때문에 토큰 탈취시 보안에 취약할 수 있습니다.
   *
   * 외부 IdP(Identity Provider, 아이디 제공자)를 이용하는 회원이 로그인할 때 사용합니다.
   *
   * 지원하는 IdP 크게 (1) 간편 로그인을 지원하는 IdP, (2) 자체 연동형 IdP(자체적으로 회원 서비스를 지원하는 경우 사용)로 나뉩니다.
   *
   * ## (1) 간편 로그인
   * 각 개발자센터에서 쇼핑몰에 맞는 올바른 설정을 먼저 진행해야합니다.
   *
   * [간편 로그인 가이드](https://shopby.works/guide/skin/dev-cover/easy-login?lv=11)
   *
   * ## 간편 로그인 유형별 필수값
   *
   * | provider | code  | redirectUri | state |
   * | :------: | :---: | :---: | :---: |
   * | ncp_naver    |   O   |   X   |   △   |
   * | ncp_kakao    |   O   |   O   |   X   |
   * | ncp_kakao-sync    |   O   |   X   |   △   |
   * | ncp_line     |   O   |   O   |   O   |
   * | ncp_facebook |   O   |   O   |   X   |
   * | ncp_payco    |   O   |   X   |   △   |
   *
   * ## 참고
   *
   * - [네이버 개발자센터](https://developers.naver.com/main)
   * - [카카오 개발자센터](https://developers.kakao.com/)
   * - [라인 개발자센터](https://developers.line.biz/en/)
   * - [페이스북 개발자센터](https://developers.facebook.com/)
   * - [페이코 개발자센터](https://developers.payco.com/)
   *
   * ## (2) 자체 회원 연동 (프리미엄 전용)
   * 자세한 사항은 아래 가이드와 서비스 담당자에게 문의해주시길 바랍니다.
   *
   * [자체회원 연동 가이드](https://shopby.works/support/recommendedContents/23046)
   *
   * ## 자체 회원 연동 필수값
   *
   * | provider | openAccessToken |
   * | :------: | :---: |
   * | ncpstore |  O   |
   */
  "post-oauth-openid": {
    parameters: {
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["oauth-openid495200803"];
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["oauth-openid-link-1411956587"];
        };
      };
    };
  };
  /**
   * SNS 연동 해제하기
   * @description
   * ## 부가설명 및 특이사항
   * SNS연동을 해제하는 API 입니다.
   *
   * ## 참고
   *
   * - [네이버 개발자센터](https://developers.naver.com/main)
   * - [카카오 개발자센터](https://developers.kakao.com/)
   * - [라인 개발자센터](https://developers.line.biz/en/)
   * - [페이스북 개발자센터](https://developers.facebook.com/)
   * - [페이코 개발자센터](https://developers.payco.com/)
   */
  "delete-oauth-openid": {
    parameters: {
      query: {
        /** @description 간편 로그인 제공사(ncp_naver, ncp_kakao, ncp_kakao-sync, ncp_line, ncp_facebook, ncp_payco) */
        provider: string;
      };
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    responses: {
      /** @description 204 */
      204: {
        content: never;
      };
    };
  };
  /**
   * AccessToken 발급하기
   * @description
   * ## 부가설명 및 특이사항
   * * 샵바이 회원의 AccessToken 발급하기 위한 API 입니다.
   *
   * * 회원 엑세스 토큰의 기본 유효 기간은 12시간이며,
   *
   * * 자동 로그인을 위해 **keepLogin**을 **true**로 요청하면 유효 기간이 90일인 토큰이 생성됩니다.
   *
   * * 유효 기간이 길기 때문에 토큰 탈취시 보안에 취약할 수 있습니다.
   *
   * ## ID/PW 기반 외부 회원 연동
   *
   * * body 값 중 provider 를 shopbystore 로 보내야합니다.
   *
   * * 자세한 사항은 아래 가이드와 서비스 담당자에게 문의해주시길 바랍니다.
   *
   * * [자체회원 연동 가이드 중 ID/PW 기반 연동](https://shopby.works/support/recommendedContents/23046)
   *
   * ## 자체 회원 연동 필수값
   *
   * | provider |
   * | :------: |
   * | shopbystore |
   *
   * ### 캡챠(추후 서비스 제공 예정)
   * * 10회 이상 로그인 실패 등 사유로 로그인이 실패할 경우, 캡챠 기능에 사용할 수 있는 key 값이 에러와 함께 리턴됩니다.
   *
   * * 해당 key 값을 이용하여, 차후 캡챠 기능에 사용할 수 있습니다.
   *
   * *휴면계정일 경우, dormantMemberResponse에 실린 정보를 이용하여, 휴면 해제에 활용할 수 있습니다.
   */
  "post-oauth-token-1-success": {
    parameters: {
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["oauth-token1261496601"];
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["oauth-token-1916652149"];
        };
      };
      /** @description 400 */
      400: {
        content: {
          "application/json": components["schemas"]["oauth-token-1364515864"];
        };
      };
    };
  };
  /**
   * AccessToken 반환하기
   * @description
   * ## 부가설명 및 특이사항
   * AccessToken 만료 처리(ncp, payco 회원 동일)를 하기 위한 API 입니다.
   *
   * 회원의 엑세스 토큰을 삭제하여 로그아웃합니다.
   */
  RevokeToken: {
    parameters: {
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /** @description 회원 엑세스 토큰 */
        accessToken: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    responses: {
      /** @description 204 */
      204: {
        content: never;
      };
    };
  };
  /**
   * SNS 연동하기
   * @description
   * ## 부가설명 및 특이사항
   * 일반 회원에 SNS 연동을 하는 API 입니다.
   *
   * 외부 IdP(Identity Provider, 아이디 제공자)를 이용하는 회원이 로그인할 때 사용합니다.
   *
   * ## 간편 로그인
   * 각 개발자센터에서 쇼핑몰에 맞는 올바른 설정을 먼저 진행해야합니다.
   *
   * [간편 로그인 가이드](https://shopby.works/guide/skin/dev-cover/easy-login?lv=11)
   *
   * ## 간편 로그인 유형별 필수값
   *
   * | provider | code  | redirectUri | state |
   * | :------: | :---: | :---: | :---: |
   * | ncp_naver    |   O   |   X   |   △   |
   * | ncp_kakao    |   O   |   O   |   X   |
   * | ncp_kakao-sync    |   O   |   X   |   △   |
   * | ncp_line     |   O   |   O   |   O   |
   * | ncp_facebook |   O   |   O   |   X   |
   * | ncp_payco    |   O   |   X   |   △   |
   *
   * ## 참고
   *
   * - [네이버 개발자센터](https://developers.naver.com/main)
   * - [카카오 개발자센터](https://developers.kakao.com/)
   * - [라인 개발자센터](https://developers.line.biz/en/)
   * - [페이스북 개발자센터](https://developers.facebook.com/)
   * - [페이코 개발자센터](https://developers.payco.com/)
   */
  "link-oauth-openid": {
    parameters: {
      query: {
        /** @description 간편 로그인 제공사(ncp_naver, ncp_kakao, ncp_kakao-sync, ncp_line, ncp_facebook, ncp_payco) */
        provider: string;
        /** @description IdP(Identity Provider, 아이디 제공자)로부터 받은 인증코드(authorization code) - 간편 로그인 사용시 필수 */
        code?: string;
        /** @description IdP(Identity Provider, 아이디 제공자) 엑세스 토큰 - 연동형 IdP(Identity Provider, 아이디 제공자) 사용시 필수 */
        openAccessToken?: string;
        /** @description 개발자센터에 등록된 redirect URI */
        redirectUri?: string;
        /** @description CSRF 공격을 방지하기 위해 애플리케이션에서 생성한 상태 토큰 */
        state?: string;
        /** @description 자동로그인 여부(**true**로 요청하면 유효 기간이 90일인 토큰이 생성) */
        keepLogin?: string;
        /** @description 클라이언트 플랫폼(PC, MOBILE_WEB, AOS, IOS) */
        platformType?: string;
      };
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["oauth-openid-link-1411956587"];
        };
      };
    };
  };
  /**
   * SNS 연동 내역 조회
   * @description
   * ## 부가설명 및 특이사항
   * 연동된 SNS를 조회하는 API 입니다.
   */
  "get-oauth-list": {
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["oauth-openid-list-1563013012"];
        };
      };
    };
  };
  /**
   * AccessToken 조회하기
   * @description
   * ## 부가설명 및 특이사항
   * OpenId 서비스 제공자의 AccessToken 조회하기 위한 API 입니다.
   *
   * 응답의 프로바이더 토큰 정보는 현재 로그인한 회원이 간편로그인을 통한 인증을 할 때 사용한 토큰 정보입니다.
   *
   * 따라서 아이디와 비밀번호를 사용해 로그인한 사용자는 응답이 모두 null 입니다.
   *
   * 또한 서버는 프로바이더 토큰을 로그인 외에는 사용하지 않기 때문에 프로바이더 토큰 갱신 등은 사용자가 직접 해야 합니다.
   */
  "get-openid-token": {
    parameters: {
      header: {
        /**
         * @description API 버전
         * @example 1.0
         */
        Version: string;
        /**
         * @description 쇼핑몰 클라이언트 아이디
         * @example testClientId
         */
        clientId: string;
        /** @description 회원 엑세스 토큰 */
        accessToken: string;
        /**
         * @description 클라이언트 플랫폼 (PC, MOBILE_WEB, AOS, IOS)
         * @example PC
         */
        platform: string;
      };
    };
    responses: {
      /** @description 200 */
      200: {
        content: {
          "application/json": components["schemas"]["openid-token-1732903447"];
        };
      };
    };
  };
}
